{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/Rust/nub-ide/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save, open } from '@tauri-apps/api/dialog';\nimport { readTextFile } from '@tauri-apps/api/fs';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [filePath, setFilePath] = useState(null);\n  const [fileContent, setFileContent] = useState('');\n\n  // Функція для зміни стану відображення терміналу\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n\n  // Функція для зміни стану відображення довідки\n  const toggleHelp = () => {\n    setHelpVisible(!helpVisible);\n  };\n\n  // Функція для закриття довідки\n  const closeHelp = () => {\n    setHelpVisible(false);\n  };\n\n  // Функція для збереження вмісту файлу\n  const saveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        savePath = await save({\n          filters: [{\n            name: 'Niklang.nl',\n            extensions: ['nl']\n          }, {\n            name: 'Based.based',\n            extensions: ['based']\n          }, {\n            name: 'Udav.udav',\n            extensions: ['udav']\n          }, {\n            name: 'Other',\n            extensions: ['**']\n          }]\n        });\n        if (!savePath) return;\n        setFilePath(savePath);\n      }\n      await invoke(\"save_file\", {\n        path: savePath,\n        contents: fileContent\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція відкриття файлу\n  // const openFileContent = async () => {\n  //     try\n  //     {\n  //         const selectedPath = await open({\n  //             multiple: false,\n  //             title: \"Open file\",\n  //             filters: [\n  //                 { name: 'Niklang.nl', extensions: ['nl']},\n  //                 { name: 'Based.based', extensions: ['based']},\n  //                 { name: 'Udav.udav', extensions: ['udav']},\n  //                 { name: 'Other', extensions: ['**']}\n  //             ]\n  //         });\n  //         // console.log(selectedPath);\n  //         const fileContent = await readTextFile(selectedPath);\n  //         // console.log(fileContent);\n  //     } catch(err)\n  //     {\n  //         console.error(err);\n  //     }\n  // }\n  const openFileContent = async () => {\n    try {\n      const selectedPath = await open({\n        multiple: false,\n        title: \"Open file\",\n        filters: [{\n          name: 'Niklang.nl',\n          extensions: ['nl']\n        }, {\n          name: 'Based.based',\n          extensions: ['based']\n        }, {\n          name: 'Udav.udav',\n          extensions: ['udav']\n        }, {\n          name: 'Other',\n          extensions: ['**']\n        }]\n      });\n      if (!selectedPath) return;\n      const content = await readTextFile(selectedPath);\n      setFileContent(content);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBarMenu, {\n      toggleTerminal: toggleTerminal,\n      toggleHelp: toggleHelp,\n      onSave: saveFileContents,\n      onOpen: openFileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      onSave: saveFileContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), terminalVisible && /*#__PURE__*/_jsxDEV(Terminal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }, this), helpVisible && /*#__PURE__*/_jsxDEV(Help, {\n      onClose: closeHelp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"xLWUHaTs6Zfm/kL5qBBzKygIrxE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","invoke","save","open","readTextFile","TopBarMenu","CodeEditor","Help","Terminal","jsxDEV","_jsxDEV","App","_s","terminalVisible","setTerminalVisible","helpVisible","setHelpVisible","filePath","setFilePath","fileContent","setFileContent","toggleTerminal","toggleHelp","closeHelp","saveFileContents","savePath","filters","name","extensions","path","contents","err","console","error","openFileContent","selectedPath","multiple","title","content","className","children","onSave","onOpen","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/Rust/nub-ide/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save, open } from '@tauri-apps/api/dialog';\nimport { readTextFile } from '@tauri-apps/api/fs';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\n\nfunction App() {\n    const [terminalVisible, setTerminalVisible] = useState(false);\n    const [helpVisible, setHelpVisible] = useState(false);\n    const [filePath, setFilePath] = useState(null);\n    const [fileContent, setFileContent] = useState('');\n\n    // Функція для зміни стану відображення терміналу\n    const toggleTerminal = () => {\n        setTerminalVisible(!terminalVisible);\n    };\n\n    // Функція для зміни стану відображення довідки\n    const toggleHelp = () => {\n        setHelpVisible(!helpVisible);\n    };\n\n    // Функція для закриття довідки\n    const closeHelp = () => {\n        setHelpVisible(false);\n    };\n\n    // Функція для збереження вмісту файлу\n    const saveFileContents = async (fileContent, savePath = filePath) => {\n        try {\n            if (!savePath) {\n                savePath = await save({\n                    filters: [\n                        { name: 'Niklang.nl', extensions: ['nl']},\n                        { name: 'Based.based', extensions: ['based']},\n                        { name: 'Udav.udav', extensions: ['udav']},\n                        { name: 'Other', extensions: ['**']}\n                    ]\n                });\n                if (!savePath) return;\n                setFilePath(savePath);\n            }\n            await invoke(\"save_file\", { path: savePath, contents: fileContent });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    // Функція відкриття файлу\n    // const openFileContent = async () => {\n    //     try\n    //     {\n    //         const selectedPath = await open({\n    //             multiple: false,\n    //             title: \"Open file\",\n    //             filters: [\n    //                 { name: 'Niklang.nl', extensions: ['nl']},\n    //                 { name: 'Based.based', extensions: ['based']},\n    //                 { name: 'Udav.udav', extensions: ['udav']},\n    //                 { name: 'Other', extensions: ['**']}\n    //             ]\n    //         });\n    //         // console.log(selectedPath);\n    //         const fileContent = await readTextFile(selectedPath);\n    //         // console.log(fileContent);\n    //     } catch(err)\n    //     {\n    //         console.error(err);\n    //     }\n    // }\n    const openFileContent = async () => {\n        try {\n            const selectedPath = await open({\n                multiple: false,\n                title: \"Open file\",\n                filters: [\n                    { name: 'Niklang.nl', extensions: ['nl']},\n                    { name: 'Based.based', extensions: ['based']},\n                    { name: 'Udav.udav', extensions: ['udav']},\n                    { name: 'Other', extensions: ['**']}\n                ]\n            });\n            if (!selectedPath) return;\n            const content = await readTextFile(selectedPath);\n            setFileContent(content);\n        } catch(err) {\n            console.error(err);\n        }\n    }\n    \n\n    return (\n        <div className=\"App\">\n            <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} onOpen={openFileContent} />\n            <CodeEditor onSave={saveFileContents} />\n            {terminalVisible && <Terminal />}\n            {helpVisible && <Help onClose={closeHelp} />}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}