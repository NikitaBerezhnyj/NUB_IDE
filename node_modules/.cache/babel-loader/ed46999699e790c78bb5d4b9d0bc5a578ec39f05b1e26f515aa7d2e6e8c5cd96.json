{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/Rust/nub-ide/src/App.js\",\n  _s = $RefreshSig$();\n// import Top_Bar_Menu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import Code_Editor from './Components/Code_Editor_Component/Code_Editor';\n// import File_Explorer from './Components/File_Explorer_Component/File_Explorer';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import React, { useState, useEffect } from 'react';\n// import { Container, Row, Col } from 'react-bootstrap';\n// import './App.css';\n\n// function App() {\n//   const [terminalVisible, setTerminalVisible] = useState(false);\n\n//   const toggleTerminal = () => {\n//     setTerminalVisible(!terminalVisible);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Top_Bar_Menu toggleTerminal={toggleTerminal} />\n//       <Code_Editor />\n//       {/* <File_Explorer /> */}\n//       {terminalVisible && <Terminal />}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport Top_Bar_Menu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport Code_Editor from './Components/Code_Editor_Component/Code_Editor';\nimport File_Explorer from './Components/File_Explorer_Component/File_Explorer';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.ctrlKey && event.key === '`') {\n        // Перевірка чи натиснута Ctrl і `\n        toggleTerminal(); // Викликаємо toggleTerminal для зміни стану терміналу\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown); // Додаємо обробник подій для подій клавіатури\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown); // Прибираємо обробник подій після розмонтування компонента\n    };\n  }, []); // Передаємо пустий масив залежностей, щоб забезпечити виклик цього ефекту тільки після монтування компонента\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Top_Bar_Menu, {\n      toggleTerminal: toggleTerminal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Code_Editor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), terminalVisible && /*#__PURE__*/_jsxDEV(Terminal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m1jWXJKcN/n0BeSygBx8GvLc3tE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Top_Bar_Menu","Code_Editor","File_Explorer","Terminal","Container","Row","Col","jsxDEV","_jsxDEV","App","_s","terminalVisible","setTerminalVisible","toggleTerminal","handleKeyDown","event","ctrlKey","key","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/Rust/nub-ide/src/App.js"],"sourcesContent":["// import Top_Bar_Menu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import Code_Editor from './Components/Code_Editor_Component/Code_Editor';\n// import File_Explorer from './Components/File_Explorer_Component/File_Explorer';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import React, { useState, useEffect } from 'react';\n// import { Container, Row, Col } from 'react-bootstrap';\n// import './App.css';\n\n// function App() {\n//   const [terminalVisible, setTerminalVisible] = useState(false);\n\n//   const toggleTerminal = () => {\n//     setTerminalVisible(!terminalVisible);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Top_Bar_Menu toggleTerminal={toggleTerminal} />\n//       <Code_Editor />\n//       {/* <File_Explorer /> */}\n//       {terminalVisible && <Terminal />}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport Top_Bar_Menu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport Code_Editor from './Components/Code_Editor_Component/Code_Editor';\nimport File_Explorer from './Components/File_Explorer_Component/File_Explorer';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './App.css';\n\nfunction App() {\n  const [terminalVisible, setTerminalVisible] = useState(false);\n\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.ctrlKey && event.key === '`') { // Перевірка чи натиснута Ctrl і `\n        toggleTerminal(); // Викликаємо toggleTerminal для зміни стану терміналу\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown); // Додаємо обробник подій для подій клавіатури\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown); // Прибираємо обробник подій після розмонтування компонента\n    };\n  }, []); // Передаємо пустий масив залежностей, щоб забезпечити виклик цього ефекту тільки після монтування компонента\n\n  return (\n    <div className=\"App\">\n      <Top_Bar_Menu toggleTerminal={toggleTerminal} />\n      <Code_Editor />\n      {/* <File_Explorer /> */}\n      {terminalVisible && <Terminal />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,kDAAkD;AAC3E,OAAOC,WAAW,MAAM,gDAAgD;AACxE,OAAOC,aAAa,MAAM,oDAAoD;AAC9E,OAAOC,QAAQ,MAAM,0CAA0C;AAC/D,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3BD,kBAAkB,CAAC,CAACD,eAAe,CAAC;EACtC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,GAAG,KAAK,GAAG,EAAE;QAAE;QACxCJ,cAAc,CAAC,CAAC,CAAC,CAAC;MACpB;IACF,CAAC;IAEDK,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,aAAa,CAAC,CAAC,CAAC;;IAEnD,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,aAAa,CAAC,CAAC,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA,CAACR,YAAY;MAACa,cAAc,EAAEA;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDlB,OAAA,CAACP,WAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEdf,eAAe,iBAAIH,OAAA,CAACL,QAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAAChB,EAAA,CA7BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}