{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save, open } from '@tauri-apps/api/dialog';\nimport { readTextFile } from '@tauri-apps/api/fs';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport StartScreen from './Components/Start_Screen_Component/StartScreen';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [startVisible, setStartVisible] = useState(true);\n  const [filePath, setFilePath] = useState(null);\n  const [programmingLanguage, setProgrammingLanguage] = useState('');\n\n  // Функція для визначення мови програмування за шляхом файлу\n  const getProgrammingLanguage = filePath => {\n    const extension = filePath.split('.').pop();\n    switch (extension) {\n      case 'nl':\n        return 'NikLang';\n      case 'udav':\n        return 'Udav';\n      case 'based':\n        return 'Based';\n      default:\n        return 'Other';\n    }\n  };\n\n  // Функція для зміни стану відображення терміналу\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n\n  // Функція для зміни стану відображення довідки\n  const toggleHelp = () => {\n    setHelpVisible(!helpVisible);\n  };\n\n  // Прив'язка відкриття та закриття терміналу на Ctrl + `\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.ctrlKey && event.key === '`') {\n        event.preventDefault();\n        toggleTerminal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleTerminal]);\n\n  // Функція для збереження вмісту файлу\n  const saveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        savePath = await save({\n          filters: [{\n            name: 'Text file',\n            extensions: ['**']\n          }, {\n            name: 'Niklang.nl',\n            extensions: ['nl']\n          }, {\n            name: 'Based.based',\n            extensions: ['based']\n          }, {\n            name: 'Udav.udav',\n            extensions: ['udav']\n          }]\n        });\n        if (!savePath) return;\n        setFilePath(savePath);\n      }\n      await invoke(\"save_file\", {\n        path: savePath,\n        contents: fileContent\n      });\n      if (savePath) {\n        setStartVisible(false);\n      } else {\n        setStartVisible(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція для створення нового файлу\n  const newFileContents = async () => {\n    try {\n      let newFilePath = await save({\n        filters: [{\n          name: 'Text File',\n          extensions: ['**']\n        }, {\n          name: 'Niklang.nl',\n          extensions: ['nl']\n        }, {\n          name: 'Based.based',\n          extensions: ['based']\n        }, {\n          name: 'Udav.udav',\n          extensions: ['udav']\n        }]\n      });\n      if (!newFilePath) return;\n      setFilePath(newFilePath);\n      const language = getProgrammingLanguage(newFilePath);\n      setProgrammingLanguage(language);\n      await invoke(\"create_file\", {\n        path: newFilePath\n      });\n      setStartVisible(false);\n      const textarea = document.getElementById('textarea');\n      textarea.value = '';\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція відкриття файлу\n  // const openFileContent = async () => {\n  //     try {\n  //         const selectedPath = await open({\n  //             multiple: false,\n  //             title: \"Open file\",\n  //             filters: [\n  //                 { name: 'Text File', extensions: ['**']},\n  //                 { name: 'Niklang.nl', extensions: ['nl']},\n  //                 { name: 'Based.based', extensions: ['based']},\n  //                 { name: 'Udav.udav', extensions: ['udav']},\n  //             ]\n  //         });\n  //         if (!selectedPath) return;\n  //         const fileContent = await readTextFile(selectedPath);\n  //         setFilePath(selectedPath);\n  //         const language = getProgrammingLanguage(selectedPath);\n  //         setProgrammingLanguage(language);\n  //         const textarea = document.getElementById('textarea');\n  //         textarea.value = fileContent;\n  //         // Оновити lineNumber\n  //         if (selectedPath) {\n  //             setStartVisible(false);\n  //         } else {\n  //             setStartVisible(true);\n  //         }\n  //     } catch (err) {\n  //         console.error(err);\n  //     }\n  // }\n  const openFileContent = async () => {\n    try {\n      const selectedPath = await open({\n        multiple: false,\n        title: \"Open file\",\n        filters: [{\n          name: 'Text File',\n          extensions: ['**']\n        }, {\n          name: 'Niklang.nl',\n          extensions: ['nl']\n        }, {\n          name: 'Based.based',\n          extensions: ['based']\n        }, {\n          name: 'Udav.udav',\n          extensions: ['udav']\n        }]\n      });\n      console.log(selectedPath);\n      if (!selectedPath) return;\n      const fileContent = await readTextFile(selectedPath);\n      console.log(fileContent);\n      setFilePath(selectedPath);\n      const language = getProgrammingLanguage(selectedPath);\n      setProgrammingLanguage(language);\n      const textarea = document.getElementById('textarea');\n      textarea.value = fileContent;\n      // Оновити lineNumber\n      if (selectedPath) {\n        setStartVisible(false);\n      } else {\n        setStartVisible(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBarMenu, {\n      toggleTerminal: toggleTerminal,\n      toggleHelp: toggleHelp,\n      onSave: saveFileContents,\n      onOpen: openFileContent,\n      onNew: newFileContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      programming_language: programmingLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), startVisible && /*#__PURE__*/_jsxDEV(StartScreen, {\n      onNew: newFileContents,\n      onOpen: openFileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 30\n    }, this), terminalVisible && /*#__PURE__*/_jsxDEV(Terminal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }, this), helpVisible && /*#__PURE__*/_jsxDEV(Help, {\n      onClose: toggleHelp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"W1AT37bjKlebgjkvWxM02IOS6PU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","invoke","save","open","readTextFile","TopBarMenu","StartScreen","CodeEditor","Help","Terminal","jsxDEV","_jsxDEV","App","_s","terminalVisible","setTerminalVisible","helpVisible","setHelpVisible","startVisible","setStartVisible","filePath","setFilePath","programmingLanguage","setProgrammingLanguage","getProgrammingLanguage","extension","split","pop","toggleTerminal","toggleHelp","handleKeyDown","event","ctrlKey","key","preventDefault","window","addEventListener","removeEventListener","saveFileContents","fileContent","savePath","filters","name","extensions","path","contents","err","console","error","newFileContents","newFilePath","language","textarea","document","getElementById","value","openFileContent","selectedPath","multiple","title","log","className","children","onSave","onOpen","onNew","fileName","_jsxFileName","lineNumber","columnNumber","programming_language","onClose","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save, open } from '@tauri-apps/api/dialog';\nimport { readTextFile } from '@tauri-apps/api/fs';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport StartScreen from './Components/Start_Screen_Component/StartScreen';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\n\nfunction App() {\n    const [terminalVisible, setTerminalVisible] = useState(false);\n    const [helpVisible, setHelpVisible] = useState(false);\n    const [startVisible, setStartVisible] = useState(true);\n    const [filePath, setFilePath] = useState(null);\n    const [programmingLanguage, setProgrammingLanguage] = useState('');\n\n    // Функція для визначення мови програмування за шляхом файлу\n    const getProgrammingLanguage = (filePath) => {\n        const extension = filePath.split('.').pop();\n        switch (extension) {\n            case 'nl':\n                return 'NikLang';\n            case 'udav':\n                return 'Udav';\n            case 'based':\n                return 'Based';\n            default:\n                return 'Other';\n        }\n    };\n\n    // Функція для зміни стану відображення терміналу\n    const toggleTerminal = () => {\n        setTerminalVisible(!terminalVisible);\n    };\n\n    // Функція для зміни стану відображення довідки\n    const toggleHelp = () => {\n        setHelpVisible(!helpVisible);\n    };\n\n    // Прив'язка відкриття та закриття терміналу на Ctrl + `\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.ctrlKey && event.key === '`') {\n                event.preventDefault();\n                toggleTerminal();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => { window.removeEventListener('keydown', handleKeyDown); };\n    }, [toggleTerminal]);\n\n    // Функція для збереження вмісту файлу\n    const saveFileContents = async (fileContent, savePath = filePath) => {\n        try {\n            if (!savePath) {\n                savePath = await save({\n                    filters: [\n                        { name: 'Text file', extensions: ['**']},\n                        { name: 'Niklang.nl', extensions: ['nl']},\n                        { name: 'Based.based', extensions: ['based']},\n                        { name: 'Udav.udav', extensions: ['udav']},\n                    ]\n                });\n                if (!savePath) return;\n                setFilePath(savePath);\n            }\n            await invoke(\"save_file\", { path: savePath, contents: fileContent });\n            if (savePath) {\n                setStartVisible(false);\n            } else {\n                setStartVisible(true);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    // Функція для створення нового файлу\n    const newFileContents = async () => {\n        try {\n            let newFilePath = await save({\n                filters: [\n                    { name: 'Text File', extensions: ['**']},\n                    { name: 'Niklang.nl', extensions: ['nl']},\n                    { name: 'Based.based', extensions: ['based']},\n                    { name: 'Udav.udav', extensions: ['udav']},\n                ]\n            });\n            if (!newFilePath) return;\n            setFilePath(newFilePath);\n            const language = getProgrammingLanguage(newFilePath);\n            setProgrammingLanguage(language);\n            await invoke(\"create_file\", { path: newFilePath });\n            setStartVisible(false);\n            const textarea = document.getElementById('textarea');\n            textarea.value = '';\n        } catch (err) {\n            console.error(err);\n        }\n    };    \n\n    // Функція відкриття файлу\n    // const openFileContent = async () => {\n    //     try {\n    //         const selectedPath = await open({\n    //             multiple: false,\n    //             title: \"Open file\",\n    //             filters: [\n    //                 { name: 'Text File', extensions: ['**']},\n    //                 { name: 'Niklang.nl', extensions: ['nl']},\n    //                 { name: 'Based.based', extensions: ['based']},\n    //                 { name: 'Udav.udav', extensions: ['udav']},\n    //             ]\n    //         });\n    //         if (!selectedPath) return;\n    //         const fileContent = await readTextFile(selectedPath);\n    //         setFilePath(selectedPath);\n    //         const language = getProgrammingLanguage(selectedPath);\n    //         setProgrammingLanguage(language);\n    //         const textarea = document.getElementById('textarea');\n    //         textarea.value = fileContent;\n    //         // Оновити lineNumber\n    //         if (selectedPath) {\n    //             setStartVisible(false);\n    //         } else {\n    //             setStartVisible(true);\n    //         }\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // }\n    const openFileContent = async () => {\n        try {\n            const selectedPath = await open({\n                multiple: false,\n                title: \"Open file\",\n                filters: [\n                    { name: 'Text File', extensions: ['**']},\n                    { name: 'Niklang.nl', extensions: ['nl']},\n                    { name: 'Based.based', extensions: ['based']},\n                    { name: 'Udav.udav', extensions: ['udav']},\n                ]\n            });\n            console.log(selectedPath);\n            if (!selectedPath) return;\n            const fileContent = await readTextFile(selectedPath);\n            console.log(fileContent);\n            setFilePath(selectedPath);\n            const language = getProgrammingLanguage(selectedPath);\n            setProgrammingLanguage(language);\n            const textarea = document.getElementById('textarea');\n            textarea.value = fileContent;\n            // Оновити lineNumber\n            if (selectedPath) {\n                setStartVisible(false);\n            } else {\n                setStartVisible(true);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }    \n        \n\n    return (\n        <div className=\"App\">\n            <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} onOpen={openFileContent} onNew={newFileContents} />\n            <CodeEditor programming_language={programmingLanguage} />\n            {startVisible && <StartScreen onNew={newFileContents} onOpen={openFileContent} />}\n            {terminalVisible && <Terminal />}\n            {helpVisible && <Help onClose={toggleHelp} />}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}