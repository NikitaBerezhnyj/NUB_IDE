{"ast":null,"code":"\"use client\";\n\nimport { jsx as e, jsxs as t } from \"react/jsx-runtime\";\nimport { useLayoutEffect as n, useEffect as o, useRef as r, memo as i, useState as l, useImperativeHandle as s, useMemo as u, forwardRef as c, useCallback as d } from \"react\";\nfunction a(e, t, n, o) {\n  var r = e.ownerDocument;\n  o || (o = r.createRange());\n  let i,\n    l,\n    s,\n    u = r.createNodeIterator(e, NodeFilter.SHOW_TEXT, null, !1),\n    c = {},\n    d = {};\n  for (; i = u.nextNode();) l = i.nodeValue, s = l.length, !c.node && s > t && (c.node = i, c.offset = t), !d.node && s >= n && (d.node = i, d.offset = n), t -= s, n -= s;\n  return c.node && o.setStart(c.node, c.offset), d.node && o.setEnd(d.node, d.offset), o;\n}\nconst p = \"current\",\n  h = e(\"span\", {\n    style: {\n      color: \"transparent\"\n    },\n    children: \"â€‹\"\n  }),\n  f = [\"direction\", \"padding\", \"paddingTop\", \"paddingBottom\", \"paddingLeft\", \"paddingRight\", \"margin\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\", \"border\", \"borderWidth\", \"borderTopWidth\", \"borderBottomWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderStyle\", \"borderTopStyle\", \"borderBottomStyle\", \"borderLeftStyle\", \"borderRightStyle\", \"fontSize\", \"fontFamily\", \"fontStyle\", \"fontVariant\", \"fontWeight\", \"fontStretch\", \"fontSizeAdjust\", \"textAlign\", \"textTransform\", \"textIndent\", \"letterSpacing\", \"wordSpacing\", \"lineHeight\", \"whiteSpace\", \"wordBreak\", \"overflowWrap\", \"tabSize\", \"MozTabSize\"],\n  g = (e, t) => e.getPropertyValue(t),\n  b = (e, t, n) => {\n    e.setProperty(t, n);\n  },\n  m = (e, t) => {\n    const n = g(e, t);\n    return n ? parseInt(n, 10) : 0;\n  },\n  v = e => getComputedStyle(e),\n  S = e => \"string\" == typeof e && e.endsWith(\"%\"),\n  y = e => m(e, \"padding-top\") + m(e, \"padding-bottom\") + m(e, \"border-top\") + m(e, \"border-bottom\"),\n  x = e => m(e, \"padding-left\") + m(e, \"padding-right\") + m(e, \"border-left\") + m(e, \"border-right\"),\n  w = (e, t, n) => {\n    const o = \"pointer-events\",\n      r = e.style,\n      i = t.style,\n      l = g(r, o),\n      s = g(i, o);\n    b(r, o, \"none\"), b(i, o, \"auto\");\n    const u = document.elementFromPoint(n.clientX, n.clientY);\n    return b(r, o, l), b(i, o, s), _(u, t) ? u : null;\n  },\n  _ = (e, t) => !!e && t !== e && t.contains(e),\n  M = (e, t, n) => {\n    e.dispatchEvent(new MouseEvent(t, n));\n  },\n  k = (e, t) => {\n    M(e, t.type, t);\n  },\n  z = (e, t) => {\n    e && M(e, \"mouseout\", t);\n  },\n  T = e => {\n    e.stopPropagation();\n  },\n  C = (e, t, n, o) => {\n    const r = v(e),\n      i = e.style,\n      l = t.style;\n    n[p] || (n[p] = g(r, \"color\")), f.forEach(e => {\n      l[e] = r[e];\n    }), i.color = l.borderColor = \"transparent\", i.caretColor = (null == o ? void 0 : o.caretColor) || n[p];\n  },\n  E = (e, t, n) => (e.addEventListener(t, n), () => {\n    e.removeEventListener(t, n);\n  }),\n  A = (e, t) => {\n    let n,\n      o = [null, null];\n    const r = {\n      t() {\n        setTimeout(() => {\n          t((() => {\n            const e = r.o(),\n              t = r.i();\n            return o[0] === e && o[1] === t || (o = [e, t]), o;\n          })());\n        });\n      },\n      l(e) {\n        n = e;\n      },\n      o() {\n        const t = e[p];\n        if (!t) return 0;\n        const o = t.selectionStart;\n        return n ? Math.min(o, t.selectionEnd - n.data.length) : o;\n      },\n      i() {\n        const t = e[p];\n        if (!t) return 0;\n        const o = t.selectionEnd;\n        return n ? Math.min(o, t.selectionStart + n.data.length) : o;\n      }\n    };\n    return r;\n  },\n  W = \"undefined\" != typeof window ? n : o,\n  R = e => {\n    const t = r();\n    return t[p] || (t[p] = e());\n  },\n  j = (e, t, n, o, r) => {\n    let i = null;\n    const l = new ResizeObserver(([t]) => {\n        const {\n          contentRect: {\n            width: n,\n            height: r\n          },\n          borderBoxSize: i\n        } = t;\n        if (i && i[0]) return void o([n, r, i[0].inlineSize - n, i[0].blockSize - r]);\n        const l = v(e);\n        o([n, r, x(l), y(l)]);\n      }),\n      s = E(e, \"focus\", () => {\n        r(!0);\n      }),\n      u = E(e, \"blur\", () => {\n        r(!1);\n      }),\n      c = E(e, \"scroll\", () => {\n        const {\n          scrollTop: n,\n          scrollLeft: o\n        } = e;\n        t.style.transform = `translate(${-o}px, ${-n}px)`;\n      }),\n      d = E(e, \"mousedown\", o => {\n        n.t();\n        const r = E(document, \"mouseup\", () => {\n            n.t(), r();\n          }),\n          i = w(e, t, o);\n        i && k(i, o);\n      }),\n      a = E(e, \"mouseup\", n => {\n        const o = w(e, t, n);\n        o && k(o, n);\n      }),\n      p = E(e, \"mousemove\", n => {\n        const o = w(e, t, n);\n        ((e, t, n) => {\n          e && k(e, n), t !== e && (z(t, n), e && M(e, \"mouseover\", n));\n        })(o, i, n), i = o;\n      }),\n      h = E(e, \"mouseleave\", e => {\n        z(i, e), i = null;\n      }),\n      f = E(e, \"click\", n => {\n        const o = w(e, t, n);\n        o && k(o, n);\n      }),\n      g = E(e, \"input\", () => {\n        n.t();\n      }),\n      b = E(e, \"compositionstart\", e => {\n        n.l(e);\n      }),\n      m = E(e, \"compositionupdate\", e => {\n        n.l(e);\n      }),\n      S = E(e, \"compositionend\", () => {\n        n.l();\n      });\n    return l.observe(e), () => {\n      s(), u(), c(), d(), a(), p(), h(), f(), g(), b(), m(), S(), l.disconnect();\n    };\n  },\n  B = /*#__PURE__*/i(({\n    u: e,\n    p: n,\n    h: o,\n    g: r\n  }) => {\n    const [i, c] = l(\"\");\n    return s(n, () => c, []), t(\"div\", {\n      ref: e,\n      \"aria-hidden\": !0,\n      style: u(() => ({\n        width: r,\n        transform: \"translate(0px, 0px)\",\n        pointerEvents: \"none\",\n        userSelect: \"none\",\n        msUserSelect: \"none\",\n        WebkitUserSelect: \"none\",\n        boxSizing: \"content-box\",\n        textSizeAdjust: \"100%\",\n        WebkitTextSizeAdjust: \"100%\",\n        MozTextSizeAdjust: \"100%\"\n      }), [r]),\n      onClick: T,\n      onMouseDown: T,\n      onMouseUp: T,\n      onMouseOver: T,\n      onMouseOut: T,\n      onMouseMove: T,\n      children: [u(() => o ? o(i) : i, [i, o]), h]\n    });\n  }),\n  D = /*#__PURE__*/c(({\n    children: n,\n    autoHeight: i,\n    style: c,\n    onChange: h,\n    onKeyDown: f,\n    onSelectionChange: g,\n    ...b\n  }, m) => {\n    const v = r(null),\n      y = r(null),\n      x = r(null),\n      [[w, _, M, k], z] = l([0, 0, 0, 0]),\n      [T, E] = l(!1),\n      D = r(\"\"),\n      [[L, U], O] = l([null, null]),\n      K = R(() => A(v, O)),\n      $ = w + M,\n      H = _ + k,\n      I = !!($ + H);\n    return s(m, () => {\n      const e = v[p],\n        t = {\n          get selectionStart() {\n            return K.o();\n          },\n          get selectionEnd() {\n            return K.i();\n          },\n          setRangeText(t, n, o, r) {\n            e.setRangeText ? e.setRangeText(t, n, o, r) : (e.focus(), e.selectionStart = n, e.selectionEnd = o, document.execCommand(\"insertText\", !1, t)), e.dispatchEvent(new Event(\"input\", {\n              bubbles: !0\n            }));\n          }\n        };\n      return new Proxy(e, {\n        get(e, n) {\n          if (t[n]) return t[n];\n          const o = e[n];\n          return \"function\" == typeof o ? o.bind(e) : o;\n        },\n        set: (e, t, n) => (e[t] = n, !0)\n      });\n    }, []), W(() => {\n      const e = v[p],\n        t = y[p];\n      if (e && t) return j(e, t, K, z, E);\n    }, []), W(() => {\n      const e = v[p];\n      e && x[p](e.value);\n    }, [b.value]), W(() => {\n      const e = v[p],\n        t = y[p];\n      t && e && C(e, t, D, c);\n    }, [c]), o(() => {\n      if (null != L && null != U && g) if (T) {\n        const e = a(y[p], L, L + 1).getBoundingClientRect();\n        g({\n          focused: !0,\n          top: e.top,\n          left: e.left,\n          height: e.height,\n          selectionStart: L,\n          selectionEnd: U\n        });\n      } else g({\n        focused: !1,\n        selectionStart: L,\n        selectionEnd: U\n      });\n    }, [T, L, U]), o(() => {\n      const e = v[p];\n      i && e && (e.style.height = \"auto\", e.style.height = e.scrollHeight + \"px\");\n    }), t(\"div\", {\n      style: u(() => {\n        let e = $,\n          t = H;\n        return c && (S(c.width) && (e = c.width), S(c.height) && (t = c.height)), {\n          display: \"inline-block\",\n          position: \"relative\",\n          width: e,\n          height: t\n        };\n      }, [$, H, c]),\n      children: [e(\"div\", {\n        style: u(() => {\n          const e = {\n            position: \"absolute\",\n            overflow: \"hidden\",\n            top: 0,\n            left: 0,\n            width: $,\n            height: H\n          };\n          return c ? ([\"background\", \"backgroundColor\"].forEach(t => {\n            c[t] && (e[t] = c[t]);\n          }), e) : e;\n        }, [$, H, c]),\n        children: e(B, {\n          u: y,\n          p: x,\n          h: n,\n          g: w\n        })\n      }), e(\"textarea\", {\n        ...b,\n        ref: v,\n        style: u(() => ({\n          ...c,\n          background: \"transparent\",\n          margin: 0,\n          position: \"absolute\",\n          ...(!I && {\n            position: void 0,\n            verticalAlign: \"top\"\n          })\n        }), [c, I]),\n        onChange: d(e => {\n          var t;\n          null === (t = x[p]) || void 0 === t || t.call(x, e.target.value), null == h || h(e);\n        }, [h]),\n        onKeyDown: d(e => {\n          e.nativeEvent.isComposing || 229 === e.nativeEvent.keyCode || (null == f || f(e), K.t());\n        }, [f])\n      })]\n    });\n  }),\n  L = /*#__PURE__*/i(({\n    u: n,\n    p: o,\n    h: r,\n    m: i\n  }) => {\n    const [c, d] = l(\"\");\n    return s(o, () => d, []), e(\"div\", {\n      ref: n,\n      \"aria-hidden\": !0,\n      onClick: T,\n      onMouseDown: T,\n      onMouseUp: T,\n      onMouseOver: T,\n      onMouseOut: T,\n      onMouseMove: T,\n      children: e(\"div\", {\n        style: {\n          height: i\n        },\n        children: t(\"div\", {\n          style: u(() => ({\n            transform: \"translate(0px, 0px)\",\n            pointerEvents: \"none\",\n            userSelect: \"none\",\n            msUserSelect: \"none\",\n            WebkitUserSelect: \"none\",\n            boxSizing: \"content-box\",\n            textSizeAdjust: \"100%\",\n            WebkitTextSizeAdjust: \"100%\",\n            MozTextSizeAdjust: \"100%\",\n            whiteSpace: \"pre\"\n          }), []),\n          children: [u(() => r ? r(c) : c, [c, r]), h]\n        })\n      })\n    });\n  }),\n  U = /*#__PURE__*/c(({\n    children: n,\n    autoHeight: i,\n    style: c,\n    onChange: h,\n    onKeyDown: f,\n    onSelectionChange: g,\n    ...b\n  }, m) => {\n    const v = r(null),\n      y = r(null),\n      x = r(null),\n      [[w, _, M, k], z] = l([0, 0, 0, 0]),\n      [T, E] = l(!1),\n      B = r(\"\"),\n      [[D, U], O] = l([null, null]),\n      K = R(() => {\n        const e = (() => {\n          if (\"undefined\" == typeof navigator) return !1;\n          const e = navigator.userAgent.toLowerCase();\n          return e.indexOf(\"safari\") > -1 && e.indexOf(\"chrome\") <= -1;\n        })();\n        return A(v, t => {\n          if (O(t), e) {\n            if (!v[p] || !y[p]) return;\n            const {\n              scrollTop: e,\n              scrollLeft: t\n            } = v[p];\n            y[p].style.transform = `translate(${-t}px, ${-e}px)`;\n          }\n        });\n      }),\n      $ = w + M,\n      H = _ + k,\n      I = !!($ + H);\n    return s(m, () => {\n      const e = v[p],\n        t = {\n          get selectionStart() {\n            return K.o();\n          },\n          get selectionEnd() {\n            return K.i();\n          },\n          setRangeText(t, n, o, r) {\n            e.setRangeText ? e.setRangeText(t, n, o, r) : (e.focus(), e.selectionStart = n, e.selectionEnd = o, document.execCommand(\"insertText\", !1, t)), e.dispatchEvent(new Event(\"input\", {\n              bubbles: !0\n            }));\n          }\n        };\n      return new Proxy(e, {\n        get(e, n) {\n          if (t[n]) return t[n];\n          const o = e[n];\n          return \"function\" == typeof o ? o.bind(e) : o;\n        },\n        set: (e, t, n) => (e[t] = n, !0)\n      });\n    }, []), W(() => {\n      const e = v[p],\n        t = y[p];\n      if (e && t) return j(e, t, K, z, E);\n    }, []), W(() => {\n      const e = v[p];\n      e && x[p](e.value);\n    }, [b.value]), W(() => {\n      const e = v[p],\n        t = y[p];\n      t && e && C(e, t, B, c);\n    }, [c]), o(() => {\n      if (null != D && null != U && g) if (T) {\n        const e = a(y[p], D, D + 1).getBoundingClientRect();\n        g({\n          focused: !0,\n          top: e.top,\n          left: e.left,\n          height: e.height,\n          selectionStart: D,\n          selectionEnd: U\n        });\n      } else g({\n        focused: !1,\n        selectionStart: D,\n        selectionEnd: U\n      });\n    }, [T, D, U]), o(() => {\n      const e = v[p];\n      i && e && (e.style.height = \"auto\", e.style.height = e.scrollHeight + \"px\");\n    }), t(\"div\", {\n      style: u(() => {\n        let e = $,\n          t = H;\n        return c && (S(c.width) && (e = c.width), S(c.height) && (t = c.height)), {\n          display: \"inline-block\",\n          position: \"relative\",\n          width: e,\n          height: t\n        };\n      }, [$, H, c]),\n      children: [e(\"div\", {\n        style: u(() => {\n          const e = {\n            position: \"absolute\",\n            overflow: \"hidden\",\n            top: 0,\n            left: 0,\n            width: $,\n            height: H\n          };\n          return c ? ([\"background\", \"backgroundColor\"].forEach(t => {\n            c[t] && (e[t] = c[t]);\n          }), e) : e;\n        }, [$, H, c]),\n        children: e(L, {\n          u: y,\n          p: x,\n          h: n,\n          m: _\n        })\n      }), e(\"input\", {\n        ...b,\n        ref: v,\n        style: u(() => ({\n          ...c,\n          background: \"transparent\",\n          margin: 0,\n          position: \"absolute\",\n          ...(!I && {\n            position: void 0,\n            verticalAlign: \"top\"\n          })\n        }), [c, I]),\n        onChange: d(e => {\n          var t;\n          null === (t = x[p]) || void 0 === t || t.call(x, e.target.value), null == h || h(e);\n        }, [h]),\n        onKeyDown: d(e => {\n          e.nativeEvent.isComposing || 229 === e.nativeEvent.keyCode || (null == f || f(e), K.t());\n        }, [f])\n      })]\n    });\n  }),\n  O = t => {\n    const n = t.map(([, e]) => e);\n    return o => {\n      var r;\n      const [i, l, s] = t.reduce((e, [t, n]) => (((e, t) => {\n          const n = [];\n          let o = null;\n          for (; o = e.exec(t);) n.push(o);\n          return n;\n        })(t, o).forEach(t => {\n          const o = t.index,\n            r = t.index + t[0].length;\n          e[0].add(o).add(r);\n          let i = e[1].get(o),\n            l = e[2].get(r);\n          i || e[1].set(o, i = []), l || e[2].set(r, l = []), i.push(n), l.push(n);\n        }), e), [new Set(), new Map(), new Map()]),\n        u = Array.from(i);\n      u.sort((e, t) => e - t);\n      let c = 0;\n      const d = [],\n        a = [];\n      for (let t = 0; t < u.length; t++) {\n        const i = u[t],\n          p = null !== (r = u[t + 1]) && void 0 !== r ? r : o.length;\n        if (i === p) continue;\n        const h = o.slice(c, i);\n        h && a.push(h);\n        const f = l.get(i),\n          g = s.get(p);\n        f && (f.forEach(e => {\n          d.push(e);\n        }), d.sort((e, t) => n.indexOf(t) - n.indexOf(e)));\n        const b = o.slice(i, p);\n        a.push(d.reduceRight((t, n, o) => {\n          const r = 0 === o ? i + \"\" : void 0;\n          return \"function\" == typeof n ? n({\n            children: t,\n            value: b,\n            key: r\n          }) : e(\"span\", {\n            style: n,\n            children: t\n          }, r);\n        }, b)), g && g.forEach(e => {\n          d.splice(d.indexOf(e), 1);\n        }), c = p;\n      }\n      const p = o.slice(c);\n      return p && a.push(p), a;\n    };\n  };\nexport { D as RichTextarea, O as createRegexRenderer, U as experimental_RichInput };","map":{"version":3,"names":["a","e","t","n","o","r","ownerDocument","createRange","i","l","s","u","createNodeIterator","NodeFilter","SHOW_TEXT","c","d","nextNode","nodeValue","length","node","offset","setStart","setEnd","p","h","style","color","children","f","g","getPropertyValue","b","setProperty","m","parseInt","v","getComputedStyle","S","endsWith","y","x","w","document","elementFromPoint","clientX","clientY","_","contains","M","dispatchEvent","MouseEvent","k","type","z","T","stopPropagation","C","forEach","borderColor","caretColor","E","addEventListener","removeEventListener","A","setTimeout","selectionStart","Math","min","selectionEnd","data","_getSelectionEnd","W","window","R","j","ResizeObserver","contentRect","width","height","borderBoxSize","inlineSize","blockSize","scrollTop","scrollLeft","transform","observe","disconnect","B","ref","pointerEvents","userSelect","msUserSelect","WebkitUserSelect","boxSizing","textSizeAdjust","WebkitTextSizeAdjust","MozTextSizeAdjust","onClick","onMouseDown","onMouseUp","onMouseOver","onMouseOut","onMouseMove","D","autoHeight","onChange","onKeyDown","onSelectionChange","L","U","O","K","$","H","I","setRangeText","focus","execCommand","Event","bubbles","Proxy","get","bind","set","value","getBoundingClientRect","focused","top","left","scrollHeight","display","position","overflow","background","margin","verticalAlign","call","target","nativeEvent","isComposing","keyCode","whiteSpace","navigator","userAgent","toLowerCase","indexOf","map","reduce","exec","push","index","add","Set","Map","Array","from","sort","slice","reduceRight","key","splice","RichTextarea","createRegexRenderer","experimental_RichInput"],"sources":["/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/vendor/range-at-index.js","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/utils.tsx","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/dom.ts","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/selection.ts","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/useIsomorphicLayoutEffect.ts","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/useStatic.ts","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/observer.ts","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/textarea.tsx","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/input.tsx","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/renderers.tsx","/home/nikita/ÐŸÑ€Ð¾Ñ”ÐºÑ‚Ð¸/NUB_Project/NUB_IDE/nub-ide/node_modules/rich-textarea/src/src/regex.ts"],"sourcesContent":["/**\n * range-at-index\n * https://github.com/webmodules/range-at-index/\n * Nathan Rajlich\n *\n * Forked from version 1.0.4; includes the following modifications:\n * 1)Â Change module.exports to export default.\n **/\n\n/**\n * Returns a Range instance selecting text within HTML Element `el`,\n * at the given `start` and `end` offsets.\n *\n * @param {HTMLElement} el - DOM element to select text within\n * @public\n */\n\nfunction RangeAtIndex(el, index, offset, range) {\n  var doc = el.ownerDocument;\n  if (!range) range = doc.createRange();\n\n  let iterator = doc.createNodeIterator(el, NodeFilter.SHOW_TEXT, null, false);\n\n  let start = {};\n  let end = {};\n  let node, val, len;\n\n  while ((node = iterator.nextNode())) {\n    val = node.nodeValue;\n    len = val.length;\n\n    if (!start.node && len > index) {\n      start.node = node;\n      start.offset = index;\n    }\n\n    if (!end.node && len >= offset) {\n      end.node = node;\n      end.offset = offset;\n    }\n\n    index -= len;\n    offset -= len;\n  }\n\n  // update the range with the start and end offsets\n  if (start.node) range.setStart(start.node, start.offset);\n  if (end.node) range.setEnd(end.node, end.offset);\n\n  return range;\n}\n\nexport default RangeAtIndex;\n","/**\n * @internal\n */\nexport const refKey = \"current\";\n\n/**\n * for caret position detection\n * @internal\n */\nexport const CARET_DETECTOR = (\n  <span style={{ color: \"transparent\" }}>{\"\\u200b\"}</span>\n);\n","import { refKey } from \"./utils\";\n\n/**\n * @internal\n */\nexport const isSafari = (): boolean => {\n  if (typeof navigator === \"undefined\") {\n    return false;\n  }\n  const ua = navigator.userAgent.toLowerCase();\n  return ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") <= -1;\n};\n\nconst TEXT_STYLE_KEYS: (keyof React.CSSProperties)[] = [\n  \"direction\",\n  \"padding\",\n  \"paddingTop\",\n  \"paddingBottom\",\n  \"paddingLeft\",\n  \"paddingRight\",\n  \"margin\",\n  \"marginTop\",\n  \"marginBottom\",\n  \"marginLeft\",\n  \"marginRight\",\n  \"border\",\n  \"borderWidth\",\n  \"borderTopWidth\",\n  \"borderBottomWidth\",\n  \"borderLeftWidth\",\n  \"borderRightWidth\",\n  \"borderStyle\",\n  \"borderTopStyle\",\n  \"borderBottomStyle\",\n  \"borderLeftStyle\",\n  \"borderRightStyle\",\n  \"fontSize\",\n  \"fontFamily\",\n  \"fontStyle\",\n  \"fontVariant\",\n  \"fontWeight\",\n  \"fontStretch\",\n  \"fontSizeAdjust\",\n  \"textAlign\",\n  \"textTransform\",\n  \"textIndent\",\n  \"letterSpacing\",\n  \"wordSpacing\",\n  \"lineHeight\",\n  \"whiteSpace\",\n  \"wordBreak\",\n  \"overflowWrap\",\n  \"tabSize\",\n  \"MozTabSize\",\n];\n\nconst getPropertyValue = (style: CSSStyleDeclaration, key: string): string => {\n  return style.getPropertyValue(key);\n};\nconst setProperty = (\n  style: CSSStyleDeclaration,\n  key: string,\n  value: string\n) => {\n  style.setProperty(key, value);\n};\n\nconst getValueFromStyle = (style: CSSStyleDeclaration, key: string): number => {\n  const value = getPropertyValue(style, key);\n  if (!value) {\n    return 0;\n  } else {\n    return parseInt(value, 10);\n  }\n};\n\n/**\n * @internal\n */\nexport const getStyle = (e: Element) => getComputedStyle(e);\n\n/**\n * @internal\n */\nexport const hasPercentageUnit = (\n  widthOrHeight: React.CSSProperties[\"width\"] | React.CSSProperties[\"height\"]\n): boolean => {\n  return typeof widthOrHeight === \"string\" && widthOrHeight.endsWith(\"%\");\n};\n\n/**\n * @internal\n */\nexport const getVerticalPadding = (style: CSSStyleDeclaration): number => {\n  return (\n    getValueFromStyle(style, \"padding-top\") +\n    getValueFromStyle(style, \"padding-bottom\") +\n    getValueFromStyle(style, \"border-top\") +\n    getValueFromStyle(style, \"border-bottom\")\n  );\n};\n\n/**\n * @internal\n */\nexport const getHorizontalPadding = (style: CSSStyleDeclaration): number => {\n  return (\n    getValueFromStyle(style, \"padding-left\") +\n    getValueFromStyle(style, \"padding-right\") +\n    getValueFromStyle(style, \"border-left\") +\n    getValueFromStyle(style, \"border-right\")\n  );\n};\n\n/**\n * @internal\n */\nexport const getPointedElement = (\n  textarea: HTMLElement,\n  backdrop: HTMLElement,\n  e: MouseEvent\n): HTMLElement | null => {\n  const POINTER_EVENTS = \"pointer-events\";\n\n  const textareaStyle = textarea.style;\n  const backdropStyle = backdrop.style;\n  const prev = getPropertyValue(textareaStyle, POINTER_EVENTS);\n  const backPrev = getPropertyValue(backdropStyle, POINTER_EVENTS);\n  setProperty(textareaStyle, POINTER_EVENTS, \"none\");\n  setProperty(backdropStyle, POINTER_EVENTS, \"auto\");\n\n  const pointed = document.elementFromPoint(\n    e.clientX,\n    e.clientY\n  ) as HTMLElement | null;\n\n  setProperty(textareaStyle, POINTER_EVENTS, prev);\n  setProperty(backdropStyle, POINTER_EVENTS, backPrev);\n\n  if (isInsideBackdrop(pointed, backdrop)) {\n    return pointed;\n  } else {\n    return null;\n  }\n};\n\nconst isInsideBackdrop = (\n  pointed: HTMLElement | null,\n  backdrop: HTMLElement\n): boolean => !!pointed && backdrop !== pointed && backdrop.contains(pointed);\n\nconst dispatchMouseEvent = (\n  target: HTMLElement,\n  type: string,\n  init: MouseEventInit\n) => {\n  target.dispatchEvent(new MouseEvent(type, init));\n};\n\n/**\n * @internal\n */\nexport const dispatchClonedMouseEvent = (\n  pointed: HTMLElement,\n  e: MouseEvent\n) => {\n  dispatchMouseEvent(pointed, e.type, e);\n};\n\n/**\n * @internal\n */\nexport const dispatchMouseMoveEvent = (\n  pointed: HTMLElement | null,\n  prevPointed: HTMLElement | null,\n  e: MouseEvent\n) => {\n  if (pointed) {\n    dispatchClonedMouseEvent(pointed, e);\n  }\n\n  if (prevPointed !== pointed) {\n    dispatchMouseOutEvent(prevPointed, e);\n    if (pointed) {\n      dispatchMouseEvent(pointed, \"mouseover\", e);\n    }\n  }\n};\n\n/**\n * @internal\n */\nexport const dispatchMouseOutEvent = (\n  prevPointed: HTMLElement | null,\n  e: MouseEvent\n) => {\n  if (prevPointed) {\n    dispatchMouseEvent(prevPointed, \"mouseout\", e);\n  }\n};\n\n/**\n * @internal\n */\nexport const stopPropagation = (event: React.MouseEvent) => {\n  event.stopPropagation();\n};\n\n/**\n * @internal\n */\nexport const syncBackdropStyle = (\n  textarea: HTMLElement,\n  backdrop: HTMLElement,\n  caretColorRef: React.MutableRefObject<string>,\n  style?: React.CSSProperties\n) => {\n  const computedTextAreaStyle = getStyle(textarea);\n  const textareaStyle = textarea.style;\n  const backdropStyle = backdrop.style;\n  if (!caretColorRef[refKey]) {\n    caretColorRef[refKey] = getPropertyValue(computedTextAreaStyle, \"color\");\n  }\n\n  TEXT_STYLE_KEYS.forEach((k) => {\n    backdropStyle[k as any] = computedTextAreaStyle[k as any]!;\n  });\n  textareaStyle.color = backdropStyle.borderColor = \"transparent\";\n  textareaStyle.caretColor = style?.caretColor || caretColorRef[refKey];\n};\n\n/**\n * @internal\n */\nexport const listenEvent = <\n  E extends HTMLElement | Document,\n  K extends keyof GlobalEventHandlersEventMap,\n>(\n  el: E,\n  key: K,\n  cb: (this: E, ev: GlobalEventHandlersEventMap[K]) => void\n) => {\n  el.addEventListener(key, cb as EventListenerOrEventListenerObject);\n  return () => {\n    el.removeEventListener(key, cb as EventListenerOrEventListenerObject);\n  };\n};\n","import { refKey } from \"./utils\";\n\n/**\n * @internal\n */\nexport type SelectionRange = [number | null, number | null];\n\n/**\n * @internal\n */\nexport const initSelectionStore = (\n  ref: React.RefObject<HTMLTextAreaElement | HTMLInputElement>,\n  onSelectionUpdate: (range: SelectionRange) => void\n) => {\n  let prevSelection: [number | null, number | null] = [null, null];\n  let compositionEvent: CompositionEvent | void;\n  const getSelection = (): [number | null, number | null] => {\n    const selectionStart = handle._getSelectionStart();\n    const selectionEnd = handle._getSelectionEnd();\n    if (\n      prevSelection[0] === selectionStart &&\n      prevSelection[1] === selectionEnd\n    ) {\n      return prevSelection;\n    }\n    prevSelection = [selectionStart, selectionEnd];\n    return prevSelection;\n  };\n  const handle = {\n    _updateSeletion() {\n      setTimeout(() => {\n        onSelectionUpdate(getSelection());\n      });\n    },\n    _setComposition(event: CompositionEvent | void) {\n      compositionEvent = event;\n    },\n    _getSelectionStart(): number {\n      const el = ref[refKey];\n      if (!el) return 0;\n      const pos = el.selectionStart!;\n      if (!compositionEvent) return pos;\n      // compensate selection range during compositioning\n      return Math.min(pos, el.selectionEnd! - compositionEvent.data.length);\n    },\n    _getSelectionEnd(): number {\n      const el = ref[refKey];\n      if (!el) return 0;\n      const pos = el.selectionEnd!;\n      // compensate selection range during compositioning\n      if (!compositionEvent) return pos;\n      return Math.min(pos, el.selectionStart! + compositionEvent.data.length);\n    },\n  };\n  return handle;\n};\n\n/**\n * @internal\n */\nexport type SelectionStore = ReturnType<typeof initSelectionStore>;\n","import { useEffect, useLayoutEffect } from \"react\";\n\n/**\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * @internal\n */\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { useRef } from \"react\";\nimport { refKey } from \"./utils\";\n\n/**\n * @internal\n */\nexport const useStatic = <T>(init: () => T): T => {\n  const ref = useRef<T>();\n  return ref[refKey] || (ref[refKey] = init());\n};\n","import {\n  dispatchClonedMouseEvent,\n  dispatchMouseMoveEvent,\n  dispatchMouseOutEvent,\n  getHorizontalPadding,\n  getPointedElement,\n  getStyle,\n  getVerticalPadding,\n  listenEvent,\n} from \"./dom\";\nimport { SelectionStore } from \"./selection\";\n\n/**\n * @internal\n */\nexport type TextareaRect = [\n  width: number,\n  height: number,\n  hPadding: number,\n  vPadding: number,\n];\n\n/**\n * @internal\n */\nexport const createTextareaObserver = (\n  textarea: HTMLTextAreaElement | HTMLInputElement,\n  backdrop: HTMLDivElement,\n  selectionStore: SelectionStore,\n  onResize: (size: TextareaRect) => void,\n  onFocus: (value: boolean) => void\n) => {\n  let prevPointed: HTMLElement | null = null;\n\n  const observer = new ResizeObserver(([entry]) => {\n    const {\n      contentRect: { width, height },\n      borderBoxSize,\n    } = entry!;\n    if (borderBoxSize && borderBoxSize[0]) {\n      onResize([\n        width,\n        height,\n        borderBoxSize[0].inlineSize - width,\n        borderBoxSize[0].blockSize - height,\n      ]);\n      return;\n    }\n    const style = getStyle(textarea);\n    onResize([\n      width,\n      height,\n      getHorizontalPadding(style),\n      getVerticalPadding(style),\n    ]);\n  });\n\n  const cleanUpOnFocus = listenEvent(textarea, \"focus\", () => {\n    onFocus(true);\n  });\n  const cleanUpOnBlur = listenEvent(textarea, \"blur\", () => {\n    onFocus(false);\n  });\n  const cleanUpOnScroll = listenEvent(textarea, \"scroll\", () => {\n    const { scrollTop, scrollLeft } = textarea;\n    backdrop.style.transform = `translate(${-scrollLeft}px, ${-scrollTop}px)`;\n  });\n  const cleanUpOnMouseDown = listenEvent(textarea, \"mousedown\", (e) => {\n    selectionStore._updateSeletion();\n    const cleanup = listenEvent(document, \"mouseup\", () => {\n      selectionStore._updateSeletion();\n      cleanup();\n    });\n    const pointed = getPointedElement(textarea, backdrop, e);\n    if (pointed) {\n      dispatchClonedMouseEvent(pointed, e);\n    }\n  });\n  const cleanUpOnMouseMove = listenEvent(textarea, \"mouseup\", (e) => {\n    const pointed = getPointedElement(textarea, backdrop, e);\n    if (pointed) {\n      dispatchClonedMouseEvent(pointed, e);\n    }\n  });\n  const cleanUpMouseMove = listenEvent(textarea, \"mousemove\", (e) => {\n    const p = getPointedElement(textarea, backdrop, e);\n    dispatchMouseMoveEvent(p, prevPointed, e);\n    prevPointed = p;\n  });\n  const cleanUpOnMouseLeave = listenEvent(textarea, \"mouseleave\", (e) => {\n    dispatchMouseOutEvent(prevPointed, e);\n    prevPointed = null;\n  });\n  const cleanUpOnClick = listenEvent(textarea, \"click\", (e) => {\n    const pointed = getPointedElement(textarea, backdrop, e);\n    if (pointed) {\n      dispatchClonedMouseEvent(pointed, e);\n    }\n  });\n  const cleanUpOnInput = listenEvent(textarea, \"input\", () => {\n    selectionStore._updateSeletion();\n  });\n  const cleanUpOnCompositionStart = listenEvent(\n    textarea,\n    \"compositionstart\",\n    (e) => {\n      selectionStore._setComposition(e);\n    }\n  );\n  const cleanUpOnCompositionUpdate = listenEvent(\n    textarea,\n    \"compositionupdate\",\n    (e) => {\n      selectionStore._setComposition(e);\n    }\n  );\n  const cleanUpOnCompositionEnd = listenEvent(\n    textarea,\n    \"compositionend\",\n    () => {\n      selectionStore._setComposition();\n    }\n  );\n  observer.observe(textarea);\n  return () => {\n    cleanUpOnFocus();\n    cleanUpOnBlur();\n    cleanUpOnScroll();\n    cleanUpOnMouseDown();\n    cleanUpOnMouseMove();\n    cleanUpMouseMove();\n    cleanUpOnMouseLeave();\n    cleanUpOnClick();\n    cleanUpOnInput();\n    cleanUpOnCompositionStart();\n    cleanUpOnCompositionUpdate();\n    cleanUpOnCompositionEnd();\n    observer.disconnect();\n  };\n};\n","import {\n  useEffect,\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  RefObject,\n} from \"react\";\nimport rangeAtIndex from \"./vendor/range-at-index\";\nimport { hasPercentageUnit, stopPropagation, syncBackdropStyle } from \"./dom\";\nimport { SelectionRange, initSelectionStore } from \"./selection\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport type { CaretPosition, Renderer } from \"./types\";\nimport { CARET_DETECTOR, refKey } from \"./utils\";\nimport { useStatic } from \"./useStatic\";\nimport { TextareaRect, createTextareaObserver } from \"./observer\";\n\ntype BackdropHandle = (value: string) => void;\n\nconst Backdrop = memo(\n  ({\n    _ref: backdropRef,\n    _handle: handle,\n    _render: render,\n    _width: width,\n  }: {\n    _ref: RefObject<HTMLDivElement>;\n    _handle: RefObject<BackdropHandle>;\n    _render: Renderer | undefined;\n    _width: number;\n  }) => {\n    const [value, setValue] = useState(\"\");\n\n    useImperativeHandle(handle, () => setValue, []);\n\n    return (\n      <div\n        ref={backdropRef}\n        aria-hidden\n        style={useMemo(\n          (): React.CSSProperties => ({\n            width,\n            transform: \"translate(0px, 0px)\",\n            pointerEvents: \"none\",\n            userSelect: \"none\",\n            msUserSelect: \"none\",\n            WebkitUserSelect: \"none\",\n            // https://github.com/inokawa/rich-textarea/issues/56\n            boxSizing: \"content-box\",\n            // https://stackoverflow.com/questions/2545542/font-size-rendering-inconsistencies-on-an-iphone\n            textSizeAdjust: \"100%\",\n            WebkitTextSizeAdjust: \"100%\",\n            MozTextSizeAdjust: \"100%\",\n          }),\n          [width]\n        )}\n        // Stop propagation of events dispatched on backdrop\n        onClick={stopPropagation}\n        onMouseDown={stopPropagation}\n        onMouseUp={stopPropagation}\n        onMouseOver={stopPropagation}\n        onMouseOut={stopPropagation}\n        onMouseMove={stopPropagation}\n      >\n        {useMemo(() => (render ? render(value) : value), [value, render])}\n        {CARET_DETECTOR}\n      </div>\n    );\n  }\n);\n\n/**\n * Methods of {@link RichTextarea}.\n *\n * All the others not mentioned are proxied to ref of [textarea](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement).\n *\n * | Name              | Type     | Description                                                               |\n * | ----------------- | -------- | ------------------------------------------------------------------------- |\n * | selectionStart    | `number` | Same as original but has handling of composition event                    |\n * | selectionEnd      | `number` | Same as original but has handling of composition event                    |\n * | setRangeText      |          | Same as original but has fallback to `document.execCommand(\"insertText\")` |\n */\nexport interface RichTextareaHandle extends HTMLTextAreaElement {}\n\n/**\n * Props of {@link RichTextarea}.\n *\n * For other props not mentioned below will be passed to [textarea](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement).\n */\nexport interface RichTextareaProps\n  extends Omit<JSX.IntrinsicElements[\"textarea\"], \"children\"> {\n  /**\n   *\n   * Render function to create customized view from value.\n   *\n   * This function should return ReactNodes which texts are positioned the same as textarea (see examples for detailed usage).\n   *\n   * On the rendered nodes, currently limited event handlers will work.\n   * - `onClick`\n   * - `onMouseOver`\n   * - `onMouseOut`\n   * - `onMouseMove`\n   * - `onMouseDown`\n   * - `onMouseUp`\n   * @defaultValue undefined\n   */\n  children?: Renderer;\n  /**\n   * If true, textarea height is automatically resized and height of style prop does not work.\n   * Set `maxHeight` to style prop if you need limit.\n   * Set `rows` prop to 1 if you need single-line textarea.\n   * @defaultValue undefined\n   */\n  autoHeight?: boolean;\n  /**\n   * Called when selection in textarea changes. It gives position of caret at the time, which is useful to position menu.\n   * @defaultValue undefined\n   */\n  onSelectionChange?: (pos: CaretPosition) => void;\n}\n\n/**\n * Textarea component with some extra props. See {@link RichTextareaProps} and {@link RichTextareaHandle}.\n */\nexport const RichTextarea = forwardRef<RichTextareaHandle, RichTextareaProps>(\n  (\n    {\n      children: render,\n      autoHeight,\n      style,\n      onChange,\n      onKeyDown,\n      onSelectionChange,\n      ...props\n    },\n    ref\n  ): React.ReactElement => {\n    const textAreaRef = useRef<HTMLTextAreaElement>(null);\n    const backdropRef = useRef<HTMLDivElement>(null);\n    const backdropHandle = useRef<BackdropHandle>(null);\n    const [[width, height, hPadding, vPadding], setRect] =\n      useState<TextareaRect>([0, 0, 0, 0]);\n    const [focused, setFocused] = useState<boolean>(false);\n\n    const caretColorRef = useRef(\"\");\n\n    const [[selectionStart, selectionEnd], setSelection] =\n      useState<SelectionRange>([null, null]);\n    const selectionStore = useStatic(() =>\n      initSelectionStore(textAreaRef, setSelection)\n    );\n\n    const totalWidth = width + hPadding;\n    const totalHeight = height + vPadding;\n\n    const isSizeCalculated = !!(totalWidth + totalHeight);\n\n    useImperativeHandle(\n      ref,\n      () => {\n        const el = textAreaRef[refKey]!;\n        const overrides = {\n          get selectionStart() {\n            return selectionStore._getSelectionStart();\n          },\n          get selectionEnd() {\n            return selectionStore._getSelectionEnd();\n          },\n          setRangeText(\n            text: string,\n            start: number,\n            end: number,\n            preserve?: SelectionMode\n          ) {\n            if (el.setRangeText) {\n              el.setRangeText(text, start, end, preserve);\n            } else {\n              el.focus();\n              el.selectionStart = start;\n              el.selectionEnd = end;\n              document.execCommand(\"insertText\", false, text);\n            }\n            // Invoke onChange to lift state up\n            el.dispatchEvent(new Event(\"input\", { bubbles: true }));\n          },\n        };\n\n        return new Proxy(el, {\n          get(target, prop: keyof HTMLTextAreaElement) {\n            if ((overrides as any)[prop]) {\n              return (overrides as any)[prop];\n            }\n            const value = target[prop];\n            return typeof value === \"function\" ? value.bind(target) : value;\n          },\n          set(target, prop, value) {\n            (target as any)[prop] = value;\n            return true;\n          },\n        }) as HTMLTextAreaElement;\n      },\n      []\n    );\n\n    useIsomorphicLayoutEffect(() => {\n      const textarea = textAreaRef[refKey];\n      const backdrop = backdropRef[refKey];\n      if (!textarea || !backdrop) return;\n\n      return createTextareaObserver(\n        textarea,\n        backdrop,\n        selectionStore,\n        setRect,\n        setFocused\n      );\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n      const textarea = textAreaRef[refKey];\n      if (!textarea) return;\n      // Sync value on init and change\n      backdropHandle[refKey]!(textarea.value);\n    }, [props.value]);\n\n    useIsomorphicLayoutEffect(() => {\n      // Sync backdrop style\n      const textarea = textAreaRef[refKey];\n      const backdrop = backdropRef[refKey];\n      if (!backdrop || !textarea) return;\n      syncBackdropStyle(textarea, backdrop, caretColorRef, style);\n    }, [style]);\n\n    useEffect(() => {\n      if (selectionStart == null || selectionEnd == null || !onSelectionChange)\n        return;\n      if (!focused) {\n        onSelectionChange({\n          focused: false,\n          selectionStart: selectionStart,\n          selectionEnd: selectionEnd,\n        });\n      } else {\n        const range = rangeAtIndex(\n          backdropRef[refKey]!,\n          selectionStart,\n          selectionStart + 1\n        ) as Range;\n        const rect = range.getBoundingClientRect();\n        onSelectionChange({\n          focused: true,\n          top: rect.top,\n          left: rect.left,\n          height: rect.height,\n          selectionStart: selectionStart,\n          selectionEnd: selectionEnd,\n        });\n      }\n    }, [focused, selectionStart, selectionEnd]);\n\n    useEffect(() => {\n      const textarea = textAreaRef[refKey];\n      if (!autoHeight || !textarea) return;\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    });\n\n    return (\n      <div\n        style={useMemo((): React.CSSProperties => {\n          let w: React.CSSProperties[\"width\"] = totalWidth;\n          let h: React.CSSProperties[\"height\"] = totalHeight;\n          // Prefer prop style to avoid miscalculation https://github.com/inokawa/rich-textarea/issues/39\n          if (style) {\n            if (hasPercentageUnit(style.width)) {\n              w = style.width;\n            }\n            if (hasPercentageUnit(style.height)) {\n              h = style.height;\n            }\n          }\n          return {\n            display: \"inline-block\",\n            position: \"relative\",\n            width: w,\n            height: h,\n          };\n        }, [totalWidth, totalHeight, style])}\n      >\n        <div\n          style={useMemo((): React.CSSProperties => {\n            const s: React.CSSProperties = {\n              position: \"absolute\",\n              overflow: \"hidden\",\n              top: 0,\n              left: 0,\n              width: totalWidth,\n              height: totalHeight,\n            };\n            if (!style) return s;\n            ([\"background\", \"backgroundColor\"] as const).forEach((k) => {\n              if (style[k]) s[k] = style[k] as any;\n            });\n            return s;\n          }, [totalWidth, totalHeight, style])}\n        >\n          <Backdrop\n            _ref={backdropRef}\n            _handle={backdropHandle}\n            _render={render}\n            _width={width}\n          />\n        </div>\n        <textarea\n          {...props}\n          ref={textAreaRef}\n          style={useMemo(\n            () => ({\n              ...style,\n              background: \"transparent\",\n              margin: 0,\n              // Set `position: absolute` to fix bug that sometimes texts disappear in Chrome for unknown reason\n              position: \"absolute\",\n              // And remove it until element size is calculated to avoid layout shift on mount\n              // https://github.com/inokawa/rich-textarea/issues/21\n              ...(!isSizeCalculated && {\n                position: undefined,\n                verticalAlign: \"top\",\n              }),\n            }),\n            [style, isSizeCalculated]\n          )}\n          onChange={useCallback(\n            (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n              backdropHandle[refKey]?.(e.target.value);\n              onChange?.(e);\n            },\n            [onChange]\n          )}\n          onKeyDown={useCallback(\n            (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n              // Ignore keydown events during IME composition.\n              // Safari sometimes fires keydown event after compositionend so also ignore it.\n              // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n              if (e.nativeEvent.isComposing || e.nativeEvent.keyCode === 229) {\n                return;\n              }\n\n              onKeyDown?.(e);\n              selectionStore._updateSeletion();\n            },\n            [onKeyDown]\n          )}\n        />\n      </div>\n    );\n  }\n);\n","import {\n  useEffect,\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  RefObject,\n} from \"react\";\nimport rangeAtIndex from \"./vendor/range-at-index\";\nimport {\n  hasPercentageUnit,\n  isSafari,\n  stopPropagation,\n  syncBackdropStyle,\n} from \"./dom\";\nimport { SelectionRange, initSelectionStore } from \"./selection\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport type { CaretPosition, Renderer } from \"./types\";\nimport { CARET_DETECTOR, refKey } from \"./utils\";\nimport { useStatic } from \"./useStatic\";\nimport { TextareaRect, createTextareaObserver } from \"./observer\";\n\ntype BackdropHandle = (value: string) => void;\n\nconst Backdrop = memo(\n  ({\n    _ref: backdropRef,\n    _handle: handle,\n    _render: render,\n    _height: height,\n  }: {\n    _ref: RefObject<HTMLDivElement>;\n    _handle: RefObject<BackdropHandle>;\n    _render: Renderer | undefined;\n    _height: number;\n  }) => {\n    const [value, setValue] = useState(\"\");\n\n    useImperativeHandle(handle, () => setValue, []);\n\n    return (\n      <div\n        ref={backdropRef}\n        aria-hidden\n        // Stop propagation of events dispatched on backdrop\n        onClick={stopPropagation}\n        onMouseDown={stopPropagation}\n        onMouseUp={stopPropagation}\n        onMouseOver={stopPropagation}\n        onMouseOut={stopPropagation}\n        onMouseMove={stopPropagation}\n      >\n        <div style={{ height }}>\n          <div\n            style={useMemo(\n              (): React.CSSProperties => ({\n                transform: \"translate(0px, 0px)\",\n                pointerEvents: \"none\",\n                userSelect: \"none\",\n                msUserSelect: \"none\",\n                WebkitUserSelect: \"none\",\n                // https://github.com/inokawa/rich-textarea/issues/56\n                boxSizing: \"content-box\",\n                // https://stackoverflow.com/questions/2545542/font-size-rendering-inconsistencies-on-an-iphone\n                textSizeAdjust: \"100%\",\n                WebkitTextSizeAdjust: \"100%\",\n                MozTextSizeAdjust: \"100%\",\n                whiteSpace: \"pre\",\n              }),\n              []\n            )}\n          >\n            {useMemo(() => (render ? render(value) : value), [value, render])}\n            {CARET_DETECTOR}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\n/**\n * Methods of {@link RichInput}.\n *\n * All the others not mentioned are proxied to ref of [input](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement).\n *\n * | Name              | Type     | Description                                                            |\n * | ----------------- | -------- | ---------------------------------------------------------------------- |\n * | selectionStart    | `number` | Same as original but has handling of composition event                    |\n * | selectionEnd      | `number` | Same as original but has handling of composition event                    |\n * | setRangeText      |          | Same as original but has fallback to `document.execCommand(\"insertText\")` |\n */\nexport interface RichInputHandle extends HTMLInputElement {}\n\n/**\n * Props of {@link RichInput}.\n *\n * For other props not mentioned below will be passed to [input](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement).\n * `defaultValue` is omitted for simplicity of logic.\n */\nexport interface RichInputProps\n  extends Omit<JSX.IntrinsicElements[\"input\"], \"children\"> {\n  /**\n   * Render function to create customized view from value.\n   *\n   * This function should return ReactNodes which texts are positioned the same as textarea (see examples for detailed usage).\n   *\n   * On the rendered nodes, currently limited event handlers will work.\n   * - `onClick`\n   * - `onMouseOver`\n   * - `onMouseOut`\n   * - `onMouseMove`\n   * - `onMouseDown`\n   * - `onMouseUp`\n   * @defaultValue undefined\n   */\n  children?: Renderer;\n  /**\n   * If true, textarea height is automatically resized and height of style prop does not work. Set `maxHeight` to style prop if you need limit.\n   * @defaultValue undefined\n   */\n  autoHeight?: boolean;\n  /**\n   * Called when selection in textarea changes. It gives position of caret at the time, which is useful to position menu.\n   * @defaultValue undefined\n   */\n  onSelectionChange?: (pos: CaretPosition) => void;\n}\n\n/**\n * Input component with some extra props. See {@link RichInputProps} and {@link RichInputHandle}.\n *\n * **NOTE: This component is experimental one so it may have some bugs.**\n */\nexport const RichInput = forwardRef<RichInputHandle, RichInputProps>(\n  (\n    {\n      children: render,\n      autoHeight,\n      style,\n      onChange,\n      onKeyDown,\n      onSelectionChange,\n      ...props\n    },\n    ref\n  ): React.ReactElement => {\n    const textAreaRef = useRef<HTMLInputElement>(null);\n    const backdropRef = useRef<HTMLDivElement>(null);\n    const backdropHandle = useRef<BackdropHandle>(null);\n    const [[width, height, hPadding, vPadding], setRect] =\n      useState<TextareaRect>([0, 0, 0, 0]);\n    const [focused, setFocused] = useState<boolean>(false);\n\n    const caretColorRef = useRef(\"\");\n\n    const [[selectionStart, selectionEnd], setSelection] =\n      useState<SelectionRange>([null, null]);\n    const selectionStore = useStatic(() => {\n      const safari = isSafari();\n\n      return initSelectionStore(textAreaRef, (range) => {\n        setSelection(range);\n\n        if (safari) {\n          // FIXME: Safari does not fire scroll event on input so substitute with pseudo selection change event\n          if (!textAreaRef[refKey] || !backdropRef[refKey]) return;\n          const { scrollTop, scrollLeft } = textAreaRef[refKey];\n          backdropRef[\n            refKey\n          ].style.transform = `translate(${-scrollLeft}px, ${-scrollTop}px)`;\n        }\n      });\n    });\n\n    const totalWidth = width + hPadding;\n    const totalHeight = height + vPadding;\n\n    const isSizeCalculated = !!(totalWidth + totalHeight);\n\n    useImperativeHandle(\n      ref,\n      () => {\n        const el = textAreaRef[refKey]!;\n        const overrides = {\n          get selectionStart() {\n            return selectionStore._getSelectionStart();\n          },\n          get selectionEnd() {\n            return selectionStore._getSelectionEnd();\n          },\n          setRangeText(\n            text: string,\n            start: number,\n            end: number,\n            preserve?: SelectionMode\n          ) {\n            if (el.setRangeText) {\n              el.setRangeText(text, start, end, preserve);\n            } else {\n              el.focus();\n              el.selectionStart = start;\n              el.selectionEnd = end;\n              document.execCommand(\"insertText\", false, text);\n            }\n            // Invoke onChange to lift state up\n            el.dispatchEvent(new Event(\"input\", { bubbles: true }));\n          },\n        };\n\n        return new Proxy(el, {\n          get(target, prop: keyof HTMLInputElement) {\n            if ((overrides as any)[prop]) {\n              return (overrides as any)[prop];\n            }\n            const value = target[prop];\n            return typeof value === \"function\" ? value.bind(target) : value;\n          },\n          set(target, prop, value) {\n            (target as any)[prop] = value;\n            return true;\n          },\n        }) as HTMLInputElement;\n      },\n      []\n    );\n\n    useIsomorphicLayoutEffect(() => {\n      const textarea = textAreaRef[refKey];\n      const backdrop = backdropRef[refKey];\n      if (!textarea || !backdrop) return;\n\n      return createTextareaObserver(\n        textarea,\n        backdrop,\n        selectionStore,\n        setRect,\n        setFocused\n      );\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n      const textarea = textAreaRef[refKey];\n      if (!textarea) return;\n      // Sync value on init and change\n      backdropHandle[refKey]!(textarea.value);\n    }, [props.value]);\n\n    useIsomorphicLayoutEffect(() => {\n      // Sync backdrop style\n      const textarea = textAreaRef[refKey];\n      const backdrop = backdropRef[refKey];\n      if (!backdrop || !textarea) return;\n      syncBackdropStyle(textarea, backdrop, caretColorRef, style);\n    }, [style]);\n\n    useEffect(() => {\n      if (selectionStart == null || selectionEnd == null || !onSelectionChange)\n        return;\n      if (!focused) {\n        onSelectionChange({\n          focused: false,\n          selectionStart: selectionStart,\n          selectionEnd: selectionEnd,\n        });\n      } else {\n        const range = rangeAtIndex(\n          backdropRef[refKey]!,\n          selectionStart,\n          selectionStart + 1\n        ) as Range;\n        const rect = range.getBoundingClientRect();\n        onSelectionChange({\n          focused: true,\n          top: rect.top,\n          left: rect.left,\n          height: rect.height,\n          selectionStart: selectionStart,\n          selectionEnd: selectionEnd,\n        });\n      }\n    }, [focused, selectionStart, selectionEnd]);\n\n    useEffect(() => {\n      const textarea = textAreaRef[refKey];\n      if (!autoHeight || !textarea) return;\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    });\n\n    return (\n      <div\n        style={useMemo((): React.CSSProperties => {\n          let w: React.CSSProperties[\"width\"] = totalWidth;\n          let h: React.CSSProperties[\"height\"] = totalHeight;\n          // Prefer prop style to avoid miscalculation https://github.com/inokawa/rich-textarea/issues/39\n          if (style) {\n            if (hasPercentageUnit(style.width)) {\n              w = style.width;\n            }\n            if (hasPercentageUnit(style.height)) {\n              h = style.height;\n            }\n          }\n          return {\n            display: \"inline-block\",\n            position: \"relative\",\n            width: w,\n            height: h,\n          };\n        }, [totalWidth, totalHeight, style])}\n      >\n        <div\n          style={useMemo((): React.CSSProperties => {\n            const s: React.CSSProperties = {\n              position: \"absolute\",\n              overflow: \"hidden\",\n              top: 0,\n              left: 0,\n              width: totalWidth,\n              height: totalHeight,\n            };\n            if (!style) return s;\n            ([\"background\", \"backgroundColor\"] as const).forEach((k) => {\n              if (style[k]) s[k] = style[k] as any;\n            });\n            return s;\n          }, [totalWidth, totalHeight, style])}\n        >\n          <Backdrop\n            _ref={backdropRef}\n            _handle={backdropHandle}\n            _render={render}\n            _height={height}\n          />\n        </div>\n        <input\n          {...props}\n          ref={textAreaRef}\n          style={useMemo(\n            () => ({\n              ...style,\n              background: \"transparent\",\n              margin: 0,\n              // Set `position: absolute` to fix bug that sometimes texts disappear in Chrome for unknown reason\n              position: \"absolute\",\n              // And remove it until element size is calculated to avoid layout shift on mount\n              // https://github.com/inokawa/rich-textarea/issues/21\n              ...(!isSizeCalculated && {\n                position: undefined,\n                verticalAlign: \"top\",\n              }),\n            }),\n            [style, isSizeCalculated]\n          )}\n          onChange={useCallback(\n            (e: React.ChangeEvent<HTMLInputElement>) => {\n              backdropHandle[refKey]?.(e.target.value);\n              onChange?.(e);\n            },\n            [onChange]\n          )}\n          onKeyDown={useCallback(\n            (e: React.KeyboardEvent<HTMLInputElement>) => {\n              // Ignore keydown events during IME composition.\n              // Safari sometimes fires keydown event after compositionend so also ignore it.\n              // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n              if (e.nativeEvent.isComposing || e.nativeEvent.keyCode === 229) {\n                return;\n              }\n\n              onKeyDown?.(e);\n              selectionStore._updateSeletion();\n            },\n            [onKeyDown]\n          )}\n        />\n      </div>\n    );\n  }\n);\n","import { execReg } from \"./regex\";\nimport type { Renderer } from \"./types\";\n\nexport type StyleOrRender =\n  | React.CSSProperties\n  | ((props: {\n      children: React.ReactNode;\n      value: string;\n      key?: string | undefined;\n    }) => React.ReactNode);\n\n/**\n * An utility to create renderer function with regex.\n *\n * The priority is descending order.\n */\nexport const createRegexRenderer = (\n  matchers: [RegExp, StyleOrRender][]\n): Renderer => {\n  const allStyles = matchers.map(([, style]) => style);\n\n  return (value) => {\n    const [indexSet, startToStyleMap, endToStyleMap] = matchers.reduce(\n      (acc, [matcher, style]) => {\n        execReg(matcher, value).forEach((m) => {\n          const start = m.index;\n          const end = m.index + m[0]!.length;\n\n          acc[0].add(start).add(end);\n          let startStyles = acc[1].get(start);\n          let endStyles = acc[2].get(end);\n          if (!startStyles) {\n            acc[1].set(start, (startStyles = []));\n          }\n          if (!endStyles) {\n            acc[2].set(end, (endStyles = []));\n          }\n          startStyles.push(style);\n          endStyles.push(style);\n        });\n        return acc;\n      },\n      [\n        new Set<number>(),\n        new Map<number, StyleOrRender[]>(),\n        new Map<number, StyleOrRender[]>(),\n      ] as const\n    );\n    const indexes = Array.from(indexSet);\n    indexes.sort((a, b) => {\n      return a - b;\n    });\n\n    let prevEnd = 0;\n    const activeStyles: StyleOrRender[] = [];\n    const res: React.ReactNode[] = [];\n    for (let i = 0; i < indexes.length; i++) {\n      const start = indexes[i]!;\n      const end = indexes[i + 1] ?? value.length;\n      if (start === end) continue;\n      const headValue = value.slice(prevEnd, start);\n      if (headValue) {\n        res.push(headValue);\n      }\n      const startStyles = startToStyleMap.get(start);\n      const endStyles = endToStyleMap.get(end);\n      if (startStyles) {\n        startStyles.forEach((s) => {\n          activeStyles.push(s);\n        });\n        activeStyles.sort((a, b) => {\n          return allStyles.indexOf(b) - allStyles.indexOf(a);\n        });\n      }\n\n      const v = value.slice(start, end);\n      res.push(\n        activeStyles.reduceRight((acc, styleOrRender, j) => {\n          const key = j === 0 ? String(start) : undefined;\n          if (typeof styleOrRender === \"function\") {\n            return styleOrRender({ children: acc, value: v, key });\n          } else {\n            return (\n              <span key={key} style={styleOrRender}>\n                {acc}\n              </span>\n            );\n          }\n        }, v as React.ReactNode)\n      );\n\n      if (endStyles) {\n        endStyles.forEach((s) => {\n          activeStyles.splice(activeStyles.indexOf(s), 1);\n        });\n      }\n\n      prevEnd = end;\n    }\n\n    const tailValue = value.slice(prevEnd);\n    if (tailValue) {\n      res.push(tailValue);\n    }\n\n    return res;\n  };\n};\n","/**\n * @internal\n */\nexport const execReg = (reg: RegExp, text: string): RegExpExecArray[] => {\n  const results: RegExpExecArray[] = [];\n  let match: RegExpExecArray | null = null;\n  while ((match = reg.exec(text))) {\n    results.push(match);\n  }\n  return results;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}