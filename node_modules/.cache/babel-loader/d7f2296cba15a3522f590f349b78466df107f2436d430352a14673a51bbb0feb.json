{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/Rust/nub-ide/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { invoke } from '@tauri-apps/api/tauri';\n// import { save } from '@tauri-apps/api/dialog';\n// import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// import Help from './Components/Help_Component/Help';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import './App.css';\n\n// function App() {\n//     const [terminalVisible, setTerminalVisible] = useState(false);\n//     const [helpVisible, setHelpVisible] = useState(false);\n//     const [filePath, setFilePath] = useState(null);\n\n//     // Функція для зміни стану відображення терміналу\n//     const toggleTerminal = () => {\n//         setTerminalVisible(!terminalVisible);\n//     };\n\n//     // Функція для зміни стану відображення довідки\n//     const toggleHelp = () => {\n//         setHelpVisible(!helpVisible);\n//     };\n\n//     // Функція для закриття довідки\n//     const closeHelp = () => {\n//         setHelpVisible(false);\n//     };\n\n//     // Функція для збереження вмісту файлу\n//     const saveFileContents = async (fileContent) => {\n//         try {\n//             if (filePath) {\n//                 await invoke(\"save_file\", { path: filePath, contents: fileContent });\n//             } else {\n//                 const savePath = await save({\n//                     filters: [\n//                         { name: 'Niklang.nl', extensions: ['nl']},\n//                         { name: 'Based.based', extensions: ['based']},\n//                         { name: 'Udav.udav', extensions: ['udav']},\n//                         { name: 'Other', extensions: ['**']}\n//                     ]\n//                 });\n//                 if (!savePath) return;\n//                 setFilePath(savePath);\n//                 await invoke(\"save_file\", { path: savePath, contents: fileContent });\n//             }\n//         } catch (err) {\n//             console.error(err);\n//         }\n//     };\n\n//     return (\n//         <div className=\"App\">\n//             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n//             <CodeEditor onSave={saveFileContents} />\n//             {terminalVisible && <Terminal />}\n//             {helpVisible && <Help onClose={closeHelp} />}\n//         </div>\n//     );\n// }\n\n// export default App;\n\n// App.js\nimport React, { useState } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save } from '@tauri-apps/api/dialog';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [filePath, setFilePath] = useState(null);\n\n  // Функція для зміни стану відображення терміналу\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n\n  // Функція для зміни стану відображення довідки\n  const toggleHelp = () => {\n    setHelpVisible(!helpVisible);\n  };\n\n  // Функція для закриття довідки\n  const closeHelp = () => {\n    setHelpVisible(false);\n  };\n\n  // Функція для збереження вмісту файлу\n  const saveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        savePath = await save({\n          filters: [{\n            name: 'Niklang.nl',\n            extensions: ['nl']\n          }, {\n            name: 'Based.based',\n            extensions: ['based']\n          }, {\n            name: 'Udav.udav',\n            extensions: ['udav']\n          }, {\n            name: 'Other',\n            extensions: ['**']\n          }]\n        });\n        if (!savePath) return;\n        setFilePath(savePath);\n      }\n      await invoke(\"save_file\", {\n        path: savePath,\n        contents: fileContent\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBarMenu, {\n      toggleTerminal: toggleTerminal,\n      toggleHelp: toggleHelp,\n      onSave: saveFileContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      onSave: saveFileContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), terminalVisible && /*#__PURE__*/_jsxDEV(Terminal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }, this), helpVisible && /*#__PURE__*/_jsxDEV(Help, {\n      onClose: closeHelp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"OPsTmstEPcxQcE0ETSXKk2wOrmw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","invoke","save","TopBarMenu","CodeEditor","Help","Terminal","jsxDEV","_jsxDEV","App","_s","terminalVisible","setTerminalVisible","helpVisible","setHelpVisible","filePath","setFilePath","toggleTerminal","toggleHelp","closeHelp","saveFileContents","fileContent","savePath","filters","name","extensions","path","contents","err","console","error","className","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/Rust/nub-ide/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { invoke } from '@tauri-apps/api/tauri';\n// import { save } from '@tauri-apps/api/dialog';\n// import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// import Help from './Components/Help_Component/Help';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import './App.css';\n\n// function App() {\n//     const [terminalVisible, setTerminalVisible] = useState(false);\n//     const [helpVisible, setHelpVisible] = useState(false);\n//     const [filePath, setFilePath] = useState(null);\n\n//     // Функція для зміни стану відображення терміналу\n//     const toggleTerminal = () => {\n//         setTerminalVisible(!terminalVisible);\n//     };\n\n//     // Функція для зміни стану відображення довідки\n//     const toggleHelp = () => {\n//         setHelpVisible(!helpVisible);\n//     };\n\n//     // Функція для закриття довідки\n//     const closeHelp = () => {\n//         setHelpVisible(false);\n//     };\n\n//     // Функція для збереження вмісту файлу\n//     const saveFileContents = async (fileContent) => {\n//         try {\n//             if (filePath) {\n//                 await invoke(\"save_file\", { path: filePath, contents: fileContent });\n//             } else {\n//                 const savePath = await save({\n//                     filters: [\n//                         { name: 'Niklang.nl', extensions: ['nl']},\n//                         { name: 'Based.based', extensions: ['based']},\n//                         { name: 'Udav.udav', extensions: ['udav']},\n//                         { name: 'Other', extensions: ['**']}\n//                     ]\n//                 });\n//                 if (!savePath) return;\n//                 setFilePath(savePath);\n//                 await invoke(\"save_file\", { path: savePath, contents: fileContent });\n//             }\n//         } catch (err) {\n//             console.error(err);\n//         }\n//     };\n\n//     return (\n//         <div className=\"App\">\n//             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n//             <CodeEditor onSave={saveFileContents} />\n//             {terminalVisible && <Terminal />}\n//             {helpVisible && <Help onClose={closeHelp} />}\n//         </div>\n//     );\n// }\n\n// export default App;\n\n\n// App.js\nimport React, { useState } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save } from '@tauri-apps/api/dialog';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\n\nfunction App() {\n    const [terminalVisible, setTerminalVisible] = useState(false);\n    const [helpVisible, setHelpVisible] = useState(false);\n    const [filePath, setFilePath] = useState(null);\n\n    // Функція для зміни стану відображення терміналу\n    const toggleTerminal = () => {\n        setTerminalVisible(!terminalVisible);\n    };\n\n    // Функція для зміни стану відображення довідки\n    const toggleHelp = () => {\n        setHelpVisible(!helpVisible);\n    };\n\n    // Функція для закриття довідки\n    const closeHelp = () => {\n        setHelpVisible(false);\n    };\n\n    // Функція для збереження вмісту файлу\n    const saveFileContents = async (fileContent, savePath = filePath) => {\n        try {\n            if (!savePath) {\n                savePath = await save({\n                    filters: [\n                        { name: 'Niklang.nl', extensions: ['nl']},\n                        { name: 'Based.based', extensions: ['based']},\n                        { name: 'Udav.udav', extensions: ['udav']},\n                        { name: 'Other', extensions: ['**']}\n                    ]\n                });\n                if (!savePath) return;\n                setFilePath(savePath);\n            }\n            await invoke(\"save_file\", { path: savePath, contents: fileContent });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n            <CodeEditor onSave={saveFileContents} />\n            {terminalVisible && <Terminal />}\n            {helpVisible && <Help onClose={closeHelp} />}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}