{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/Components/Code_Editor_Component/Code_Editor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { RichTextarea } from \"rich-textarea\";\nimport { Container } from 'react-bootstrap';\nimport './Code_Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeEditor({\n  programming_language,\n  fileContent\n}) {\n  _s();\n  const [text, setText] = useState('');\n  const [history, setHistory] = useState([]);\n  const [currentStep, setCurrentStep] = useState(-1);\n  const textareaRef = useRef(null);\n\n  // Дужки та оператори для підсвічування\n  const operators = [\"+\", \"-\", \"*\", \"/\", \"++\", \"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"];\n  const brackets = [\"{\", \"}\", \"[\", \"]\", \"(\", \")\", \"\\\"\", \"\\\"\", \"'\", \"'\"];\n  // Ключові слова мов програмування\n  // const NikLangKeyword = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n  // const UdavKeywords = ['друк', 'ввід', 'якщо', 'інакше', 'інакшеЯкщо', 'правда', 'брехня', 'або', 'не', 'також', 'для', 'поки', 'функція', 'припинити', 'продовжити', 'повернути', 'пропуск', 'клас', 'як', 'від', 'отримати', 'заочно', 'жодний', 'крім', 'належить', 'підняти', 'остаточно', 'це', 'лямбда', 'спробувати', 'неЛокально', 'утверджувати', 'видалити', 'глобально', 'із', 'асинхронний', 'здобути', 'число', 'дріб', 'рядок', 'границях', 'своє'];\n  // const BasedKeywords = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n  const keywords = {\n    NikLang: ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'],\n    Udav: ['друк', 'ввід', 'якщо', 'інакше', 'інакшеЯкщо', 'правда', 'брехня', 'або', 'не', 'також', 'для', 'поки', 'функція', 'припинити', 'продовжити', 'повернути', 'пропуск', 'клас', 'як', 'від', 'отримати', 'заочно', 'жодний', 'крім', 'належить', 'підняти', 'остаточно', 'це', 'лямбда', 'спробувати', 'неЛокально', 'утверджувати', 'видалити', 'глобально', 'із', 'асинхронний', 'здобути', 'число', 'дріб', 'рядок', 'границях', 'своє'],\n    Based: ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'],\n    Other: [] // No highlighting for other languages\n  };\n  const applySyntaxHighlight = value => {\n    const languageKeywords = keywords[programming_language] || [];\n    let highlightedText = value;\n\n    // Highlight keywords\n    languageKeywords.forEach(keyword => {\n      const keywordRegex = new RegExp(`\\\\b${keyword}\\\\b`, 'g');\n      highlightedText = highlightedText.replace(keywordRegex, `<span class=\"keyword\">${keyword}</span>`);\n    });\n\n    // Highlight operators\n    operators.forEach(operator => {\n      const operatorRegex = new RegExp(`\\\\${operator}`, 'g');\n      highlightedText = highlightedText.replace(operatorRegex, `<span class=\"operator\">${operator}</span>`);\n    });\n\n    // Highlight brackets\n    brackets.forEach(bracket => {\n      const bracketRegex = new RegExp(`\\\\${bracket}`, 'g');\n      highlightedText = highlightedText.replace(bracketRegex, `<span class=\"bracket\">${bracket}</span>`);\n    });\n    return {\n      __html: highlightedText\n    }; // Use dangerouslySetInnerHTML to render HTML\n  };\n\n  // Відміна дії\n  const undo = () => {\n    if (currentStep > 0) {\n      setText(history[currentStep - 1]);\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // На дію вперед\n  const redo = () => {\n    if (currentStep < history.length - 1) {\n      setText(history[currentStep + 1]);\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  // Додавання табуляції\n  const tabulation = () => {\n    const textarea = textareaRef.current;\n    const {\n      selectionStart,\n      selectionEnd,\n      value\n    } = textarea;\n    const start = value.substring(0, selectionStart);\n    const end = value.substring(selectionEnd);\n    const tabbedText = start + '\\t' + end;\n    setText(tabbedText);\n    const currentPosition = textarea.selectionStart;\n    textarea.value = tabbedText;\n    textarea.setSelectionRange(currentPosition + 1, currentPosition + 1);\n    textarea.focus();\n  };\n\n  // Створення коментаря\n  const createOrRemoveComment = () => {\n    let commentSymbol = \"\";\n    switch (programming_language) {\n      case \"NikLang\":\n        commentSymbol = \"// \";\n        break;\n      case \"Udav\":\n      case \"Based\":\n        commentSymbol = \"# \";\n        break;\n      default:\n        commentSymbol = \"\";\n        break;\n    }\n    const textarea = document.getElementById('textarea');\n    let currentPosition = textarea.selectionStart;\n    moveToLineStart();\n    const {\n      selectionStart,\n      selectionEnd,\n      value\n    } = textarea;\n    const start = value.substring(0, selectionStart);\n    const end = value.substring(selectionEnd);\n    const textAfterCursor = value.substring(selectionStart);\n    let newText;\n    // Видаляємо коментар\n    if (textAfterCursor.trim().startsWith(commentSymbol.trim())) {\n      newText = start + end.substring(commentSymbol.length);\n      currentPosition -= commentSymbol.length;\n    }\n    // Додаємо коментар\n    else {\n      newText = start + commentSymbol + end;\n      currentPosition += commentSymbol.length;\n    }\n    setText(newText);\n    textarea.value = newText;\n    textarea.setSelectionRange(currentPosition, currentPosition);\n    textarea.focus();\n  };\n\n  // Перемістити курсор на початок рядка\n  const moveToLineStart = () => {\n    const textarea = document.getElementById('textarea');\n    const currentPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, currentPosition);\n    const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n    const newPosition = lastNewLineIndex === -1 ? 0 : lastNewLineIndex + 1;\n    textarea.setSelectionRange(newPosition, newPosition);\n    textarea.focus();\n  };\n\n  // Натискання на Ctrl + z та Ctrl + y\n  useEffect(() => {\n    const handleUndoRedo = event => {\n      if (event.ctrlKey && event.key === 'z') {\n        event.preventDefault();\n        undo();\n      } else if (event.ctrlKey && event.key === 'y') {\n        event.preventDefault();\n        redo();\n      }\n    };\n    window.addEventListener('keydown', handleUndoRedo);\n    return () => {\n      window.removeEventListener('keydown', handleUndoRedo);\n    };\n  }, [undo, redo]);\n\n  // Натискання на Tab\n  useEffect(() => {\n    const handleTabulation = event => {\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        tabulation();\n      }\n    };\n    window.addEventListener('keydown', handleTabulation);\n    return () => {\n      window.removeEventListener('keydown', handleTabulation);\n    };\n  }, [tabulation]);\n\n  // Додавання табуляції в наступний рядок, якщо вона є в минулому\n  useEffect(() => {\n    const handleEnterPress = event => {\n      if (event.key === \"Enter\") {\n        const textarea = textareaRef.current;\n        const currentPosition = textarea.selectionStart;\n        const textBeforeCursor = textarea.value.substring(0, currentPosition);\n        const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n        const lastLine = textBeforeCursor.substring(lastNewLineIndex + 1);\n        if (lastLine.startsWith('\\t')) {\n          event.preventDefault();\n          const spaces = '\\t'.repeat(lastLine.match(/^\\t*/)[0].length); // рахуємо кількість табуляцій\n          const newText = textarea.value.substring(0, currentPosition) + '\\n' + spaces + textarea.value.substring(currentPosition);\n          setText(newText);\n          textarea.setSelectionRange(currentPosition + spaces.length + 1, currentPosition + spaces.length + 1); // переміщення курсору\n        }\n      }\n    };\n    window.addEventListener('keydown', handleEnterPress);\n    return () => {\n      window.removeEventListener('keydown', handleEnterPress);\n    };\n  }, [text]);\n\n  // Додавання коментарів\n  useEffect(() => {\n    const handleComment = event => {\n      if (event.ctrlKey && event.key === '/') {\n        event.preventDefault();\n        createOrRemoveComment();\n      }\n    };\n    window.addEventListener('keydown', handleComment);\n    return () => {\n      window.removeEventListener('keydown', handleComment);\n    };\n  }, [createOrRemoveComment]);\n\n  // Відкриття файлу\n  useEffect(() => {\n    if (fileContent) {\n      if (fileContent == \"new_file\") {\n        setText(\"\");\n      } else {\n        setText(fileContent);\n      }\n    }\n  }, [fileContent]);\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    const lineNumbersEle = document.getElementById('line-numbers');\n    const displayLineNumbers = () => {\n      const lines = text.split('\\n');\n      lineNumbersEle.innerHTML = Array.from({\n        length: lines.length\n      }, (_, i) => `<div>${i + 1}</div>`).join('');\n    };\n    displayLineNumbers();\n    const handleInput = event => {\n      if (event.inputType === \"insertText\") {\n        const {\n          selectionStart,\n          value\n        } = event.target;\n        const closingChars = {\n          '(': ')',\n          '{': '}',\n          '[': ']',\n          '\"': '\"',\n          \"'\": \"'\"\n        };\n        if (event.data in closingChars) {\n          event.preventDefault();\n          const closingChar = closingChars[event.data];\n          setText(value.substring(0, selectionStart) + closingChar + value.substring(selectionStart));\n          textarea.selectionStart = selectionStart;\n          textarea.selectionEnd = selectionStart;\n          setTimeout(() => {\n            textarea.focus();\n            textarea.setSelectionRange(selectionStart, selectionStart);\n          }, 0);\n        } else if (event.data === closingChars[value[selectionStart]]) {\n          event.preventDefault();\n          textarea.selectionStart = selectionStart;\n          textarea.selectionEnd = selectionStart;\n          setTimeout(() => {\n            textarea.focus();\n            textarea.setSelectionRange(selectionStart, selectionStart);\n          }, 0);\n        }\n      }\n    };\n    textarea.addEventListener('input', handleInput);\n    return () => {\n      textarea.removeEventListener('input', handleInput);\n    };\n  }, [text]);\n  const handleChange = event => {\n    setText(event.target.value);\n    const newHistory = [...history.slice(0, currentStep + 1), event.target.value];\n    setHistory(newHistory);\n    setCurrentStep(newHistory.length - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"code-editor-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"line-numbers\",\n      className: \"code-lines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n}\n_s(CodeEditor, \"UaUf1wXy9hIRiVRhgmTEXI1Ns28=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","RichTextarea","Container","jsxDEV","_jsxDEV","CodeEditor","programming_language","fileContent","_s","text","setText","history","setHistory","currentStep","setCurrentStep","textareaRef","operators","brackets","keywords","NikLang","Udav","Based","Other","applySyntaxHighlight","value","languageKeywords","highlightedText","forEach","keyword","keywordRegex","RegExp","replace","operator","operatorRegex","bracket","bracketRegex","__html","undo","redo","length","tabulation","textarea","current","selectionStart","selectionEnd","start","substring","end","tabbedText","currentPosition","setSelectionRange","focus","createOrRemoveComment","commentSymbol","document","getElementById","moveToLineStart","textAfterCursor","newText","trim","startsWith","textBeforeCursor","lastNewLineIndex","lastIndexOf","newPosition","handleUndoRedo","event","ctrlKey","key","preventDefault","window","addEventListener","removeEventListener","handleTabulation","handleEnterPress","lastLine","spaces","repeat","match","handleComment","lineNumbersEle","displayLineNumbers","lines","split","innerHTML","Array","from","_","i","join","handleInput","inputType","target","closingChars","data","closingChar","setTimeout","handleChange","newHistory","slice","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/Components/Code_Editor_Component/Code_Editor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { RichTextarea } from \"rich-textarea\";\nimport { Container } from 'react-bootstrap';\nimport './Code_Editor.css';\n\nexport default function CodeEditor({ programming_language, fileContent }) {\n    const [text, setText] = useState('');\n    const [history, setHistory] = useState([]);\n    const [currentStep, setCurrentStep] = useState(-1);\n    const textareaRef = useRef(null);\n\n    // Дужки та оператори для підсвічування\n    const operators = [\"+\", \"-\", \"*\", \"/\", \"++\", \"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"];\n    const brackets = [\"{\", \"}\", \"[\", \"]\", \"(\", \")\", \"\\\"\", \"\\\"\", \"'\", \"'\"];\n    // Ключові слова мов програмування\n    // const NikLangKeyword = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n    // const UdavKeywords = ['друк', 'ввід', 'якщо', 'інакше', 'інакшеЯкщо', 'правда', 'брехня', 'або', 'не', 'також', 'для', 'поки', 'функція', 'припинити', 'продовжити', 'повернути', 'пропуск', 'клас', 'як', 'від', 'отримати', 'заочно', 'жодний', 'крім', 'належить', 'підняти', 'остаточно', 'це', 'лямбда', 'спробувати', 'неЛокально', 'утверджувати', 'видалити', 'глобально', 'із', 'асинхронний', 'здобути', 'число', 'дріб', 'рядок', 'границях', 'своє'];\n    // const BasedKeywords = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n    const keywords = {\n        NikLang: ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'],\n        Udav: ['друк', 'ввід', 'якщо', 'інакше', 'інакшеЯкщо', 'правда', 'брехня', 'або', 'не', 'також', 'для', 'поки', 'функція', 'припинити', 'продовжити', 'повернути', 'пропуск', 'клас', 'як', 'від', 'отримати', 'заочно', 'жодний', 'крім', 'належить', 'підняти', 'остаточно', 'це', 'лямбда', 'спробувати', 'неЛокально', 'утверджувати', 'видалити', 'глобально', 'із', 'асинхронний', 'здобути', 'число', 'дріб', 'рядок', 'границях', 'своє'],\n        Based: ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'],\n        Other: [] // No highlighting for other languages\n    };\n\n    const applySyntaxHighlight = (value) => {\n        const languageKeywords = keywords[programming_language] || [];\n        let highlightedText = value;\n\n        // Highlight keywords\n        languageKeywords.forEach(keyword => {\n            const keywordRegex = new RegExp(`\\\\b${keyword}\\\\b`, 'g');\n            highlightedText = highlightedText.replace(keywordRegex, `<span class=\"keyword\">${keyword}</span>`);\n        });\n\n        // Highlight operators\n        operators.forEach(operator => {\n            const operatorRegex = new RegExp(`\\\\${operator}`, 'g');\n            highlightedText = highlightedText.replace(operatorRegex, `<span class=\"operator\">${operator}</span>`);\n        });\n\n        // Highlight brackets\n        brackets.forEach(bracket => {\n            const bracketRegex = new RegExp(`\\\\${bracket}`, 'g');\n            highlightedText = highlightedText.replace(bracketRegex, `<span class=\"bracket\">${bracket}</span>`);\n        });\n\n        return { __html: highlightedText }; // Use dangerouslySetInnerHTML to render HTML\n    };\n\n    // Відміна дії\n    const undo = () => {\n        if (currentStep > 0) {\n            setText(history[currentStep - 1]);\n            setCurrentStep(currentStep - 1);\n        }\n    };\n\n    // На дію вперед\n    const redo = () => {\n        if (currentStep < history.length - 1) {\n            setText(history[currentStep + 1]);\n            setCurrentStep(currentStep + 1);\n        }\n    };\n\n    // Додавання табуляції\n    const tabulation = () => {\n        const textarea = textareaRef.current;\n        const { selectionStart, selectionEnd, value } = textarea;\n        const start = value.substring(0, selectionStart);\n        const end = value.substring(selectionEnd);\n        const tabbedText = start + '\\t' + end;\n        setText(tabbedText);\n        const currentPosition = textarea.selectionStart;\n        textarea.value = tabbedText;\n        textarea.setSelectionRange(currentPosition + 1, currentPosition + 1);\n        textarea.focus();\n    };        \n    \n    // Створення коментаря\n    const createOrRemoveComment = () => {\n        let commentSymbol = \"\"; \n        \n        switch (programming_language) {\n            case \"NikLang\":\n                commentSymbol = \"// \"; \n                break;\n            case \"Udav\":\n            case \"Based\":\n                commentSymbol = \"# \";\n                break;\n            default:\n                commentSymbol = \"\";\n                break;\n        }\n    \n        const textarea = document.getElementById('textarea');\n        let currentPosition = textarea.selectionStart;\n    \n        moveToLineStart();\n        \n        const { selectionStart, selectionEnd, value } = textarea;\n        const start = value.substring(0, selectionStart);\n        const end = value.substring(selectionEnd);\n        const textAfterCursor = value.substring(selectionStart); \n        \n        let newText;\n        // Видаляємо коментар\n        if (textAfterCursor.trim().startsWith(commentSymbol.trim())) {\n            newText = start + end.substring(commentSymbol.length);\n            currentPosition -= commentSymbol.length;\n        } \n        // Додаємо коментар\n        else {\n            newText = start + commentSymbol + end;\n            currentPosition += commentSymbol.length;\n        }\n        \n        setText(newText);\n        textarea.value = newText;\n        textarea.setSelectionRange(currentPosition, currentPosition);\n        textarea.focus();\n    };\n\n    // Перемістити курсор на початок рядка\n    const moveToLineStart = () => {\n        const textarea = document.getElementById('textarea');\n        const currentPosition = textarea.selectionStart;\n        const textBeforeCursor = textarea.value.substring(0, currentPosition);\n        const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n        const newPosition = lastNewLineIndex === -1 ? 0 : lastNewLineIndex + 1;\n        textarea.setSelectionRange(newPosition, newPosition);\n        textarea.focus();\n    };\n\n    // Натискання на Ctrl + z та Ctrl + y\n    useEffect(() => {\n        const handleUndoRedo = (event) => {\n            if (event.ctrlKey && event.key === 'z') {\n                event.preventDefault();\n                undo();\n            } else if (event.ctrlKey && event.key === 'y') {\n                event.preventDefault();\n                redo();\n            }\n        };\n\n        window.addEventListener('keydown', handleUndoRedo);\n\n        return () => {\n            window.removeEventListener('keydown', handleUndoRedo);\n        };\n    }, [undo, redo]);\n\n    // Натискання на Tab\n    useEffect(() => {\n        const handleTabulation = (event) => {\n            if (event.key === 'Tab') {\n                event.preventDefault();\n                tabulation();\n            }\n        };\n\n        window.addEventListener('keydown', handleTabulation);\n\n        return () => {\n            window.removeEventListener('keydown', handleTabulation);\n        };\n    }, [tabulation]);\n\n    // Додавання табуляції в наступний рядок, якщо вона є в минулому\n    useEffect(() => {\n        const handleEnterPress = (event) => {\n            if (event.key === \"Enter\") {\n                const textarea = textareaRef.current;\n                const currentPosition = textarea.selectionStart;\n                const textBeforeCursor = textarea.value.substring(0, currentPosition);\n                const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n                const lastLine = textBeforeCursor.substring(lastNewLineIndex + 1);\n    \n                if (lastLine.startsWith('\\t')) {\n                    event.preventDefault();\n                    const spaces = '\\t'.repeat(lastLine.match(/^\\t*/)[0].length); // рахуємо кількість табуляцій\n                    const newText = textarea.value.substring(0, currentPosition) + '\\n' + spaces + textarea.value.substring(currentPosition);\n                    setText(newText);\n                    textarea.setSelectionRange(currentPosition + spaces.length + 1, currentPosition + spaces.length + 1); // переміщення курсору\n                }\n            }\n        };\n    \n        window.addEventListener('keydown', handleEnterPress);\n    \n        return () => {\n            window.removeEventListener('keydown', handleEnterPress);\n        };\n    }, [text]);    \n\n    // Додавання коментарів\n    useEffect(() => {\n        const handleComment = (event) => {\n            if (event.ctrlKey && event.key === '/') {\n                event.preventDefault();\n                createOrRemoveComment();\n            }\n        };\n\n        window.addEventListener('keydown', handleComment);\n\n        return () => {\n            window.removeEventListener('keydown', handleComment);\n        };\n    }, [createOrRemoveComment]);\n\n    // Відкриття файлу\n    useEffect(() => {\n        if (fileContent) {\n            if(fileContent == \"new_file\")\n            {\n                setText(\"\");\n            }\n            else\n            {\n                setText(fileContent);\n            }\n        }\n    }, [fileContent]);\n\n    useEffect(() => {\n        const textarea = textareaRef.current;\n        const lineNumbersEle = document.getElementById('line-numbers');\n\n        const displayLineNumbers = () => {\n            const lines = text.split('\\n');\n            lineNumbersEle.innerHTML = Array.from({\n                length: lines.length,\n            }, (_, i) => `<div>${i + 1}</div>`).join('');\n        };\n\n        displayLineNumbers();\n\n        const handleInput = (event) => {\n            if (event.inputType === \"insertText\") {\n                const { selectionStart, value } = event.target;\n                const closingChars = {\n                    '(': ')',\n                    '{': '}',\n                    '[': ']',\n                    '\"': '\"',\n                    \"'\": \"'\"\n                };\n        \n                if (event.data in closingChars) {\n                    event.preventDefault();\n                    const closingChar = closingChars[event.data];\n                    setText(value.substring(0, selectionStart) + closingChar + value.substring(selectionStart));\n                    textarea.selectionStart = selectionStart;\n                    textarea.selectionEnd = selectionStart;\n                    setTimeout(() => {\n                        textarea.focus();\n                        textarea.setSelectionRange(selectionStart, selectionStart);\n                    }, 0);\n                } else if (event.data === closingChars[value[selectionStart]]) {\n                    event.preventDefault();\n                    textarea.selectionStart = selectionStart;\n                    textarea.selectionEnd = selectionStart;\n                    setTimeout(() => {\n                        textarea.focus();\n                        textarea.setSelectionRange(selectionStart, selectionStart);\n                    }, 0);\n                }\n            }\n        };                \n\n        textarea.addEventListener('input', handleInput);\n\n        return () => {\n            textarea.removeEventListener('input', handleInput);\n        };\n    }, [text]);\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n        const newHistory = [...history.slice(0, currentStep + 1), event.target.value];\n        setHistory(newHistory);\n        setCurrentStep(newHistory.length - 1);\n    };\n\n    return (\n        <Container className='code-editor-container'>\n            <div id=\"line-numbers\" className=\"code-lines\"></div>\n            {/* <RichTextarea\n                ref={textareaRef}\n                id=\"textarea\" \n                value={text} \n                onChange={handleChange} \n                className='code-editor'>\n            </RichTextarea> */}\n            \n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}