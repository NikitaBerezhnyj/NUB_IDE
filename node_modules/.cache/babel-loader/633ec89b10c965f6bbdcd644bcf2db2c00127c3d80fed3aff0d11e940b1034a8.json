{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/Components/Terminal_component/Terminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { readDir } from \"@tauri-apps/api/fs\";\nimport { desktopDir } from \"@tauri-apps/api/path\";\nimport { relaunch } from \"@tauri-apps/api/process\";\nimport { exists } from \"@tauri-apps/api/fs\";\nimport \"./Terminal.css\";\nimport { event } from \"jquery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Terminal({\n  visible,\n  onNew,\n  onOpen,\n  onClose,\n  onExit,\n  onlanguagechange,\n  onThemeChange,\n  filePath\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValues, setOutputValues] = useState([]);\n  const outputWrapperRef = useRef(null);\n  const initialInputValue = \"\";\n  const initialOutputValues = [];\n  const [pathForTerminal, setPathForTerminal] = useState(\"\"); // Шлях який використовується тільки для терміналу\n\n  // Локалізація програми\n  const {\n    t,\n    i18n\n  } = useTranslation(\"global\");\n\n  // Встановлення віртуального шляху для терміналу\n  useEffect(() => {\n    if (filePath != null) {\n      const lastSeparatorIndex = filePath.lastIndexOf(\"/\");\n      const trimmedPath = filePath.substring(0, lastSeparatorIndex);\n      setPathForTerminal(trimmedPath);\n    }\n  }, [filePath]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [outputValues]);\n  const scrollToBottom = () => {\n    if (outputWrapperRef.current) {\n      outputWrapperRef.current.scrollTop = outputWrapperRef.current.scrollHeight;\n    }\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const getDesktopDir = async () => {\n    setPathForTerminal(await desktopDir());\n    console.log(\"Desktop path: \" + pathForTerminal);\n  };\n  const reload = async () => {\n    await relaunch();\n  };\n  useEffect(() => {\n    getDesktopDir();\n  }, []);\n  const handleKeyPress = async event => {\n    if (event.key === \"Enter\") {\n      const authenticCommand = inputValue;\n      const command = inputValue.trim().split(\" \");\n      let result;\n      // Команди терміналу\n      // Змінити директорію (змінити змінну, яка використовується тільки для терміналу)\n      // if (command[0] === \"cd\" || command[0] === \"зт\") {\n      //   const newPath = pathForTerminal + \"/\" + command[1];\n      //   setPathForTerminal(newPath);\n      // }\n      if (command[0] === \"cd\" || command[0] === \"зт\") {\n        let newPath = pathForTerminal; // Зберегти поточний шлях\n        if (command.length > 1) {\n          // Обробити абсолютний або відносний шлях\n          if (command[1].startsWith(\"/\")) {\n            newPath = command[1];\n          } else if (command[1] === \"..\") {\n            const lastSeparatorIndex = newPath.lastIndexOf(\"/\");\n            newPath = newPath.substring(0, lastSeparatorIndex);\n          } else {\n            newPath = pathForTerminal + \"/\" + command[1];\n          }\n          // Перевірка існування шляху\n          try {\n            const isDirectory = await exists(newPath);\n            if (!isDirectory) {\n              result = \"Тека \" + newPath + \" не існує\";\n              setOutputValues([...outputValues, {\n                command: authenticCommand,\n                result: result\n              }]);\n              setInputValue(\"\");\n              return;\n            } else {\n              result = \"Успішно перейдено до \" + newPath; // Додайте цей рядок для повідомлення про успішне виконання команди\n            }\n          } catch (error) {\n            result = \"Помилка перевірки шляху: \" + error.message;\n            setOutputValues([...outputValues, {\n              command: authenticCommand,\n              result: result\n            }]);\n            setInputValue(\"\");\n            return;\n          }\n        }\n        setPathForTerminal(newPath); // Встановити новий шлях\n        setOutputValues([...outputValues, {\n          command: authenticCommand,\n          result: result\n        }]); // Додайте цей рядок для додавання результату до outputValues\n        setInputValue(\"\");\n      }\n\n      // Показати вміст директорії (перевірити вміст директорії за віртуальним шляхом)\n      else if (command[0] === \"ls\" || command[0] === \"лф\") {\n        try {\n          // Читаємо вміст теки, використовуючи віртуальний шлях\n          const directoryContents = await readDir(pathForTerminal);\n\n          // Очищаємо шляхи файлів від базового шляху\n          const fileNames = directoryContents.map(entry => {\n            const pathSegments = entry.path.split(\"/\");\n            return pathSegments[pathSegments.length - 1]; // Останній елемент шляху\n          });\n\n          // Записуємо шляхи файлів у змінну result як рядок\n          result = fileNames.join(\"\\n\");\n        } catch (error) {\n          // Обробляємо помилки, якщо вони виникли під час читання директорії\n          result = error.message;\n        }\n      }\n      // Показати в якій директорії знаходиться користувач (знову ж таки віртуально)\n      else if (command[0] === \"pwd\" || command[0] === \"цт\") {\n        result = pathForTerminal;\n      }\n      // Перезапуск програми\n      else if (command[0] === \"reload\") {\n        reload();\n      }\n      // Новий файл\n      else if (command[0] === \"new\" || command[0] === \"новий\") {\n        if (command.length === 1) {\n          result = \"Використання: new <назва нового файлу>\";\n        } else if (command.length > 2) {\n          result = \"Використання: new <назва нового файлу>\";\n        } else {\n          const newFilePath = pathForTerminal + command[1];\n          onNew(newFilePath);\n        }\n      }\n      // Відкриття файлу\n      else if (command[0] === \"open\" || command[0] === \"відкрити\") {\n        if (command.length === 1) {\n          result = \"Використання: open <назва нового файлу>\";\n        } else if (command.length > 2) {\n          result = \"Використання: open <назва нового файлу>\";\n        } else {\n          const openFilePath = pathForTerminal + command[1];\n          onOpen(openFilePath);\n        }\n      }\n      // Закрити термінал\n      else if (command[0] === \"close\" || command[0] === \"закрити\") {\n        onClose();\n      }\n      // Допомога\n      else if (command[0] === \"help\" || command[0] === \"допомога\") {\n        result = t(\"terminal.help\");\n      }\n      // Змінити мову\n      else if (command[0] === \"language\" || command[0] === \"мова\") {\n        if (command.length === 1) {\n          result = t(\"terminal.language\");\n        } else if (command[1] === \"українська\" || command[1] === \"ukrainian\") {\n          onlanguagechange(\"ua\");\n          result = \"Українську мову встановлено\";\n        } else if (command[1] === \"english\" || command[1] === \"англійська\") {\n          onlanguagechange(\"en\");\n          result = \"English is set\";\n        } else {\n          result = \"При встановлені мови відбулася помилка\";\n        }\n      }\n      // Встановити тему\n      else if (command[0] === \"theme\" || command[0] === \"тема\") {\n        if (command.length === 1) {\n          result = t(\"terminal.themes\");\n        } else if (command[1] === \"azure-sky\" || command[1] === \"based\" || command[1] === \"dracula\" || command[1] === \"lemon-sorbet\" || command[1] === \"monokai\" || command[1] === \"niklang\" || command[1] === \"one-dark-pro\" || command[1] === \"pink-rabbit\" || command[1] === \"solarized-dark\" || command[1] === \"solarized-light\" || command[1] === \"standard-dark\" || command[1] === \"standard-light\" || command[1] === \"tomorrow\" || command[1] === \"udav\" || command[1] === \"vanilla-cream\") {\n          onThemeChange(command[1]);\n          result = \"Тему \" + command[1] + \" встановлено\";\n        } else {\n          result = \"При встановлені теми відбулася помилка\";\n        }\n      }\n      // Встановлення інтервалу автозбереження\n      else if (command[0] === \"autosave\" || command[0] === \"автозбереження\") {\n        result = \"Новий інтервал встановлено\";\n      }\n      // Закрити програму\n      else if (command[0] === \"exit\" || command[0] === \"вихід\") {\n        onExit();\n      }\n      // Очистити термінал\n      else if (command[0] === \"clear\" || command[0] === \"очистити\") {\n        setOutputValues(initialOutputValues);\n        setInputValue(initialInputValue);\n        return;\n      }\n      // Невідома команда\n      else {\n        result = t(\"terminal.error\");\n      }\n      setOutputValues([...outputValues, {\n        command: authenticCommand,\n        result: result\n      }]);\n      setInputValue(\"\");\n    }\n  };\n  const refBox = useRef(null);\n  const refTop = useRef(null);\n  useEffect(() => {\n    const resizableElement = refBox.current;\n    const style = window.getComputedStyle(resizableElement);\n    const height = parseInt(style.height, 10);\n    let yCord = 0;\n\n    // resizableElement.style.top = \"150px\";\n    // resizableElement.style.left = \"150px\";\n\n    // Top\n    const onMouseMoveResize = event => {\n      const dy = event.clientY - yCord;\n      height -= dy;\n      yCord = event.clientY;\n      resizableElement.style.height = height + \"px\";\n    };\n    const onMouseUpTopResize = event => {\n      document.removeEventListener(\"mousemove\", onMouseMoveResize);\n      document.removeEventListener(\"mouseup\", onMouseUpTopResize);\n    };\n    const onMouseDownTopResize = event => {\n      yCord = event.clientY;\n      document.addEventListener(\"mousemove\", onMouseMoveResize);\n      document.addEventListener(\"mouseup\", onMouseUpTopResize);\n    };\n    const resizerTop = refTop.current;\n    resizerTop.addEventListener(\"mousedown\", onMouseDownTopResize);\n    return () => {\n      resizerTop.removeEventListener(\"mousedown\", onMouseDownTopResize);\n    };\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className={`terminal-container ${visible ? \"visible\" : \"hidden\"}`}>\n    //   <div className=\"terminal-header\">\n    //     <h5>Terminal</h5>\n    //   </div>\n    //   <div className=\"terminal-content\">\n    //     <div className=\"output-wrapper\" ref={outputWrapperRef}>\n    //       {outputValues.map((output, index) => (\n    //         <div key={index} className=\"output\">\n    //           <div>{\"> \" + output.command}</div>\n    //           <pre dangerouslySetInnerHTML={{ __html: output.result }} />\n    //         </div>\n    //       ))}\n    //     </div>\n    //     <div className=\"input-wrapper\">\n    //       <span>₴ </span>\n    //       <input\n    //         type=\"text\"\n    //         placeholder=\"...\"\n    //         value={inputValue}\n    //         onChange={handleInputChange}\n    //         onKeyPress={handleKeyPress}\n    //       />\n    //     </div>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      ref: refBox,\n      className: `terminal-container resizable-box ${visible ? \"visible\" : \"hidden\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: refTop,\n        className: \"resizer rt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Terminal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output-wrapper\",\n          ref: outputWrapperRef,\n          children: outputValues.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"> \" + output.command\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              dangerouslySetInnerHTML: {\n                __html: output.result\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u20B4 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"...\",\n            value: inputValue,\n            onChange: handleInputChange,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Terminal, \"CMiZ5qkMFQLruW5GAsp40djdWpM=\", false, function () {\n  return [useTranslation];\n});\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useTranslation","readDir","desktopDir","relaunch","exists","event","jsxDEV","_jsxDEV","Terminal","visible","onNew","onOpen","onClose","onExit","onlanguagechange","onThemeChange","filePath","_s","inputValue","setInputValue","outputValues","setOutputValues","outputWrapperRef","initialInputValue","initialOutputValues","pathForTerminal","setPathForTerminal","t","i18n","lastSeparatorIndex","lastIndexOf","trimmedPath","substring","scrollToBottom","current","scrollTop","scrollHeight","handleInputChange","target","value","getDesktopDir","console","log","reload","handleKeyPress","key","authenticCommand","command","trim","split","result","newPath","length","startsWith","isDirectory","error","message","directoryContents","fileNames","map","entry","pathSegments","path","join","newFilePath","openFilePath","refBox","refTop","resizableElement","style","window","getComputedStyle","height","parseInt","yCord","onMouseMoveResize","dy","clientY","onMouseUpTopResize","document","removeEventListener","onMouseDownTopResize","addEventListener","resizerTop","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","output","index","dangerouslySetInnerHTML","__html","type","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/Components/Terminal_component/Terminal.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { readDir } from \"@tauri-apps/api/fs\";\nimport { desktopDir } from \"@tauri-apps/api/path\";\nimport { relaunch } from \"@tauri-apps/api/process\";\nimport { exists } from \"@tauri-apps/api/fs\";\nimport \"./Terminal.css\";\nimport { event } from \"jquery\";\n\nexport default function Terminal({\n  visible,\n  onNew,\n  onOpen,\n  onClose,\n  onExit,\n  onlanguagechange,\n  onThemeChange,\n  filePath,\n}) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValues, setOutputValues] = useState([]);\n  const outputWrapperRef = useRef(null);\n  const initialInputValue = \"\";\n  const initialOutputValues = [];\n  const [pathForTerminal, setPathForTerminal] = useState(\"\"); // Шлях який використовується тільки для терміналу\n\n  // Локалізація програми\n  const { t, i18n } = useTranslation(\"global\");\n\n  // Встановлення віртуального шляху для терміналу\n  useEffect(() => {\n    if (filePath != null) {\n      const lastSeparatorIndex = filePath.lastIndexOf(\"/\");\n      const trimmedPath = filePath.substring(0, lastSeparatorIndex);\n      setPathForTerminal(trimmedPath);\n    }\n  }, [filePath]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [outputValues]);\n\n  const scrollToBottom = () => {\n    if (outputWrapperRef.current) {\n      outputWrapperRef.current.scrollTop =\n        outputWrapperRef.current.scrollHeight;\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const getDesktopDir = async () => {\n    setPathForTerminal(await desktopDir());\n    console.log(\"Desktop path: \" + pathForTerminal);\n  };\n\n  const reload = async () => {\n    await relaunch();\n  };\n\n  useEffect(() => {\n    getDesktopDir();\n  }, []);\n\n  const handleKeyPress = async (event) => {\n    if (event.key === \"Enter\") {\n      const authenticCommand = inputValue;\n      const command = inputValue.trim().split(\" \");\n      let result;\n      // Команди терміналу\n      // Змінити директорію (змінити змінну, яка використовується тільки для терміналу)\n      // if (command[0] === \"cd\" || command[0] === \"зт\") {\n      //   const newPath = pathForTerminal + \"/\" + command[1];\n      //   setPathForTerminal(newPath);\n      // }\n      if (command[0] === \"cd\" || command[0] === \"зт\") {\n        let newPath = pathForTerminal; // Зберегти поточний шлях\n        if (command.length > 1) {\n          // Обробити абсолютний або відносний шлях\n          if (command[1].startsWith(\"/\")) {\n            newPath = command[1];\n          } else if (command[1] === \"..\") {\n            const lastSeparatorIndex = newPath.lastIndexOf(\"/\");\n            newPath = newPath.substring(0, lastSeparatorIndex);\n          } else {\n            newPath = pathForTerminal + \"/\" + command[1];\n          }\n          // Перевірка існування шляху\n          try {\n            const isDirectory = await exists(newPath);\n            if (!isDirectory) {\n              result = \"Тека \" + newPath + \" не існує\";\n              setOutputValues([\n                ...outputValues,\n                { command: authenticCommand, result: result },\n              ]);\n              setInputValue(\"\");\n              return;\n            } else {\n              result = \"Успішно перейдено до \" + newPath; // Додайте цей рядок для повідомлення про успішне виконання команди\n            }\n          } catch (error) {\n            result = \"Помилка перевірки шляху: \" + error.message;\n            setOutputValues([\n              ...outputValues,\n              { command: authenticCommand, result: result },\n            ]);\n            setInputValue(\"\");\n            return;\n          }\n        }\n        setPathForTerminal(newPath); // Встановити новий шлях\n        setOutputValues([\n          ...outputValues,\n          { command: authenticCommand, result: result },\n        ]); // Додайте цей рядок для додавання результату до outputValues\n        setInputValue(\"\");\n      }\n\n      // Показати вміст директорії (перевірити вміст директорії за віртуальним шляхом)\n      else if (command[0] === \"ls\" || command[0] === \"лф\") {\n        try {\n          // Читаємо вміст теки, використовуючи віртуальний шлях\n          const directoryContents = await readDir(pathForTerminal);\n\n          // Очищаємо шляхи файлів від базового шляху\n          const fileNames = directoryContents.map((entry) => {\n            const pathSegments = entry.path.split(\"/\");\n            return pathSegments[pathSegments.length - 1]; // Останній елемент шляху\n          });\n\n          // Записуємо шляхи файлів у змінну result як рядок\n          result = fileNames.join(\"\\n\");\n        } catch (error) {\n          // Обробляємо помилки, якщо вони виникли під час читання директорії\n          result = error.message;\n        }\n      }\n      // Показати в якій директорії знаходиться користувач (знову ж таки віртуально)\n      else if (command[0] === \"pwd\" || command[0] === \"цт\") {\n        result = pathForTerminal;\n      }\n      // Перезапуск програми\n      else if (command[0] === \"reload\") {\n        reload();\n      }\n      // Новий файл\n      else if (command[0] === \"new\" || command[0] === \"новий\") {\n        if (command.length === 1) {\n          result = \"Використання: new <назва нового файлу>\";\n        } else if (command.length > 2) {\n          result = \"Використання: new <назва нового файлу>\";\n        } else {\n          const newFilePath = pathForTerminal + command[1];\n          onNew(newFilePath);\n        }\n      }\n      // Відкриття файлу\n      else if (command[0] === \"open\" || command[0] === \"відкрити\") {\n        if (command.length === 1) {\n          result = \"Використання: open <назва нового файлу>\";\n        } else if (command.length > 2) {\n          result = \"Використання: open <назва нового файлу>\";\n        } else {\n          const openFilePath = pathForTerminal + command[1];\n          onOpen(openFilePath);\n        }\n      }\n      // Закрити термінал\n      else if (command[0] === \"close\" || command[0] === \"закрити\") {\n        onClose();\n      }\n      // Допомога\n      else if (command[0] === \"help\" || command[0] === \"допомога\") {\n        result = t(\"terminal.help\");\n      }\n      // Змінити мову\n      else if (command[0] === \"language\" || command[0] === \"мова\") {\n        if (command.length === 1) {\n          result = t(\"terminal.language\");\n        } else if (command[1] === \"українська\" || command[1] === \"ukrainian\") {\n          onlanguagechange(\"ua\");\n          result = \"Українську мову встановлено\";\n        } else if (command[1] === \"english\" || command[1] === \"англійська\") {\n          onlanguagechange(\"en\");\n          result = \"English is set\";\n        } else {\n          result = \"При встановлені мови відбулася помилка\";\n        }\n      }\n      // Встановити тему\n      else if (command[0] === \"theme\" || command[0] === \"тема\") {\n        if (command.length === 1) {\n          result = t(\"terminal.themes\");\n        } else if (\n          command[1] === \"azure-sky\" ||\n          command[1] === \"based\" ||\n          command[1] === \"dracula\" ||\n          command[1] === \"lemon-sorbet\" ||\n          command[1] === \"monokai\" ||\n          command[1] === \"niklang\" ||\n          command[1] === \"one-dark-pro\" ||\n          command[1] === \"pink-rabbit\" ||\n          command[1] === \"solarized-dark\" ||\n          command[1] === \"solarized-light\" ||\n          command[1] === \"standard-dark\" ||\n          command[1] === \"standard-light\" ||\n          command[1] === \"tomorrow\" ||\n          command[1] === \"udav\" ||\n          command[1] === \"vanilla-cream\"\n        ) {\n          onThemeChange(command[1]);\n          result = \"Тему \" + command[1] + \" встановлено\";\n        } else {\n          result = \"При встановлені теми відбулася помилка\";\n        }\n      }\n      // Встановлення інтервалу автозбереження\n      else if (command[0] === \"autosave\" || command[0] === \"автозбереження\") {\n        result = \"Новий інтервал встановлено\";\n      }\n      // Закрити програму\n      else if (command[0] === \"exit\" || command[0] === \"вихід\") {\n        onExit();\n      }\n      // Очистити термінал\n      else if (command[0] === \"clear\" || command[0] === \"очистити\") {\n        setOutputValues(initialOutputValues);\n        setInputValue(initialInputValue);\n        return;\n      }\n      // Невідома команда\n      else {\n        result = t(\"terminal.error\");\n      }\n      setOutputValues([\n        ...outputValues,\n        { command: authenticCommand, result: result },\n      ]);\n      setInputValue(\"\");\n    }\n  };\n\n  const refBox = useRef(null);\n  const refTop = useRef(null);\n\n  useEffect(() => {\n    const resizableElement = refBox.current;\n    const style = window.getComputedStyle(resizableElement);\n    const height = parseInt(style.height, 10);\n\n    let yCord = 0;\n\n    // resizableElement.style.top = \"150px\";\n    // resizableElement.style.left = \"150px\";\n\n    // Top\n    const onMouseMoveResize = (event) => {\n      const dy = event.clientY - yCord;\n      height -= dy;\n      yCord = event.clientY;\n      resizableElement.style.height = height + \"px\";\n    };\n\n    const onMouseUpTopResize = (event) => {\n      document.removeEventListener(\"mousemove\", onMouseMoveResize);\n      document.removeEventListener(\"mouseup\", onMouseUpTopResize);\n    };\n\n    const onMouseDownTopResize = (event) => {\n      yCord = event.clientY;\n      document.addEventListener(\"mousemove\", onMouseMoveResize);\n      document.addEventListener(\"mouseup\", onMouseUpTopResize);\n    };\n\n    const resizerTop = refTop.current;\n    resizerTop.addEventListener(\"mousedown\", onMouseDownTopResize);\n\n    return () => {\n      resizerTop.removeEventListener(\"mousedown\", onMouseDownTopResize);\n    };\n  }, []);\n\n  return (\n    // <div className={`terminal-container ${visible ? \"visible\" : \"hidden\"}`}>\n    //   <div className=\"terminal-header\">\n    //     <h5>Terminal</h5>\n    //   </div>\n    //   <div className=\"terminal-content\">\n    //     <div className=\"output-wrapper\" ref={outputWrapperRef}>\n    //       {outputValues.map((output, index) => (\n    //         <div key={index} className=\"output\">\n    //           <div>{\"> \" + output.command}</div>\n    //           <pre dangerouslySetInnerHTML={{ __html: output.result }} />\n    //         </div>\n    //       ))}\n    //     </div>\n    //     <div className=\"input-wrapper\">\n    //       <span>₴ </span>\n    //       <input\n    //         type=\"text\"\n    //         placeholder=\"...\"\n    //         value={inputValue}\n    //         onChange={handleInputChange}\n    //         onKeyPress={handleKeyPress}\n    //       />\n    //     </div>\n    //   </div>\n    // </div>\n    <div\n      ref={refBox}\n      className={`terminal-container resizable-box ${\n        visible ? \"visible\" : \"hidden\"\n      }`}\n    >\n      <div ref={refTop} className=\"resizer rt\"></div>\n      <div className=\"terminal-header\">\n        <h5>Terminal</h5>\n      </div>\n      <div className=\"terminal-content\">\n        <div className=\"output-wrapper\" ref={outputWrapperRef}>\n          {outputValues.map((output, index) => (\n            <div key={index} className=\"output\">\n              <div>{\"> \" + output.command}</div>\n              <pre dangerouslySetInnerHTML={{ __html: output.result }} />\n            </div>\n          ))}\n        </div>\n        <div className=\"input-wrapper\">\n          <span>₴ </span>\n          <input\n            type=\"text\"\n            placeholder=\"...\"\n            value={inputValue}\n            onChange={handleInputChange}\n            onKeyPress={handleKeyPress}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}