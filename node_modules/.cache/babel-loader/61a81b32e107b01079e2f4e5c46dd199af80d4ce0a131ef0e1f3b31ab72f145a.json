{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/Components/Code_Editor_Component/Code_Editor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Code_Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeEditor({\n  programming_language\n}) {\n  _s();\n  const [text, setText] = useState('');\n  const [history, setHistory] = useState([]);\n  const [currentStep, setCurrentStep] = useState(-1);\n  const textareaRef = useRef(null);\n  const moveCursor = () => {\n    const textarea = textareaRef.current;\n    const currentPosition = textarea.selectionStart;\n    textarea.setSelectionRange(currentPosition - 1, currentPosition - 1);\n    textarea.focus();\n  };\n  const undo = () => {\n    if (currentStep > 0) {\n      setText(history[currentStep - 1]);\n      setCurrentStep(currentStep - 1);\n    }\n  };\n  const redo = () => {\n    if (currentStep < history.length - 1) {\n      setText(history[currentStep + 1]);\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  // Додавання табуляції\n  const tabulation = () => {\n    const textarea = textareaRef.current;\n    const {\n      selectionStart,\n      selectionEnd,\n      value\n    } = textarea;\n    const start = value.substring(0, selectionStart);\n    const end = value.substring(selectionEnd);\n    const tabbedText = start + '\\t' + end;\n    setText(tabbedText);\n    const currentPosition = textarea.selectionStart;\n    textarea.value = tabbedText;\n    textarea.setSelectionRange(currentPosition + 1, currentPosition + 1);\n    textarea.focus();\n  };\n\n  // Створення коментаря\n  const moveToLineStart = () => {\n    const textarea = document.getElementById('textarea');\n    const currentPosition = textarea.selectionStart;\n    const textBeforeCursor = textarea.value.substring(0, currentPosition);\n    const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n    const newPosition = lastNewLineIndex === -1 ? 0 : lastNewLineIndex + 1;\n    textarea.setSelectionRange(newPosition, newPosition);\n    textarea.focus();\n  };\n\n  // const tabulation = () => {\n  //     const textarea = textareaRef.current;\n  //     const { selectionStart, selectionEnd, value } = textarea;\n  //     const start = value.substring(0, selectionStart);\n  //     const end = value.substring(selectionEnd);\n  //     const tabbedText = start + '\\t' + end;\n  //     setText(tabbedText);\n  //     const currentPosition = textarea.selectionStart;\n  //     textarea.value = tabbedText;\n  //     textarea.setSelectionRange(currentPosition + 1, currentPosition + 1);\n  //     textarea.focus();\n  // };  \n\n  // const createOrRemoveComment = () => {\n  //     let commentSymbol = \"\"; \n\n  //     switch (programming_language) {\n  //         case \"NikLang\":\n  //             commentSymbol = \"// \"; \n  //             break;\n  //         case \"Udav\":\n  //         case \"Based\":\n  //             commentSymbol = \"# \";\n  //             break;\n  //         default:\n  //             commentSymbol = \"\";\n  //             break;\n  //     }\n\n  //     moveToLineStart();\n\n  //     const textarea = document.getElementById('textarea');\n  //     const currentPosition = textarea.selectionStart;\n  //     const textAfterCursor = textarea.value.substring(currentPosition); \n\n  //     if (textAfterCursor.trim().startsWith(commentSymbol.trim())) {\n  //         setText(textarea.value.substring(0, currentPosition) + textarea.value.substring(currentPosition + commentSymbol.length));\n  //         textarea.setSelectionRange(currentPosition, currentPosition); \n  //     } else {\n  //         const newText = textarea.value.substring(0, currentPosition) + commentSymbol + textarea.value.substring(currentPosition);\n  //         setText(newText);\n  //         textarea.setSelectionRange(currentPosition + commentSymbol.length, currentPosition + commentSymbol.length); \n  //     }\n\n  //     textarea.focus();\n  // };\n  const createOrRemoveComment = () => {\n    let commentSymbol = \"\";\n    switch (programming_language) {\n      case \"NikLang\":\n        commentSymbol = \"// \";\n        break;\n      case \"Udav\":\n      case \"Based\":\n        commentSymbol = \"# \";\n        break;\n      default:\n        commentSymbol = \"\";\n        break;\n    }\n    const textarea = document.getElementById('textarea');\n    const currentPosition = textarea.selectionStart;\n    const verticalPosition = textarea.scrollTop; // Зберігаємо вертикальну позицію курсора\n    const textBeforeCursor = textarea.value.substring(0, currentPosition);\n    const textAfterCursor = textarea.value.substring(currentPosition);\n    let newCursorPosition;\n    if (textAfterCursor.trim().startsWith(commentSymbol.trim())) {\n      // Якщо після курсора вже є коментар, видаляємо його\n      setText(textBeforeCursor + textAfterCursor.substring(commentSymbol.length));\n      newCursorPosition = currentPosition; // Курсор залишається на тому ж місці, де був\n    } else {\n      // Додаємо коментар\n      setText(textBeforeCursor + commentSymbol + textAfterCursor);\n      newCursorPosition = currentPosition + commentSymbol.length; // Переміщуємо курсор на місце після коментаря\n    }\n    textarea.setSelectionRange(newCursorPosition, newCursorPosition);\n    textarea.focus();\n    textarea.scrollTop = verticalPosition; // Відновлюємо вертикальну позицію курсора\n  };\n  useEffect(() => {\n    const handleUndoRedo = event => {\n      if (event.ctrlKey && event.key === 'z') {\n        event.preventDefault();\n        undo();\n      } else if (event.ctrlKey && event.key === 'y') {\n        event.preventDefault();\n        redo();\n      }\n    };\n    window.addEventListener('keydown', handleUndoRedo);\n    return () => {\n      window.removeEventListener('keydown', handleUndoRedo);\n    };\n  }, [undo, redo]);\n\n  // Натискання на Tab\n  useEffect(() => {\n    const handleTabulation = event => {\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        tabulation();\n      }\n    };\n    window.addEventListener('keydown', handleTabulation);\n    return () => {\n      window.removeEventListener('keydown', handleTabulation);\n    };\n  }, [tabulation]);\n  useEffect(() => {\n    const handleEnterPress = event => {\n      if (event.key === \"Enter\") {\n        const textarea = textareaRef.current;\n        const currentPosition = textarea.selectionStart;\n        const textBeforeCursor = textarea.value.substring(0, currentPosition);\n        const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n        const lastLine = textBeforeCursor.substring(lastNewLineIndex + 1);\n        if (lastLine.startsWith('\\t')) {\n          event.preventDefault();\n          const spaces = '\\t'.repeat(lastLine.match(/^\\t*/)[0].length); // рахуємо кількість табуляцій\n          const newText = textarea.value.substring(0, currentPosition) + '\\n' + spaces + textarea.value.substring(currentPosition);\n          setText(newText);\n          textarea.setSelectionRange(currentPosition + spaces.length + 1, currentPosition + spaces.length + 1); // переміщення курсору\n        }\n      }\n    };\n    window.addEventListener('keydown', handleEnterPress);\n    return () => {\n      window.removeEventListener('keydown', handleEnterPress);\n    };\n  }, [text]);\n\n  // Додавання коментарів\n  useEffect(() => {\n    const handleComment = event => {\n      if (event.ctrlKey && event.key === '/') {\n        event.preventDefault();\n        createOrRemoveComment();\n      }\n    };\n    window.addEventListener('keydown', handleComment);\n    return () => {\n      window.removeEventListener('keydown', handleComment);\n    };\n  }, [createOrRemoveComment]);\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    const lineNumbersEle = document.getElementById('line-numbers');\n    const displayLineNumbers = () => {\n      const lines = text.split('\\n');\n      lineNumbersEle.innerHTML = Array.from({\n        length: lines.length\n      }, (_, i) => `<div>${i + 1}</div>`).join('');\n    };\n    displayLineNumbers();\n    const handleInput = event => {\n      if (event.inputType === \"insertText\") {\n        const {\n          selectionStart,\n          value\n        } = event.target;\n        const closingChars = {\n          '(': ')',\n          '{': '}',\n          '[': ']',\n          '\"': '\"',\n          \"'\": \"'\"\n        };\n        if (event.data in closingChars) {\n          event.preventDefault();\n          const closingChar = closingChars[event.data];\n          setText(value.substring(0, selectionStart) + closingChar + value.substring(selectionStart));\n          textarea.selectionStart = selectionStart;\n          textarea.selectionEnd = selectionStart;\n          setTimeout(() => {\n            textarea.focus();\n            textarea.setSelectionRange(selectionStart, selectionStart);\n          }, 0);\n        } else if (event.data === closingChars[value[selectionStart]]) {\n          event.preventDefault();\n          textarea.selectionStart = selectionStart;\n          textarea.selectionEnd = selectionStart;\n          setTimeout(() => {\n            textarea.focus();\n            textarea.setSelectionRange(selectionStart, selectionStart);\n          }, 0);\n        }\n      }\n    };\n    textarea.addEventListener('input', handleInput);\n    return () => {\n      textarea.removeEventListener('input', handleInput);\n    };\n  }, [text]);\n  const handleChange = event => {\n    setText(event.target.value);\n    const newHistory = [...history.slice(0, currentStep + 1), event.target.value];\n    setHistory(newHistory);\n    setCurrentStep(newHistory.length - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"code-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"line-numbers\",\n      className: \"code-lines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      id: \"textarea\",\n      value: text,\n      onChange: handleChange,\n      className: \"code-editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 9\n  }, this);\n}\n_s(CodeEditor, \"ux0pt7/iY85rf1WXbRw6p9a3Qj0=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","jsxDEV","_jsxDEV","CodeEditor","programming_language","_s","text","setText","history","setHistory","currentStep","setCurrentStep","textareaRef","moveCursor","textarea","current","currentPosition","selectionStart","setSelectionRange","focus","undo","redo","length","tabulation","selectionEnd","value","start","substring","end","tabbedText","moveToLineStart","document","getElementById","textBeforeCursor","lastNewLineIndex","lastIndexOf","newPosition","createOrRemoveComment","commentSymbol","verticalPosition","scrollTop","textAfterCursor","newCursorPosition","trim","startsWith","handleUndoRedo","event","ctrlKey","key","preventDefault","window","addEventListener","removeEventListener","handleTabulation","handleEnterPress","lastLine","spaces","repeat","match","newText","handleComment","lineNumbersEle","displayLineNumbers","lines","split","innerHTML","Array","from","_","i","join","handleInput","inputType","target","closingChars","data","closingChar","setTimeout","handleChange","newHistory","slice","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/Components/Code_Editor_Component/Code_Editor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Code_Editor.css';\n\nexport default function CodeEditor({ programming_language }) {\n    const [text, setText] = useState('');\n    const [history, setHistory] = useState([]);\n    const [currentStep, setCurrentStep] = useState(-1);\n    const textareaRef = useRef(null);\n\n    const moveCursor = () => {\n        const textarea = textareaRef.current;\n        const currentPosition = textarea.selectionStart;\n        textarea.setSelectionRange(currentPosition - 1, currentPosition - 1);\n        textarea.focus();\n    };\n\n    const undo = () => {\n        if (currentStep > 0) {\n            setText(history[currentStep - 1]);\n            setCurrentStep(currentStep - 1);\n        }\n    };\n\n    const redo = () => {\n        if (currentStep < history.length - 1) {\n            setText(history[currentStep + 1]);\n            setCurrentStep(currentStep + 1);\n        }\n    };\n\n    // Додавання табуляції\n    const tabulation = () => {\n        const textarea = textareaRef.current;\n        const { selectionStart, selectionEnd, value } = textarea;\n        const start = value.substring(0, selectionStart);\n        const end = value.substring(selectionEnd);\n        const tabbedText = start + '\\t' + end;\n        setText(tabbedText);\n        const currentPosition = textarea.selectionStart;\n        textarea.value = tabbedText;\n        textarea.setSelectionRange(currentPosition + 1, currentPosition + 1);\n        textarea.focus();\n    };        \n\n    // Створення коментаря\n    const moveToLineStart = () => {\n        const textarea = document.getElementById('textarea');\n        const currentPosition = textarea.selectionStart;\n        const textBeforeCursor = textarea.value.substring(0, currentPosition);\n        const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n        const newPosition = lastNewLineIndex === -1 ? 0 : lastNewLineIndex + 1;\n        textarea.setSelectionRange(newPosition, newPosition);\n        textarea.focus();\n    };\n    \n    // const tabulation = () => {\n    //     const textarea = textareaRef.current;\n    //     const { selectionStart, selectionEnd, value } = textarea;\n    //     const start = value.substring(0, selectionStart);\n    //     const end = value.substring(selectionEnd);\n    //     const tabbedText = start + '\\t' + end;\n    //     setText(tabbedText);\n    //     const currentPosition = textarea.selectionStart;\n    //     textarea.value = tabbedText;\n    //     textarea.setSelectionRange(currentPosition + 1, currentPosition + 1);\n    //     textarea.focus();\n    // };  \n\n    // const createOrRemoveComment = () => {\n    //     let commentSymbol = \"\"; \n    \n    //     switch (programming_language) {\n    //         case \"NikLang\":\n    //             commentSymbol = \"// \"; \n    //             break;\n    //         case \"Udav\":\n    //         case \"Based\":\n    //             commentSymbol = \"# \";\n    //             break;\n    //         default:\n    //             commentSymbol = \"\";\n    //             break;\n    //     }\n    \n    //     moveToLineStart();\n    \n    //     const textarea = document.getElementById('textarea');\n    //     const currentPosition = textarea.selectionStart;\n    //     const textAfterCursor = textarea.value.substring(currentPosition); \n            \n    //     if (textAfterCursor.trim().startsWith(commentSymbol.trim())) {\n    //         setText(textarea.value.substring(0, currentPosition) + textarea.value.substring(currentPosition + commentSymbol.length));\n    //         textarea.setSelectionRange(currentPosition, currentPosition); \n    //     } else {\n    //         const newText = textarea.value.substring(0, currentPosition) + commentSymbol + textarea.value.substring(currentPosition);\n    //         setText(newText);\n    //         textarea.setSelectionRange(currentPosition + commentSymbol.length, currentPosition + commentSymbol.length); \n    //     }\n        \n    //     textarea.focus();\n    // };\n    const createOrRemoveComment = () => {\n        let commentSymbol = \"\"; \n    \n        switch (programming_language) {\n            case \"NikLang\":\n                commentSymbol = \"// \"; \n                break;\n            case \"Udav\":\n            case \"Based\":\n                commentSymbol = \"# \";\n                break;\n            default:\n                commentSymbol = \"\";\n                break;\n        }\n    \n        const textarea = document.getElementById('textarea');\n        const currentPosition = textarea.selectionStart;\n        const verticalPosition = textarea.scrollTop; // Зберігаємо вертикальну позицію курсора\n        const textBeforeCursor = textarea.value.substring(0, currentPosition);\n        const textAfterCursor = textarea.value.substring(currentPosition); \n    \n        let newCursorPosition;\n    \n        if (textAfterCursor.trim().startsWith(commentSymbol.trim())) {\n            // Якщо після курсора вже є коментар, видаляємо його\n            setText(textBeforeCursor + textAfterCursor.substring(commentSymbol.length));\n            newCursorPosition = currentPosition; // Курсор залишається на тому ж місці, де був\n        } else {\n            // Додаємо коментар\n            setText(textBeforeCursor + commentSymbol + textAfterCursor);\n            newCursorPosition = currentPosition + commentSymbol.length; // Переміщуємо курсор на місце після коментаря\n        }\n    \n        textarea.setSelectionRange(newCursorPosition, newCursorPosition);\n        textarea.focus();\n        textarea.scrollTop = verticalPosition; // Відновлюємо вертикальну позицію курсора\n    };\n     \n\n    useEffect(() => {\n        const handleUndoRedo = (event) => {\n            if (event.ctrlKey && event.key === 'z') {\n                event.preventDefault();\n                undo();\n            } else if (event.ctrlKey && event.key === 'y') {\n                event.preventDefault();\n                redo();\n            }\n        };\n\n        window.addEventListener('keydown', handleUndoRedo);\n\n        return () => {\n            window.removeEventListener('keydown', handleUndoRedo);\n        };\n    }, [undo, redo]);\n\n    // Натискання на Tab\n    useEffect(() => {\n        const handleTabulation = (event) => {\n            if (event.key === 'Tab') {\n                event.preventDefault();\n                tabulation();\n            }\n        };\n\n        window.addEventListener('keydown', handleTabulation);\n\n        return () => {\n            window.removeEventListener('keydown', handleTabulation);\n        };\n    }, [tabulation]);\n\n    useEffect(() => {\n        const handleEnterPress = (event) => {\n            if (event.key === \"Enter\") {\n                const textarea = textareaRef.current;\n                const currentPosition = textarea.selectionStart;\n                const textBeforeCursor = textarea.value.substring(0, currentPosition);\n                const lastNewLineIndex = textBeforeCursor.lastIndexOf('\\n');\n                const lastLine = textBeforeCursor.substring(lastNewLineIndex + 1);\n    \n                if (lastLine.startsWith('\\t')) {\n                    event.preventDefault();\n                    const spaces = '\\t'.repeat(lastLine.match(/^\\t*/)[0].length); // рахуємо кількість табуляцій\n                    const newText = textarea.value.substring(0, currentPosition) + '\\n' + spaces + textarea.value.substring(currentPosition);\n                    setText(newText);\n                    textarea.setSelectionRange(currentPosition + spaces.length + 1, currentPosition + spaces.length + 1); // переміщення курсору\n                }\n            }\n        };\n    \n        window.addEventListener('keydown', handleEnterPress);\n    \n        return () => {\n            window.removeEventListener('keydown', handleEnterPress);\n        };\n    }, [text]);    \n\n    // Додавання коментарів\n    useEffect(() => {\n        const handleComment = (event) => {\n            if (event.ctrlKey && event.key === '/') {\n                event.preventDefault();\n                createOrRemoveComment();\n            }\n        };\n\n        window.addEventListener('keydown', handleComment);\n\n        return () => {\n            window.removeEventListener('keydown', handleComment);\n        };\n    }, [createOrRemoveComment]);\n\n    useEffect(() => {\n        const textarea = textareaRef.current;\n        const lineNumbersEle = document.getElementById('line-numbers');\n\n        const displayLineNumbers = () => {\n            const lines = text.split('\\n');\n            lineNumbersEle.innerHTML = Array.from({\n                length: lines.length,\n            }, (_, i) => `<div>${i + 1}</div>`).join('');\n        };\n\n        displayLineNumbers();\n\n        const handleInput = (event) => {\n            if (event.inputType === \"insertText\") {\n                const { selectionStart, value } = event.target;\n                const closingChars = {\n                    '(': ')',\n                    '{': '}',\n                    '[': ']',\n                    '\"': '\"',\n                    \"'\": \"'\"\n                };\n        \n                if (event.data in closingChars) {\n                    event.preventDefault();\n                    const closingChar = closingChars[event.data];\n                    setText(value.substring(0, selectionStart) + closingChar + value.substring(selectionStart));\n                    textarea.selectionStart = selectionStart;\n                    textarea.selectionEnd = selectionStart;\n                    setTimeout(() => {\n                        textarea.focus();\n                        textarea.setSelectionRange(selectionStart, selectionStart);\n                    }, 0);\n                } else if (event.data === closingChars[value[selectionStart]]) {\n                    event.preventDefault();\n                    textarea.selectionStart = selectionStart;\n                    textarea.selectionEnd = selectionStart;\n                    setTimeout(() => {\n                        textarea.focus();\n                        textarea.setSelectionRange(selectionStart, selectionStart);\n                    }, 0);\n                }\n            }\n        };                \n\n        textarea.addEventListener('input', handleInput);\n\n        return () => {\n            textarea.removeEventListener('input', handleInput);\n        };\n    }, [text]);\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n        const newHistory = [...history.slice(0, currentStep + 1), event.target.value];\n        setHistory(newHistory);\n        setCurrentStep(newHistory.length - 1);\n    };\n\n    return (\n        <Container className='code-editor-container'>\n            <div id=\"line-numbers\" className=\"code-lines\"></div>\n            <textarea \n                ref={textareaRef}\n                id=\"textarea\" \n                value={text} \n                onChange={handleChange} \n                className='code-editor'>\n            </textarea>\n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}