{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/Rust/nub-ide/src/App.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { save } from '@tauri-apps/api/dialog';\n// // import { invoke } from '@tauri-apps/api/tauri';\n// // import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// // import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// // import Help from './Components/Help_Component/Help';\n// // import Terminal from './Components/Terminal_component/Terminal';\n// // import './App.css';\n\n// // function App() {\n// //     const [terminalVisible, setTerminalVisible] = useState(false);\n// //     const [helpVisible, setHelpVisible] = useState(false);\n\n// //     const toggleTerminal = () => {\n// //         setTerminalVisible(!terminalVisible);\n// //     };\n\n// //     const toggleHelp = () => {\n// //         setHelpVisible(!helpVisible);\n// //     };\n\n// //     const closeHelp = () => {\n// //         setHelpVisible(false);\n// //     };\n\n// //     const saveFileContents = async (fileContent) => {\n// //         try {\n// //             const savePath = await save();\n// //             if (!savePath) return;\n// //             await invoke(\"save_file\", { path: savePath, contents: fileContent });\n// //             console.log(\"File path:\", savePath);\n// //             console.log(\"File content:\", fileContent);\n// //         } catch (err) {\n// //             console.error(err);\n// //         }\n// //     };\n\n// //     return (\n// //         <div className=\"App\">\n// //             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n// //             <CodeEditor />\n// //             {terminalVisible && <Terminal />}\n// //             {helpVisible && <Help onClose={closeHelp} />}\n// //         </div>\n// //     );\n// // }\n\n// // export default App;\n\n// import React, { useState } from 'react';\n// import { save } from '@tauri-apps/api/dialog';\n// import { invoke } from '@tauri-apps/api/tauri';\n// import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// import Help from './Components/Help_Component/Help';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import './App.css';\n\n// function App() {\n//     const [terminalVisible, setTerminalVisible] = useState(false);\n//     const [helpVisible, setHelpVisible] = useState(false);\n\n//     const toggleTerminal = () => {\n//         setTerminalVisible(!terminalVisible);\n//     };\n\n//     const toggleHelp = () => {\n//         setHelpVisible(!helpVisible);\n//     };\n\n//     const closeHelp = () => {\n//         setHelpVisible(false);\n//     };\n\n//     const saveFileContents = async (fileContent) => {\n//         try {\n//             const savePath = await save();\n//             if (!savePath) return;\n//             await invoke(\"save_file\", { path: savePath, contents: fileContent }); // використовуйте fileContent, а не message\n//             console.log(\"File path:\", savePath);\n//             console.log(\"File content:\", fileContent);\n//         } catch (err) {\n//             console.error(err);\n//         }\n//     };    \n\n//     return (\n//         <div className=\"App\">\n//             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n//             <CodeEditor />\n//             {terminalVisible && <Terminal />}\n//             {helpVisible && <Help onClose={closeHelp} />}\n//         </div>\n//     );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save } from '@tauri-apps/api/dialog';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [filePath, setFilePath] = useState(null); // Стейт для зберігання шляху до файлу\n\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n  const toggleHelp = () => {\n    setHelpVisible(!helpVisible);\n  };\n  const closeHelp = () => {\n    setHelpVisible(false);\n  };\n  const saveFileContents = async fileContent => {\n    try {\n      let savePath = filePath; // Використовуємо шлях до файлу, якщо він вже збережений\n\n      // Якщо шлях до файлу не збережено, відкриваємо діалогове вікно для збереження файлу\n      if (!savePath) {\n        savePath = await save();\n        if (!savePath) return; // Користувач скасував операцію збереження\n        setFilePath(savePath); // Зберігаємо шлях до файлу\n      }\n      await invoke(\"save_file\", {\n        path: savePath,\n        contents: fileContent\n      });\n      console.log(\"File path:\", savePath);\n      console.log(\"File content:\", fileContent);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBarMenu, {\n      toggleTerminal: toggleTerminal,\n      toggleHelp: toggleHelp,\n      onSave: saveFileContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      onSave: saveFileContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), terminalVisible && /*#__PURE__*/_jsxDEV(Terminal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }, this), helpVisible && /*#__PURE__*/_jsxDEV(Help, {\n      onClose: closeHelp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"OPsTmstEPcxQcE0ETSXKk2wOrmw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","invoke","save","TopBarMenu","CodeEditor","Help","Terminal","jsxDEV","_jsxDEV","App","_s","terminalVisible","setTerminalVisible","helpVisible","setHelpVisible","filePath","setFilePath","toggleTerminal","toggleHelp","closeHelp","saveFileContents","fileContent","savePath","path","contents","console","log","err","error","className","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/Rust/nub-ide/src/App.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import { save } from '@tauri-apps/api/dialog';\n// // import { invoke } from '@tauri-apps/api/tauri';\n// // import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// // import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// // import Help from './Components/Help_Component/Help';\n// // import Terminal from './Components/Terminal_component/Terminal';\n// // import './App.css';\n\n// // function App() {\n// //     const [terminalVisible, setTerminalVisible] = useState(false);\n// //     const [helpVisible, setHelpVisible] = useState(false);\n\n// //     const toggleTerminal = () => {\n// //         setTerminalVisible(!terminalVisible);\n// //     };\n\n// //     const toggleHelp = () => {\n// //         setHelpVisible(!helpVisible);\n// //     };\n\n// //     const closeHelp = () => {\n// //         setHelpVisible(false);\n// //     };\n\n// //     const saveFileContents = async (fileContent) => {\n// //         try {\n// //             const savePath = await save();\n// //             if (!savePath) return;\n// //             await invoke(\"save_file\", { path: savePath, contents: fileContent });\n// //             console.log(\"File path:\", savePath);\n// //             console.log(\"File content:\", fileContent);\n// //         } catch (err) {\n// //             console.error(err);\n// //         }\n// //     };\n\n// //     return (\n// //         <div className=\"App\">\n// //             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n// //             <CodeEditor />\n// //             {terminalVisible && <Terminal />}\n// //             {helpVisible && <Help onClose={closeHelp} />}\n// //         </div>\n// //     );\n// // }\n\n// // export default App;\n\n\n// import React, { useState } from 'react';\n// import { save } from '@tauri-apps/api/dialog';\n// import { invoke } from '@tauri-apps/api/tauri';\n// import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// import Help from './Components/Help_Component/Help';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import './App.css';\n\n// function App() {\n//     const [terminalVisible, setTerminalVisible] = useState(false);\n//     const [helpVisible, setHelpVisible] = useState(false);\n\n//     const toggleTerminal = () => {\n//         setTerminalVisible(!terminalVisible);\n//     };\n\n//     const toggleHelp = () => {\n//         setHelpVisible(!helpVisible);\n//     };\n\n//     const closeHelp = () => {\n//         setHelpVisible(false);\n//     };\n\n//     const saveFileContents = async (fileContent) => {\n//         try {\n//             const savePath = await save();\n//             if (!savePath) return;\n//             await invoke(\"save_file\", { path: savePath, contents: fileContent }); // використовуйте fileContent, а не message\n//             console.log(\"File path:\", savePath);\n//             console.log(\"File content:\", fileContent);\n//         } catch (err) {\n//             console.error(err);\n//         }\n//     };    \n\n//     return (\n//         <div className=\"App\">\n//             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n//             <CodeEditor />\n//             {terminalVisible && <Terminal />}\n//             {helpVisible && <Help onClose={closeHelp} />}\n//         </div>\n//     );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save } from '@tauri-apps/api/dialog';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\n\nfunction App() {\n    const [terminalVisible, setTerminalVisible] = useState(false);\n    const [helpVisible, setHelpVisible] = useState(false);\n    const [filePath, setFilePath] = useState(null); // Стейт для зберігання шляху до файлу\n\n    const toggleTerminal = () => {\n        setTerminalVisible(!terminalVisible);\n    };\n\n    const toggleHelp = () => {\n        setHelpVisible(!helpVisible);\n    };\n\n    const closeHelp = () => {\n        setHelpVisible(false);\n    };\n\n    const saveFileContents = async (fileContent) => {\n        try {\n            let savePath = filePath; // Використовуємо шлях до файлу, якщо він вже збережений\n\n            // Якщо шлях до файлу не збережено, відкриваємо діалогове вікно для збереження файлу\n            if (!savePath) {\n                savePath = await save();\n                if (!savePath) return; // Користувач скасував операцію збереження\n                setFilePath(savePath); // Зберігаємо шлях до файлу\n            }\n            await invoke(\"save_file\", { path: savePath, contents: fileContent });\n            console.log(\"File path:\", savePath);\n            console.log(\"File content:\", fileContent);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} />\n            <CodeEditor onSave={saveFileContents} />\n            {terminalVisible && <Terminal />}\n            {helpVisible && <Help onClose={closeHelp} />}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}