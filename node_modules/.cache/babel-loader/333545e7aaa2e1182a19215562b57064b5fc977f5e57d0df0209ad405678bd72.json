{"ast":null,"code":"import { invokeTauriCommand } from './helpers/tauri.js';\n\n// Copyright 2019-2023 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * Get application metadata.\n *\n * This package is also accessible with `window.__TAURI__.app` when [`build.withGlobalTauri`](https://tauri.app/v1/api/config/#buildconfig.withglobaltauri) in `tauri.conf.json` is set to `true`.\n *\n * The APIs must be added to [`tauri.allowlist.app`](https://tauri.app/v1/api/config/#allowlistconfig.app) in `tauri.conf.json`:\n * ```json\n * {\n *   \"tauri\": {\n *     \"allowlist\": {\n *       \"app\": {\n *         \"all\": true, // enable all app APIs\n *         \"show\": true,\n *         \"hide\": true\n *       }\n *     }\n *   }\n * }\n * ```\n * It is recommended to allowlist only the APIs you use for optimal bundle size and security.\n *\n * @module\n */\n/**\n * Gets the application version.\n * @example\n * ```typescript\n * import { getVersion } from '@tauri-apps/api/app';\n * const appVersion = await getVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getVersion() {\n  return invokeTauriCommand({\n    __tauriModule: 'App',\n    message: {\n      cmd: 'getAppVersion'\n    }\n  });\n}\n/**\n * Gets the application name.\n * @example\n * ```typescript\n * import { getName } from '@tauri-apps/api/app';\n * const appName = await getName();\n * ```\n *\n * @since 1.0.0\n */\nasync function getName() {\n  return invokeTauriCommand({\n    __tauriModule: 'App',\n    message: {\n      cmd: 'getAppName'\n    }\n  });\n}\n/**\n * Gets the Tauri version.\n *\n * @example\n * ```typescript\n * import { getTauriVersion } from '@tauri-apps/api/app';\n * const tauriVersion = await getTauriVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getTauriVersion() {\n  return invokeTauriCommand({\n    __tauriModule: 'App',\n    message: {\n      cmd: 'getTauriVersion'\n    }\n  });\n}\n/**\n * Shows the application on macOS. This function does not automatically focus any specific app window.\n *\n * @example\n * ```typescript\n * import { show } from '@tauri-apps/api/app';\n * await show();\n * ```\n *\n * @since 1.2.0\n */\nasync function show() {\n  return invokeTauriCommand({\n    __tauriModule: 'App',\n    message: {\n      cmd: 'show'\n    }\n  });\n}\n/**\n * Hides the application on macOS.\n *\n * @example\n * ```typescript\n * import { hide } from '@tauri-apps/api/app';\n * await hide();\n * ```\n *\n * @since 1.2.0\n */\nasync function hide() {\n  return invokeTauriCommand({\n    __tauriModule: 'App',\n    message: {\n      cmd: 'hide'\n    }\n  });\n}\nexport { getName, getTauriVersion, getVersion, hide, show };","map":{"version":3,"names":["invokeTauriCommand","getVersion","__tauriModule","message","cmd","getName","getTauriVersion","show","hide"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/node_modules/@tauri-apps/api/app.js"],"sourcesContent":["import { invokeTauriCommand } from './helpers/tauri.js';\n\n// Copyright 2019-2023 Tauri Programme within The Commons Conservancy\n// SPDX-License-Identifier: Apache-2.0\n// SPDX-License-Identifier: MIT\n/**\n * Get application metadata.\n *\n * This package is also accessible with `window.__TAURI__.app` when [`build.withGlobalTauri`](https://tauri.app/v1/api/config/#buildconfig.withglobaltauri) in `tauri.conf.json` is set to `true`.\n *\n * The APIs must be added to [`tauri.allowlist.app`](https://tauri.app/v1/api/config/#allowlistconfig.app) in `tauri.conf.json`:\n * ```json\n * {\n *   \"tauri\": {\n *     \"allowlist\": {\n *       \"app\": {\n *         \"all\": true, // enable all app APIs\n *         \"show\": true,\n *         \"hide\": true\n *       }\n *     }\n *   }\n * }\n * ```\n * It is recommended to allowlist only the APIs you use for optimal bundle size and security.\n *\n * @module\n */\n/**\n * Gets the application version.\n * @example\n * ```typescript\n * import { getVersion } from '@tauri-apps/api/app';\n * const appVersion = await getVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getVersion() {\n    return invokeTauriCommand({\n        __tauriModule: 'App',\n        message: {\n            cmd: 'getAppVersion'\n        }\n    });\n}\n/**\n * Gets the application name.\n * @example\n * ```typescript\n * import { getName } from '@tauri-apps/api/app';\n * const appName = await getName();\n * ```\n *\n * @since 1.0.0\n */\nasync function getName() {\n    return invokeTauriCommand({\n        __tauriModule: 'App',\n        message: {\n            cmd: 'getAppName'\n        }\n    });\n}\n/**\n * Gets the Tauri version.\n *\n * @example\n * ```typescript\n * import { getTauriVersion } from '@tauri-apps/api/app';\n * const tauriVersion = await getTauriVersion();\n * ```\n *\n * @since 1.0.0\n */\nasync function getTauriVersion() {\n    return invokeTauriCommand({\n        __tauriModule: 'App',\n        message: {\n            cmd: 'getTauriVersion'\n        }\n    });\n}\n/**\n * Shows the application on macOS. This function does not automatically focus any specific app window.\n *\n * @example\n * ```typescript\n * import { show } from '@tauri-apps/api/app';\n * await show();\n * ```\n *\n * @since 1.2.0\n */\nasync function show() {\n    return invokeTauriCommand({\n        __tauriModule: 'App',\n        message: {\n            cmd: 'show'\n        }\n    });\n}\n/**\n * Hides the application on macOS.\n *\n * @example\n * ```typescript\n * import { hide } from '@tauri-apps/api/app';\n * await hide();\n * ```\n *\n * @since 1.2.0\n */\nasync function hide() {\n    return invokeTauriCommand({\n        __tauriModule: 'App',\n        message: {\n            cmd: 'hide'\n        }\n    });\n}\n\nexport { getName, getTauriVersion, getVersion, hide, show };\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,oBAAoB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,UAAUA,CAAA,EAAG;EACxB,OAAOD,kBAAkB,CAAC;IACtBE,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE;MACLC,GAAG,EAAE;IACT;EACJ,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,OAAOA,CAAA,EAAG;EACrB,OAAOL,kBAAkB,CAAC;IACtBE,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE;MACLC,GAAG,EAAE;IACT;EACJ,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeE,eAAeA,CAAA,EAAG;EAC7B,OAAON,kBAAkB,CAAC;IACtBE,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE;MACLC,GAAG,EAAE;IACT;EACJ,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeG,IAAIA,CAAA,EAAG;EAClB,OAAOP,kBAAkB,CAAC;IACtBE,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE;MACLC,GAAG,EAAE;IACT;EACJ,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeI,IAAIA,CAAA,EAAG;EAClB,OAAOR,kBAAkB,CAAC;IACtBE,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE;MACLC,GAAG,EAAE;IACT;EACJ,CAAC,CAAC;AACN;AAEA,SAASC,OAAO,EAAEC,eAAe,EAAEL,UAAU,EAAEO,IAAI,EAAED,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}