{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/Components/Code_Editor_Component/Code_Editor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Code_Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeEditor({\n  programming_language,\n  fileContent\n}) {\n  _s();\n  const [text, setText] = useState('');\n  const [history, setHistory] = useState([]);\n  const [currentStep, setCurrentStep] = useState(-1);\n  const editorRef = useRef(null);\n\n  // Ключові слова мов програмування\n  const NikLangKeyword = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n  const UdavKeywords = ['друк', 'ввід', 'якщо', 'інакше', 'інакшеЯкщо', 'правда', 'брехня', 'або', 'не', 'також', 'для', 'поки', 'функція', 'припинити', 'продовжити', 'повернути', 'пропуск', 'клас', 'як', 'від', 'отримати', 'заочно', 'жодний', 'крім', 'належить', 'підняти', 'остаточно', 'це', 'лямбда', 'спробувати', 'неЛокально', 'утверджувати', 'видалити', 'глобально', 'із', 'асинхронний', 'здобути', 'число', 'дріб', 'рядок', 'границях', 'своє'];\n  const BasedKeywords = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n\n  // Відміна дії\n  const undo = () => {\n    if (currentStep > 0) {\n      setText(history[currentStep - 1]);\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // На дію вперед\n  const redo = () => {\n    if (currentStep < history.length - 1) {\n      setText(history[currentStep + 1]);\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  // Додавання табуляції\n  const tabulation = () => {\n    const editor = editorRef.current;\n    const selection = window.getSelection();\n    const range = selection.getRangeAt(0);\n    const selectedText = range.toString();\n    const newText = `\\t${selectedText}`;\n    range.deleteContents();\n    range.insertNode(document.createTextNode(newText));\n    selection.collapseToEnd();\n  };\n\n  // Створення коментаря\n  const createOrRemoveComment = () => {\n    let commentSymbol = \"\";\n    switch (programming_language) {\n      case \"NikLang\":\n        commentSymbol = \"// \";\n        break;\n      case \"Udav\":\n      case \"Based\":\n        commentSymbol = \"# \";\n        break;\n      default:\n        commentSymbol = \"\";\n        break;\n    }\n    const editor = editorRef.current;\n    const selection = window.getSelection();\n    const range = selection.getRangeAt(0);\n    const selectedText = range.toString();\n    if (selectedText.trim().startsWith(commentSymbol.trim())) {\n      const uncommentedText = selectedText.replace(new RegExp(`^${commentSymbol.trim()}\\\\s*`, 'gm'), '');\n      range.deleteContents();\n      range.insertNode(document.createTextNode(uncommentedText));\n    } else {\n      const commentedText = `${commentSymbol}${selectedText}`;\n      range.deleteContents();\n      range.insertNode(document.createTextNode(commentedText));\n    }\n    selection.collapseToEnd();\n  };\n\n  // Натискання на Ctrl + z та Ctrl + y\n  useEffect(() => {\n    const handleUndoRedo = event => {\n      if (event.ctrlKey && event.key === 'z') {\n        event.preventDefault();\n        undo();\n      } else if (event.ctrlKey && event.key === 'y') {\n        event.preventDefault();\n        redo();\n      }\n    };\n    window.addEventListener('keydown', handleUndoRedo);\n    return () => {\n      window.removeEventListener('keydown', handleUndoRedo);\n    };\n  }, [undo, redo]);\n\n  // Натискання на Tab\n  useEffect(() => {\n    const handleTabulation = event => {\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        tabulation();\n      }\n    };\n    window.addEventListener('keydown', handleTabulation);\n    return () => {\n      window.removeEventListener('keydown', handleTabulation);\n    };\n  }, [tabulation]);\n\n  // Додавання коментарів\n  useEffect(() => {\n    const handleComment = event => {\n      if (event.ctrlKey && event.key === '/') {\n        event.preventDefault();\n        createOrRemoveComment();\n      }\n    };\n    window.addEventListener('keydown', handleComment);\n    return () => {\n      window.removeEventListener('keydown', handleComment);\n    };\n  }, [createOrRemoveComment]);\n\n  // Відкриття файлу\n  useEffect(() => {\n    if (fileContent) {\n      if (fileContent === \"new_file\") {\n        setText(\"\");\n      } else {\n        setText(fileContent);\n      }\n    }\n  }, [fileContent]);\n  useEffect(() => {\n    const editor = editorRef.current;\n    const lineNumbersEle = document.getElementById('line-numbers');\n    const displayLineNumbers = () => {\n      const lines = text.split('\\n');\n      lineNumbersEle.innerHTML = Array.from({\n        length: lines.length\n      }, (_, i) => `<div>${i + 1}</div>`).join('');\n    };\n    displayLineNumbers();\n    const handleInput = event => {\n      const editor = editorRef.current;\n      const selection = window.getSelection();\n      const range = selection.getRangeAt(0);\n      const closingChars = {\n        '(': ')',\n        '{': '}',\n        '[': ']',\n        '\"': '\"',\n        \"'\": \"'\"\n      };\n      const currentChar = range.startContainer.data[range.startOffset];\n      if (currentChar in closingChars) {\n        const closingChar = closingChars[currentChar];\n        const newText = `${currentChar}${closingChar}`;\n        const newNode = document.createTextNode(newText);\n        range.insertNode(newNode);\n        range.setStart(newNode, 1);\n        range.setEnd(newNode, 1);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      } else if (currentChar === closingChars[editor.textContent[range.startOffset - 1]]) {\n        range.setStart(range.startContainer, range.startOffset + 1);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    };\n    editor.addEventListener('input', handleInput);\n    return () => {\n      editor.removeEventListener('input', handleInput);\n    };\n  }, [text]);\n  const handleChange = event => {\n    setText(event.currentTarget.textContent);\n    const newHistory = [...history.slice(0, currentStep + 1), event.currentTarget.textContent];\n    setHistory(newHistory);\n    setCurrentStep(newHistory.length - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"code-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"line-numbers\",\n      className: \"code-lines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef,\n      contentEditable: true,\n      onInput: handleChange,\n      className: \"code-editor\",\n      dangerouslySetInnerHTML: {\n        __html: text\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n}\n_s(CodeEditor, \"pMYgsw8C+6HL7jDGFLiIt7nDQ9o=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","jsxDEV","_jsxDEV","CodeEditor","programming_language","fileContent","_s","text","setText","history","setHistory","currentStep","setCurrentStep","editorRef","NikLangKeyword","UdavKeywords","BasedKeywords","undo","redo","length","tabulation","editor","current","selection","window","getSelection","range","getRangeAt","selectedText","toString","newText","deleteContents","insertNode","document","createTextNode","collapseToEnd","createOrRemoveComment","commentSymbol","trim","startsWith","uncommentedText","replace","RegExp","commentedText","handleUndoRedo","event","ctrlKey","key","preventDefault","addEventListener","removeEventListener","handleTabulation","handleComment","lineNumbersEle","getElementById","displayLineNumbers","lines","split","innerHTML","Array","from","_","i","join","handleInput","closingChars","currentChar","startContainer","data","startOffset","closingChar","newNode","setStart","setEnd","removeAllRanges","addRange","textContent","handleChange","currentTarget","newHistory","slice","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","ref","contentEditable","onInput","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/Components/Code_Editor_Component/Code_Editor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Code_Editor.css';\n\nexport default function CodeEditor({ programming_language, fileContent }) {\n    const [text, setText] = useState('');\n    const [history, setHistory] = useState([]);\n    const [currentStep, setCurrentStep] = useState(-1);\n    const editorRef = useRef(null);\n\n    // Ключові слова мов програмування\n    const NikLangKeyword = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n    const UdavKeywords = ['друк', 'ввід', 'якщо', 'інакше', 'інакшеЯкщо', 'правда', 'брехня', 'або', 'не', 'також', 'для', 'поки', 'функція', 'припинити', 'продовжити', 'повернути', 'пропуск', 'клас', 'як', 'від', 'отримати', 'заочно', 'жодний', 'крім', 'належить', 'підняти', 'остаточно', 'це', 'лямбда', 'спробувати', 'неЛокально', 'утверджувати', 'видалити', 'глобально', 'із', 'асинхронний', 'здобути', 'число', 'дріб', 'рядок', 'границях', 'своє'];\n    const BasedKeywords = ['друк', 'ввід', 'ввід_числа', 'якщо', 'інакше', 'інакше_якщо', 'поки', 'для_кожного', 'повернути', 'функція', 'змінна', 'ціле', 'дійсне', 'рядок', 'логічне', 'символ', 'кінець'];\n\n    // Відміна дії\n    const undo = () => {\n        if (currentStep > 0) {\n            setText(history[currentStep - 1]);\n            setCurrentStep(currentStep - 1);\n        }\n    };\n\n    // На дію вперед\n    const redo = () => {\n        if (currentStep < history.length - 1) {\n            setText(history[currentStep + 1]);\n            setCurrentStep(currentStep + 1);\n        }\n    };\n\n    // Додавання табуляції\n    const tabulation = () => {\n        const editor = editorRef.current;\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        const selectedText = range.toString();\n        const newText = `\\t${selectedText}`;\n        range.deleteContents();\n        range.insertNode(document.createTextNode(newText));\n        selection.collapseToEnd();\n    };\n\n    // Створення коментаря\n    const createOrRemoveComment = () => {\n        let commentSymbol = \"\";\n\n        switch (programming_language) {\n            case \"NikLang\":\n                commentSymbol = \"// \";\n                break;\n            case \"Udav\":\n            case \"Based\":\n                commentSymbol = \"# \";\n                break;\n            default:\n                commentSymbol = \"\";\n                break;\n        }\n\n        const editor = editorRef.current;\n        const selection = window.getSelection();\n        const range = selection.getRangeAt(0);\n        const selectedText = range.toString();\n\n        if (selectedText.trim().startsWith(commentSymbol.trim())) {\n            const uncommentedText = selectedText.replace(new RegExp(`^${commentSymbol.trim()}\\\\s*`, 'gm'), '');\n            range.deleteContents();\n            range.insertNode(document.createTextNode(uncommentedText));\n        } else {\n            const commentedText = `${commentSymbol}${selectedText}`;\n            range.deleteContents();\n            range.insertNode(document.createTextNode(commentedText));\n        }\n\n        selection.collapseToEnd();\n    };\n\n    // Натискання на Ctrl + z та Ctrl + y\n    useEffect(() => {\n        const handleUndoRedo = (event) => {\n            if (event.ctrlKey && event.key === 'z') {\n                event.preventDefault();\n                undo();\n            } else if (event.ctrlKey && event.key === 'y') {\n                event.preventDefault();\n                redo();\n            }\n        };\n\n        window.addEventListener('keydown', handleUndoRedo);\n\n        return () => {\n            window.removeEventListener('keydown', handleUndoRedo);\n        };\n    }, [undo, redo]);\n\n    // Натискання на Tab\n    useEffect(() => {\n        const handleTabulation = (event) => {\n            if (event.key === 'Tab') {\n                event.preventDefault();\n                tabulation();\n            }\n        };\n\n        window.addEventListener('keydown', handleTabulation);\n\n        return () => {\n            window.removeEventListener('keydown', handleTabulation);\n        };\n    }, [tabulation]);\n\n    // Додавання коментарів\n    useEffect(() => {\n        const handleComment = (event) => {\n            if (event.ctrlKey && event.key === '/') {\n                event.preventDefault();\n                createOrRemoveComment();\n            }\n        };\n\n        window.addEventListener('keydown', handleComment);\n\n        return () => {\n            window.removeEventListener('keydown', handleComment);\n        };\n    }, [createOrRemoveComment]);\n\n    // Відкриття файлу\n    useEffect(() => {\n        if (fileContent) {\n            if (fileContent === \"new_file\") {\n                setText(\"\");\n            } else {\n                setText(fileContent);\n            }\n        }\n    }, [fileContent]);\n\n    useEffect(() => {\n        const editor = editorRef.current;\n        const lineNumbersEle = document.getElementById('line-numbers');\n\n        const displayLineNumbers = () => {\n            const lines = text.split('\\n');\n            lineNumbersEle.innerHTML = Array.from({\n                length: lines.length,\n            }, (_, i) => `<div>${i + 1}</div>`).join('');\n        };\n\n        displayLineNumbers();\n\n        const handleInput = (event) => {\n            const editor = editorRef.current;\n            const selection = window.getSelection();\n            const range = selection.getRangeAt(0);\n        \n            const closingChars = {\n                '(': ')',\n                '{': '}',\n                '[': ']',\n                '\"': '\"',\n                \"'\": \"'\"\n            };\n        \n            const currentChar = range.startContainer.data[range.startOffset];\n        \n            if (currentChar in closingChars) {\n                const closingChar = closingChars[currentChar];\n                const newText = `${currentChar}${closingChar}`;\n                const newNode = document.createTextNode(newText);\n                range.insertNode(newNode);\n                range.setStart(newNode, 1);\n                range.setEnd(newNode, 1);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            } else if (currentChar === closingChars[editor.textContent[range.startOffset - 1]]) {\n                range.setStart(range.startContainer, range.startOffset + 1);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        };\n\n        editor.addEventListener('input', handleInput);\n\n        return () => {\n            editor.removeEventListener('input', handleInput);\n        };\n    }, [text]);\n\n    const handleChange = (event) => {\n        setText(event.currentTarget.textContent);\n        const newHistory = [...history.slice(0, currentStep + 1), event.currentTarget.textContent];\n        setHistory(newHistory);\n        setCurrentStep(newHistory.length - 1);\n    };\n\n    return (\n        <Container className='code-editor-container'>\n            <div id=\"line-numbers\" className=\"code-lines\"></div>\n            <div\n                ref={editorRef}\n                contentEditable\n                onInput={handleChange}\n                className='code-editor'\n                dangerouslySetInnerHTML={{ __html: text }}\n            />\n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}