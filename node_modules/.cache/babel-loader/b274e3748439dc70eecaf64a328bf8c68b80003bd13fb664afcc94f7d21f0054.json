{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/Rust/nub-ide/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { invoke } from '@tauri-apps/api/tauri';\n// import { save, open } from '@tauri-apps/api/dialog';\n// import { readTextFile } from '@tauri-apps/api/fs';\n// import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// import Help from './Components/Help_Component/Help';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import './App.css';\n\n// function App() {\n//     const [terminalVisible, setTerminalVisible] = useState(false);\n//     const [helpVisible, setHelpVisible] = useState(false);\n//     const [filePath, setFilePath] = useState(null);\n\n//     // Функція для зміни стану відображення терміналу\n//     const toggleTerminal = () => {\n//         setTerminalVisible(!terminalVisible);\n//     };\n\n//     // Функція для зміни стану відображення довідки\n//     const toggleHelp = () => {\n//         setHelpVisible(!helpVisible);\n//     };\n\n//     // Прив'язка відкриття та закриття терміналу на Ctrl + `\n//     useEffect(() => {\n//         const handleKeyDown = (event) => {\n//             if (event.ctrlKey && event.key === '`') {\n//                 event.preventDefault();\n//                 toggleTerminal();\n//             }\n//         };\n//         window.addEventListener('keydown', handleKeyDown);\n//         return () => {\n//             window.removeEventListener('keydown', handleKeyDown);\n//         };\n//     }, [toggleTerminal]);    \n\n// // Функція для збереження вмісту файлу\n// const saveFileContents = async (fileContent, savePath = filePath) => {\n//     try {\n//         if (!savePath) {\n//             savePath = await save({\n//                 filters: [\n//                     { name: 'Niklang.nl', extensions: ['nl']},\n//                     { name: 'Based.based', extensions: ['based']},\n//                     { name: 'Udav.udav', extensions: ['udav']},\n//                     { name: 'Other', extensions: ['**']}\n//                 ]\n//             });\n//             if (!savePath) return;\n//             setFilePath(savePath);\n//         }\n//         await invoke(\"save_file\", { path: savePath, contents: fileContent });\n//     } catch (err) {\n//         console.error(err);\n//     }\n// };\n\n// // Функція відкриття файлу\n// const openFileContent = async () => {\n//     try\n//     {\n//         const selectedPath = await open({\n//             multiple: false,\n//             title: \"Open file\",\n//             filters: [\n//                 { name: 'Niklang.nl', extensions: ['nl']},\n//                 { name: 'Based.based', extensions: ['based']},\n//                 { name: 'Udav.udav', extensions: ['udav']},\n//                 { name: 'Other', extensions: ['**']}\n//             ]\n//         });\n//         if(!selectedPath) return;\n//         const fileContent = await readTextFile(selectedPath);\n//         const textarea = document.getElementById('textarea');\n//         textarea.value = fileContent;\n//         setFilePath(selectedPath);\n//         // Оновити lineNumber\n//     } catch(err)\n//     {\n//         console.error(err);\n//     }\n// }\n\n//     return (\n//         <div className=\"App\">\n//             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} onOpen={openFileContent} />\n//             <CodeEditor />\n//             {terminalVisible && <Terminal />}\n//             {helpVisible && <Help onClose={toggleHelp} />}\n//         </div>\n//     );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save, open } from '@tauri-apps/api/dialog';\nimport { readTextFile } from '@tauri-apps/api/fs';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [filePath, setFilePath] = useState(null);\n  const [programmingLanguage, setProgrammingLanguage] = useState(''); // Додавання стану для мови програмування\n\n  // Функція для визначення мови програмування за шляхом файлу\n  const getProgrammingLanguage = filePath => {\n    const extension = filePath.split('.').pop();\n    switch (extension) {\n      case 'nl':\n        return 'NikLang';\n      case 'udav':\n        return 'Udav';\n      case 'based':\n        return 'Based';\n      default:\n        return 'Other';\n    }\n  };\n\n  // Функція для зміни стану відображення терміналу\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n\n  // Функція для зміни стану відображення довідки\n  const toggleHelp = () => {\n    setHelpVisible(!helpVisible);\n  };\n\n  // Прив'язка відкриття та закриття терміналу на Ctrl + `\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.ctrlKey && event.key === '`') {\n        event.preventDefault();\n        toggleTerminal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleTerminal]);\n\n  // Функція для збереження вмісту файлу\n  const saveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        savePath = await save({\n          filters: [{\n            name: 'Niklang.nl',\n            extensions: ['nl']\n          }, {\n            name: 'Based.based',\n            extensions: ['based']\n          }, {\n            name: 'Udav.udav',\n            extensions: ['udav']\n          }, {\n            name: 'Other',\n            extensions: ['**']\n          }]\n        });\n        if (!savePath) return;\n        setFilePath(savePath);\n      }\n      await invoke(\"save_file\", {\n        path: savePath,\n        contents: fileContent\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція відкриття файлу\n  const openFileContent = async () => {\n    try {\n      const selectedPath = await open({\n        multiple: false,\n        title: \"Open file\",\n        filters: [{\n          name: 'Niklang.nl',\n          extensions: ['nl']\n        }, {\n          name: 'Based.based',\n          extensions: ['based']\n        }, {\n          name: 'Udav.udav',\n          extensions: ['udav']\n        }, {\n          name: 'Other',\n          extensions: ['**']\n        }]\n      });\n      if (!selectedPath) return;\n      const fileContent = await readTextFile(selectedPath);\n      const textarea = document.getElementById('textarea');\n      textarea.value = fileContent;\n      setFilePath(selectedPath);\n      const language = getProgrammingLanguage(selectedPath); // Визначення мови програмування\n      setProgrammingLanguage(language); // Встановлення мови програмування\n      // Оновити lineNumber\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBarMenu, {\n      toggleTerminal: toggleTerminal,\n      toggleHelp: toggleHelp,\n      onSave: saveFileContents,\n      onOpen: openFileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      programming_language: programmingLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), \" \", terminalVisible && /*#__PURE__*/_jsxDEV(Terminal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }, this), helpVisible && /*#__PURE__*/_jsxDEV(Help, {\n      onClose: toggleHelp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"LQrwasXq6SxvSl8wgqcAJMdpIBI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","invoke","save","open","readTextFile","TopBarMenu","CodeEditor","Help","Terminal","jsxDEV","_jsxDEV","App","_s","terminalVisible","setTerminalVisible","helpVisible","setHelpVisible","filePath","setFilePath","programmingLanguage","setProgrammingLanguage","getProgrammingLanguage","extension","split","pop","toggleTerminal","toggleHelp","handleKeyDown","event","ctrlKey","key","preventDefault","window","addEventListener","removeEventListener","saveFileContents","fileContent","savePath","filters","name","extensions","path","contents","err","console","error","openFileContent","selectedPath","multiple","title","textarea","document","getElementById","value","language","className","children","onSave","onOpen","fileName","_jsxFileName","lineNumber","columnNumber","programming_language","onClose","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/Rust/nub-ide/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { invoke } from '@tauri-apps/api/tauri';\n// import { save, open } from '@tauri-apps/api/dialog';\n// import { readTextFile } from '@tauri-apps/api/fs';\n// import TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\n// import CodeEditor from './Components/Code_Editor_Component/Code_Editor';\n// import Help from './Components/Help_Component/Help';\n// import Terminal from './Components/Terminal_component/Terminal';\n// import './App.css';\n\n// function App() {\n//     const [terminalVisible, setTerminalVisible] = useState(false);\n//     const [helpVisible, setHelpVisible] = useState(false);\n//     const [filePath, setFilePath] = useState(null);\n\n//     // Функція для зміни стану відображення терміналу\n//     const toggleTerminal = () => {\n//         setTerminalVisible(!terminalVisible);\n//     };\n\n//     // Функція для зміни стану відображення довідки\n//     const toggleHelp = () => {\n//         setHelpVisible(!helpVisible);\n//     };\n\n//     // Прив'язка відкриття та закриття терміналу на Ctrl + `\n//     useEffect(() => {\n//         const handleKeyDown = (event) => {\n//             if (event.ctrlKey && event.key === '`') {\n//                 event.preventDefault();\n//                 toggleTerminal();\n//             }\n//         };\n//         window.addEventListener('keydown', handleKeyDown);\n//         return () => {\n//             window.removeEventListener('keydown', handleKeyDown);\n//         };\n//     }, [toggleTerminal]);    \n\n    // // Функція для збереження вмісту файлу\n    // const saveFileContents = async (fileContent, savePath = filePath) => {\n    //     try {\n    //         if (!savePath) {\n    //             savePath = await save({\n    //                 filters: [\n    //                     { name: 'Niklang.nl', extensions: ['nl']},\n    //                     { name: 'Based.based', extensions: ['based']},\n    //                     { name: 'Udav.udav', extensions: ['udav']},\n    //                     { name: 'Other', extensions: ['**']}\n    //                 ]\n    //             });\n    //             if (!savePath) return;\n    //             setFilePath(savePath);\n    //         }\n    //         await invoke(\"save_file\", { path: savePath, contents: fileContent });\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // };\n\n    // // Функція відкриття файлу\n    // const openFileContent = async () => {\n    //     try\n    //     {\n    //         const selectedPath = await open({\n    //             multiple: false,\n    //             title: \"Open file\",\n    //             filters: [\n    //                 { name: 'Niklang.nl', extensions: ['nl']},\n    //                 { name: 'Based.based', extensions: ['based']},\n    //                 { name: 'Udav.udav', extensions: ['udav']},\n    //                 { name: 'Other', extensions: ['**']}\n    //             ]\n    //         });\n    //         if(!selectedPath) return;\n    //         const fileContent = await readTextFile(selectedPath);\n    //         const textarea = document.getElementById('textarea');\n    //         textarea.value = fileContent;\n    //         setFilePath(selectedPath);\n    //         // Оновити lineNumber\n    //     } catch(err)\n    //     {\n    //         console.error(err);\n    //     }\n    // }\n\n//     return (\n//         <div className=\"App\">\n//             <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} onOpen={openFileContent} />\n//             <CodeEditor />\n//             {terminalVisible && <Terminal />}\n//             {helpVisible && <Help onClose={toggleHelp} />}\n//         </div>\n//     );\n// }\n\n// export default App;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { invoke } from '@tauri-apps/api/tauri';\nimport { save, open } from '@tauri-apps/api/dialog';\nimport { readTextFile } from '@tauri-apps/api/fs';\nimport TopBarMenu from './Components/Top_Bar_Menu_Component/Top_Bar_Menu';\nimport CodeEditor from './Components/Code_Editor_Component/Code_Editor';\nimport Help from './Components/Help_Component/Help';\nimport Terminal from './Components/Terminal_component/Terminal';\nimport './App.css';\n\nfunction App() {\n    const [terminalVisible, setTerminalVisible] = useState(false);\n    const [helpVisible, setHelpVisible] = useState(false);\n    const [filePath, setFilePath] = useState(null);\n    const [programmingLanguage, setProgrammingLanguage] = useState(''); // Додавання стану для мови програмування\n\n    // Функція для визначення мови програмування за шляхом файлу\n    const getProgrammingLanguage = (filePath) => {\n        const extension = filePath.split('.').pop();\n        switch (extension) {\n            case 'nl':\n                return 'NikLang';\n            case 'udav':\n                return 'Udav';\n            case 'based':\n                return 'Based';\n            default:\n                return 'Other';\n        }\n    };\n\n    // Функція для зміни стану відображення терміналу\n    const toggleTerminal = () => {\n        setTerminalVisible(!terminalVisible);\n    };\n\n    // Функція для зміни стану відображення довідки\n    const toggleHelp = () => {\n        setHelpVisible(!helpVisible);\n    };\n\n    // Прив'язка відкриття та закриття терміналу на Ctrl + `\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.ctrlKey && event.key === '`') {\n                event.preventDefault();\n                toggleTerminal();\n            }\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [toggleTerminal]);\n\n    // Функція для збереження вмісту файлу\n    const saveFileContents = async (fileContent, savePath = filePath) => {\n        try {\n            if (!savePath) {\n                savePath = await save({\n                    filters: [\n                        { name: 'Niklang.nl', extensions: ['nl']},\n                        { name: 'Based.based', extensions: ['based']},\n                        { name: 'Udav.udav', extensions: ['udav']},\n                        { name: 'Other', extensions: ['**']}\n                    ]\n                });\n                if (!savePath) return;\n                setFilePath(savePath);\n            }\n            await invoke(\"save_file\", { path: savePath, contents: fileContent });\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    // Функція відкриття файлу\n    const openFileContent = async () => {\n        try\n        {\n            const selectedPath = await open({\n                multiple: false,\n                title: \"Open file\",\n                filters: [\n                    { name: 'Niklang.nl', extensions: ['nl']},\n                    { name: 'Based.based', extensions: ['based']},\n                    { name: 'Udav.udav', extensions: ['udav']},\n                    { name: 'Other', extensions: ['**']}\n                ]\n            });\n            if(!selectedPath) return;\n            const fileContent = await readTextFile(selectedPath);\n            const textarea = document.getElementById('textarea');\n            textarea.value = fileContent;\n            setFilePath(selectedPath);\n            const language = getProgrammingLanguage(selectedPath); // Визначення мови програмування\n            setProgrammingLanguage(language); // Встановлення мови програмування\n            // Оновити lineNumber\n        } catch(err)\n        {\n            console.error(err);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <TopBarMenu toggleTerminal={toggleTerminal} toggleHelp={toggleHelp} onSave={saveFileContents} onOpen={openFileContent} />\n            <CodeEditor programming_language={programmingLanguage} /> {/* Передача мови програмування */}\n            {terminalVisible && <Terminal />}\n            {helpVisible && <Help onClose={toggleHelp} />}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}