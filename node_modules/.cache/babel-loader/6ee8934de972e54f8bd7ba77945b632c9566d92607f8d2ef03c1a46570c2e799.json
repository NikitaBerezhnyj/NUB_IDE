{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/Rust/nub-ide/src/Components/Help_Component/Help.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Container, Row } from 'react-bootstrap';\n// import Dropdown from 'react-bootstrap/Dropdown';\n// import Form from 'react-bootstrap/Form';\n// import { useTranslation } from 'react-i18next';\n// import '../Standard-Component-style.css';\n// import './Help.css';\n\n// export default function Help({ onClose }) {\n//     const { t, i18n } = useTranslation(\"global\");\n//     const [selectedLanguage, setSelectedLanguage] = useState(''); // початкове значення мови\n\n//     useEffect(() => {\n//         const storedLang = localStorage.getItem('language');\n//         if (storedLang) {\n//             handleLanguageChange(storedLang);\n//         } else {\n//             // Встановлення української мови за замовчуванням\n//             handleLanguageChange('ua');\n//         }\n//     }, []);\n\n//     const handleLanguageChange = (lang) => {\n//         i18n.changeLanguage(lang);\n//         setSelectedLanguage(lang);\n//         localStorage.setItem('language', lang);\n//     };\n\n//     return (\n//         <Container className='help-container'>\n//             <Row className='help-close-button'>\n//                 <button onClick={onClose}><b>X</b></button>\n//             </Row>\n//             <Row className='help-content-container'>\n//                 <div className='help-content'>\n//                     <h1>NUB IDE</h1>\n//                     <p>Це середовище розробки створене спеціально для мов програмування NukLang, Удав та Based</p>\n//                     <p>Його основною ідеєю є робота через термінал, але не повна</p>\n//                     <p>Інтерпретатори мов та компілятори були встановлені автоматично</p>\n//                     <p>Оскільки мови не сильно працюють із сторонніми файлами, то робота у даному редакторі коду також здійснюється у межах одного файлу</p>\n//                     <hr></hr>\n//                     <p>Ide має такі команди для терміналу:</p>\n//                     <p>- cd [path]</p>\n//                     <p>- ls </p>\n//                     <p>- pwd</p>\n//                     <p>- open - відкриває файл</p>\n//                     <p>- save - зберігає файл</p>\n//                     <p>- save as - зберегти файл як</p>\n//                     <p>- translate - викликає меню з вибором мови інтерфейсу</p>\n//                     <p>- exit - закриває все IDE</p>\n//                     <hr></hr>\n//                     {/* Обрати мову */}\n//                     <Dropdown className='language-dropdown'>\n//                         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n//                             {t(\"help.select_language\")}\n//                         </Dropdown.Toggle>\n//                         <Dropdown.Menu className='language-dropdown-content'>\n//                             <Dropdown.Item onClick={() => handleLanguageChange(\"ua\")}>Ukrainian</Dropdown.Item>\n//                             <Dropdown.Item onClick={() => handleLanguageChange(\"en\")}>English</Dropdown.Item>\n//                         </Dropdown.Menu>\n//                     </Dropdown>\n//                     {/* Обрати тему */}\n//                     <Form.Select aria-label=\"Default select example\">\n//                         <option>Open this select menu</option>\n//                         <option value=\"1\">standard-dark</option>\n//                         <option value=\"2\">standard-light</option>\n//                     </Form.Select>\n//                     <button>Створити власну тему</button>\n//                 </div>\n//             </Row>\n//         </Container>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport '../Standard-Component-style.css';\nimport './Help.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Help({\n  onClose\n}) {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation(\"global\");\n  const [selectedLanguage, setSelectedLanguage] = useState(''); // початкове значення мови\n  const [selectedTheme, setSelectedTheme] = useState('standard-dark'); // початкова тема\n\n  useEffect(() => {\n    const storedLang = localStorage.getItem('language');\n    if (storedLang) {\n      handleLanguageChange(storedLang);\n    } else {\n      // Встановлення української мови за замовчуванням\n      handleLanguageChange('ua');\n    }\n  }, []);\n  const handleLanguageChange = lang => {\n    i18n.changeLanguage(lang);\n    setSelectedLanguage(lang);\n    localStorage.setItem('language', lang);\n  };\n  const handleThemeChange = event => {\n    setSelectedTheme(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"help-container\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"help-close-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"help-content-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"help-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"NUB IDE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          \"aria-label\": \"Default select example\",\n          onChange: handleThemeChange,\n          value: selectedTheme,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"standard-dark\",\n            children: \"Ukrainian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"standard-light\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          \"aria-label\": \"Default select example\",\n          onChange: handleThemeChange,\n          value: selectedTheme,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"standard-dark\",\n            children: \"standard-dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"standard-light\",\n            children: \"standard-light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u0432\\u043B\\u0430\\u0441\\u043D\\u0443 \\u0442\\u0435\\u043C\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Help, \"ODzYZz3DhAQbilxYOTwiTCk9dKg=\", false, function () {\n  return [useTranslation];\n});\n_c = Help;\nvar _c;\n$RefreshReg$(_c, \"Help\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Dropdown","Form","useTranslation","jsxDEV","_jsxDEV","Help","onClose","_s","t","i18n","selectedLanguage","setSelectedLanguage","selectedTheme","setSelectedTheme","storedLang","localStorage","getItem","handleLanguageChange","lang","changeLanguage","setItem","handleThemeChange","event","target","value","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Select","onChange","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/Rust/nub-ide/src/Components/Help_Component/Help.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Container, Row } from 'react-bootstrap';\n// import Dropdown from 'react-bootstrap/Dropdown';\n// import Form from 'react-bootstrap/Form';\n// import { useTranslation } from 'react-i18next';\n// import '../Standard-Component-style.css';\n// import './Help.css';\n\n// export default function Help({ onClose }) {\n//     const { t, i18n } = useTranslation(\"global\");\n//     const [selectedLanguage, setSelectedLanguage] = useState(''); // початкове значення мови\n\n//     useEffect(() => {\n//         const storedLang = localStorage.getItem('language');\n//         if (storedLang) {\n//             handleLanguageChange(storedLang);\n//         } else {\n//             // Встановлення української мови за замовчуванням\n//             handleLanguageChange('ua');\n//         }\n//     }, []);\n\n//     const handleLanguageChange = (lang) => {\n//         i18n.changeLanguage(lang);\n//         setSelectedLanguage(lang);\n//         localStorage.setItem('language', lang);\n//     };\n\n//     return (\n//         <Container className='help-container'>\n//             <Row className='help-close-button'>\n//                 <button onClick={onClose}><b>X</b></button>\n//             </Row>\n//             <Row className='help-content-container'>\n//                 <div className='help-content'>\n//                     <h1>NUB IDE</h1>\n//                     <p>Це середовище розробки створене спеціально для мов програмування NukLang, Удав та Based</p>\n//                     <p>Його основною ідеєю є робота через термінал, але не повна</p>\n//                     <p>Інтерпретатори мов та компілятори були встановлені автоматично</p>\n//                     <p>Оскільки мови не сильно працюють із сторонніми файлами, то робота у даному редакторі коду також здійснюється у межах одного файлу</p>\n//                     <hr></hr>\n//                     <p>Ide має такі команди для терміналу:</p>\n//                     <p>- cd [path]</p>\n//                     <p>- ls </p>\n//                     <p>- pwd</p>\n//                     <p>- open - відкриває файл</p>\n//                     <p>- save - зберігає файл</p>\n//                     <p>- save as - зберегти файл як</p>\n//                     <p>- translate - викликає меню з вибором мови інтерфейсу</p>\n//                     <p>- exit - закриває все IDE</p>\n//                     <hr></hr>\n//                     {/* Обрати мову */}\n//                     <Dropdown className='language-dropdown'>\n//                         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n//                             {t(\"help.select_language\")}\n//                         </Dropdown.Toggle>\n//                         <Dropdown.Menu className='language-dropdown-content'>\n//                             <Dropdown.Item onClick={() => handleLanguageChange(\"ua\")}>Ukrainian</Dropdown.Item>\n//                             <Dropdown.Item onClick={() => handleLanguageChange(\"en\")}>English</Dropdown.Item>\n//                         </Dropdown.Menu>\n//                     </Dropdown>\n//                     {/* Обрати тему */}\n//                     <Form.Select aria-label=\"Default select example\">\n//                         <option>Open this select menu</option>\n//                         <option value=\"1\">standard-dark</option>\n//                         <option value=\"2\">standard-light</option>\n//                     </Form.Select>\n//                     <button>Створити власну тему</button>\n//                 </div>\n//             </Row>\n//         </Container>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport { useTranslation } from 'react-i18next';\nimport '../Standard-Component-style.css';\nimport './Help.css';\n\nexport default function Help({ onClose }) {\n    const { t, i18n } = useTranslation(\"global\");\n    const [selectedLanguage, setSelectedLanguage] = useState(''); // початкове значення мови\n    const [selectedTheme, setSelectedTheme] = useState('standard-dark'); // початкова тема\n\n    useEffect(() => {\n        const storedLang = localStorage.getItem('language');\n        if (storedLang) {\n            handleLanguageChange(storedLang);\n        } else {\n            // Встановлення української мови за замовчуванням\n            handleLanguageChange('ua');\n        }\n    }, []);\n\n    const handleLanguageChange = (lang) => {\n        i18n.changeLanguage(lang);\n        setSelectedLanguage(lang);\n        localStorage.setItem('language', lang);\n    };\n\n    const handleThemeChange = (event) => {\n        setSelectedTheme(event.target.value);\n    };\n\n    return (\n        <Container className='help-container'>\n            <Row className='help-close-button'>\n                <button onClick={onClose}><b>X</b></button>\n            </Row>\n            <Row className='help-content-container'>\n                <div className='help-content'>\n                    <h1>NUB IDE</h1>\n                    {/* Ваш контент */}\n                    <hr></hr>\n                    {/* Обрати мову */}\n                    {/* <Dropdown className='language-dropdown'>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {t(\"help.select_language\")}\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu className='language-dropdown-content'>\n                            <Dropdown.Item onClick={() => handleLanguageChange(\"ua\")}>Ukrainian</Dropdown.Item>\n                            <Dropdown.Item onClick={() => handleLanguageChange(\"en\")}>English</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown> */}\n                    <Form.Select aria-label=\"Default select example\" onChange={handleThemeChange} value={selectedTheme}>\n                        <option value=\"standard-dark\">Ukrainian</option>\n                        <option value=\"standard-light\">English</option>\n                    </Form.Select>\n                    {/* Обрати тему */}\n                    <Form.Select aria-label=\"Default select example\" onChange={handleThemeChange} value={selectedTheme}>\n                        <option value=\"standard-dark\">standard-dark</option>\n                        <option value=\"standard-light\">standard-light</option>\n                    </Form.Select>\n                    <button>Створити власну тему</button>\n                </div>\n            </Row>\n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}