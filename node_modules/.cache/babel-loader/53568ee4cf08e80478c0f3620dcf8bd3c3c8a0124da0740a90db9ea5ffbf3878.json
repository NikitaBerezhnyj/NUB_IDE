{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/Components/Terminal_component/Terminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./Terminal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Terminal({\n  visible,\n  onClose,\n  onExit,\n  onlanguagechange,\n  filePath\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValues, setOutputValues] = useState([]);\n  const outputWrapperRef = useRef(null);\n  const initialInputValue = \"\";\n  const initialOutputValues = [];\n  const [pathForTerminal, setPathForTerminal] = useState(\"~/\"); // Шлях який використовується тільки для терміналу\n\n  // Локалізація програми\n  const {\n    t,\n    i18n\n  } = useTranslation(\"global\");\n\n  // Встановлення віртуального шляху для терміналу\n  useEffect(() => {\n    if (filePath != null) {\n      const lastSeparatorIndex = filePath.lastIndexOf(\"/\");\n      const trimmedPath = filePath.substring(0, lastSeparatorIndex);\n      setPathForTerminal(trimmedPath);\n    }\n  }, [filePath]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [outputValues]);\n  const scrollToBottom = () => {\n    if (outputWrapperRef.current) {\n      outputWrapperRef.current.scrollTop = outputWrapperRef.current.scrollHeight;\n    }\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      const command = inputValue.trim().split(\" \");\n      let result;\n      // Команди терміналу\n      // Змінити директорію (змінити змінну, яка використовується тільки для терміналу)\n      if (command[0] === \"cd\") {}\n      // Показати вміст директорії (перевірити вміст директорії за віртуальним шляхом)\n      else if (command[0] === \"ls\") {}\n      // Показати в якій директорії знаходиться користувач (знову ж таки віртуально)\n      else if (command[0] === \"pwd\") {\n        result = pathForTerminal;\n      }\n      // Новий файл\n      else if (command[0] === \"new\" || command[0] === \"новий\") {\n        result = \"Новий файл!\";\n      }\n      // Відкриття файлу\n      else if (command[0] === \"open\" || command[0] === \"відкрити\") {\n        result = \"Відкриття файлу!\";\n      }\n      // Закрити термінал\n      else if (command[0] === \"close\" || command[0] === \"закрити\") {\n        onClose();\n      }\n      // Допомога\n      else if (command[0] === \"help\" || command[0] === \"допомога\") {\n        result = t(\"terminal.help\");\n      }\n      // Змінити мову\n      else if (command[0] === \"language\" || command[0] === \"мова\") {\n        if (command.length === 1) {\n          result = t(\"terminal.language\");\n        } else if (command[1] === \"українська\" || command[1] === \"ukrainian\") {\n          onlanguagechange(\"ua\");\n          result = \"Українську мову встановлено\";\n        } else if (command[1] === \"english\" || command[1] === \"англійська\") {\n          onlanguagechange(\"en\");\n          result = \"English is set\";\n        } else {\n          result = \"При встановлені мови відбулася помилка\";\n        }\n      }\n      // Встановити тему\n      else if (command[0] === \"theme\" || command[0] === \"тема\") {\n        result = \"Тему змінено\";\n      }\n      // Встановлення інтервалу автозбереження\n      else if (command[0] === \"autosave\" || command[0] === \"автозбереження\") {\n        result = \"Новий інтервал встановлено\";\n      }\n      // Закрити програму\n      else if (command[0] === \"exit\" || command[0] === \"вихід\") {\n        onExit();\n      }\n      // Очистити термінал\n      else if (command[0] === \"clear\" || command[0] === \"очистити\") {\n        setOutputValues(initialOutputValues);\n        setInputValue(initialInputValue);\n        return;\n      }\n      // Невідома команда\n      else {\n        result = t(\"terminal.error\");\n      }\n      setOutputValues([...outputValues, {\n        command: command,\n        result: result\n      }]);\n      setInputValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `terminal-container ${visible ? \"visible\" : \"hidden\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Terminal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-wrapper\",\n        ref: outputWrapperRef,\n        children: outputValues.map((output, index) =>\n        /*#__PURE__*/\n        // <div key={index} className=\"output\">\n        //   <div>{\"> \" + output.command}</div>\n        //   {/* <div>{output.result}</div> */}\n        //   <pre>{output.result}</pre>\n        // </div>\n        _jsxDEV(\"div\", {\n          className: \"output\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"> \" + output.command\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            dangerouslySetInnerHTML: {\n              __html: output.result\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u20B4 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"...\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(Terminal, \"UXOTov8tdXlByeLF/Ey4YvMMOM0=\", false, function () {\n  return [useTranslation];\n});\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useTranslation","jsxDEV","_jsxDEV","Terminal","visible","onClose","onExit","onlanguagechange","filePath","_s","inputValue","setInputValue","outputValues","setOutputValues","outputWrapperRef","initialInputValue","initialOutputValues","pathForTerminal","setPathForTerminal","t","i18n","lastSeparatorIndex","lastIndexOf","trimmedPath","substring","scrollToBottom","current","scrollTop","scrollHeight","handleInputChange","event","target","value","handleKeyPress","key","command","trim","split","result","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","output","index","dangerouslySetInnerHTML","__html","type","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/Components/Terminal_component/Terminal.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./Terminal.css\";\n\nexport default function Terminal({\n  visible,\n  onClose,\n  onExit,\n  onlanguagechange,\n  filePath,\n}) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValues, setOutputValues] = useState([]);\n  const outputWrapperRef = useRef(null);\n  const initialInputValue = \"\";\n  const initialOutputValues = [];\n  const [pathForTerminal, setPathForTerminal] = useState(\"~/\"); // Шлях який використовується тільки для терміналу\n\n  // Локалізація програми\n  const { t, i18n } = useTranslation(\"global\");\n\n  // Встановлення віртуального шляху для терміналу\n  useEffect(() => {\n    if (filePath != null) {\n      const lastSeparatorIndex = filePath.lastIndexOf(\"/\");\n      const trimmedPath = filePath.substring(0, lastSeparatorIndex);\n      setPathForTerminal(trimmedPath);\n    }\n  }, [filePath]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [outputValues]);\n\n  const scrollToBottom = () => {\n    if (outputWrapperRef.current) {\n      outputWrapperRef.current.scrollTop =\n        outputWrapperRef.current.scrollHeight;\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      const command = inputValue.trim().split(\" \");\n      let result;\n      // Команди терміналу\n      // Змінити директорію (змінити змінну, яка використовується тільки для терміналу)\n      if (command[0] === \"cd\") {\n      }\n      // Показати вміст директорії (перевірити вміст директорії за віртуальним шляхом)\n      else if (command[0] === \"ls\") {\n      }\n      // Показати в якій директорії знаходиться користувач (знову ж таки віртуально)\n      else if (command[0] === \"pwd\") {\n        result = pathForTerminal;\n      }\n      // Новий файл\n      else if (command[0] === \"new\" || command[0] === \"новий\") {\n        result = \"Новий файл!\";\n      }\n      // Відкриття файлу\n      else if (command[0] === \"open\" || command[0] === \"відкрити\") {\n        result = \"Відкриття файлу!\";\n      }\n      // Закрити термінал\n      else if (command[0] === \"close\" || command[0] === \"закрити\") {\n        onClose();\n      }\n      // Допомога\n      else if (command[0] === \"help\" || command[0] === \"допомога\") {\n        result = t(\"terminal.help\");\n      }\n      // Змінити мову\n      else if (command[0] === \"language\" || command[0] === \"мова\") {\n        if (command.length === 1) {\n          result = t(\"terminal.language\");\n        } else if (command[1] === \"українська\" || command[1] === \"ukrainian\") {\n          onlanguagechange(\"ua\");\n          result = \"Українську мову встановлено\";\n        } else if (command[1] === \"english\" || command[1] === \"англійська\") {\n          onlanguagechange(\"en\");\n          result = \"English is set\";\n        } else {\n          result = \"При встановлені мови відбулася помилка\";\n        }\n      }\n      // Встановити тему\n      else if (command[0] === \"theme\" || command[0] === \"тема\") {\n        result = \"Тему змінено\";\n      }\n      // Встановлення інтервалу автозбереження\n      else if (command[0] === \"autosave\" || command[0] === \"автозбереження\") {\n        result = \"Новий інтервал встановлено\";\n      }\n      // Закрити програму\n      else if (command[0] === \"exit\" || command[0] === \"вихід\") {\n        onExit();\n      }\n      // Очистити термінал\n      else if (command[0] === \"clear\" || command[0] === \"очистити\") {\n        setOutputValues(initialOutputValues);\n        setInputValue(initialInputValue);\n        return;\n      }\n      // Невідома команда\n      else {\n        result = t(\"terminal.error\");\n      }\n      setOutputValues([...outputValues, { command: command, result: result }]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <div className={`terminal-container ${visible ? \"visible\" : \"hidden\"}`}>\n      <div className=\"terminal-header\">\n        <h5>Terminal</h5>\n      </div>\n      <div className=\"terminal-content\">\n        <div className=\"output-wrapper\" ref={outputWrapperRef}>\n          {outputValues.map((output, index) => (\n            // <div key={index} className=\"output\">\n            //   <div>{\"> \" + output.command}</div>\n            //   {/* <div>{output.result}</div> */}\n            //   <pre>{output.result}</pre>\n            // </div>\n            <div key={index} className=\"output\">\n              <div>{\"> \" + output.command}</div>\n              <pre dangerouslySetInnerHTML={{ __html: output.result }} />\n            </div>\n          ))}\n        </div>\n        <div className=\"input-wrapper\">\n          <span>₴ </span>\n          <input\n            type=\"text\"\n            placeholder=\"...\"\n            value={inputValue}\n            onChange={handleInputChange}\n            onKeyPress={handleKeyPress}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}