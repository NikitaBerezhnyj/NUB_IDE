{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { invoke } from \"@tauri-apps/api/tauri\";\nimport { exit } from \"@tauri-apps/api/process\";\nimport { save, open } from \"@tauri-apps/api/dialog\";\nimport { readTextFile } from \"@tauri-apps/api/fs\";\nimport TopBarMenu from \"./Components/Top_Bar_Menu_Component/Top_Bar_Menu\";\nimport StartScreen from \"./Components/Start_Screen_Component/StartScreen\";\nimport CodeEditor from \"./Components/Code_Editor_Component/Code_Editor\";\nimport Help from \"./Components/Help_Component/Help\";\nimport Terminal from \"./Components/Terminal_component/Terminal\";\nimport \"./App.css\";\nimport { paste } from \"@testing-library/user-event/dist/paste\";\nimport { changeLanguage } from \"i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [startVisible, setStartVisible] = useState(true);\n  const [filePath, setFilePath] = useState(null);\n  const [fileContent, setFileContent] = useState(\"\");\n  const [terminalLang, setTerminalLang] = useState(false);\n  const [programmingLanguage, setProgrammingLanguage] = useState(\"\");\n\n  // Функція для визначення мови програмування за шляхом файлу\n  const getProgrammingLanguage = filePath => {\n    const extension = filePath.split(\".\").pop();\n    switch (extension) {\n      case \"nl\":\n        return \"NikLang\";\n      case \"udav\":\n        return \"Udav\";\n      case \"based\":\n        return \"Based\";\n      default:\n        return \"Other\";\n    }\n  };\n\n  // Функція для зміни стану відображення терміналу\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n\n  // Функція для зміни стану відображення довідки\n  const toggleHelp = () => {\n    setHelpVisible(!helpVisible);\n  };\n  const exitFromApp = async () => {\n    await exit(0);\n  };\n\n  // Прив'язка відкриття та закриття терміналу на Ctrl + `\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.ctrlKey && event.key === \"`\") {\n        event.preventDefault();\n        toggleTerminal();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [toggleTerminal]);\n\n  //\n  const handleCopy = () => {\n    document.execCommand(\"copy\");\n  };\n\n  //\n  const handleCut = () => {\n    document.execCommand(\"cut\");\n  };\n\n  //\n  const handlePaste = () => {\n    document.execCommand(\"paste\");\n  };\n\n  //\n  const handleUndo = () => {};\n\n  //\n  const handleRedo = () => {};\n\n  //\n  const handleSelectAll = () => {\n    const textarea = document.getElementById(\"textarea\").select();\n  };\n\n  //\n  const handleLangChange = lang => {\n    // setTerminalLang(lang);\n    console.log(lang);\n  };\n\n  // Функція для збереження вмісту файлу\n  const saveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        savePath = await save({\n          filters: [{\n            name: \"Text file\",\n            extensions: [\"**\"]\n          }, {\n            name: \"Niklang.nl\",\n            extensions: [\"nl\"]\n          }, {\n            name: \"Based.based\",\n            extensions: [\"based\"]\n          }, {\n            name: \"Udav.udav\",\n            extensions: [\"udav\"]\n          }]\n        });\n        if (!savePath) return;\n        setFilePath(savePath);\n      }\n      await invoke(\"save_file\", {\n        path: savePath,\n        contents: fileContent\n      });\n      if (savePath) {\n        setStartVisible(false);\n      } else {\n        setStartVisible(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const autosaveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        return;\n      } else {\n        await invoke(\"save_file\", {\n          path: savePath,\n          contents: fileContent\n        });\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція для створення нового файлу\n  const newFileContents = async () => {\n    try {\n      let newFilePath = await save({\n        filters: [{\n          name: \"Text File\",\n          extensions: [\"**\"]\n        }, {\n          name: \"Niklang.nl\",\n          extensions: [\"nl\"]\n        }, {\n          name: \"Based.based\",\n          extensions: [\"based\"]\n        }, {\n          name: \"Udav.udav\",\n          extensions: [\"udav\"]\n        }]\n      });\n      if (!newFilePath) return;\n      setFilePath(newFilePath);\n      const language = getProgrammingLanguage(newFilePath);\n      setProgrammingLanguage(language);\n      await invoke(\"create_file\", {\n        path: newFilePath\n      });\n      setStartVisible(false);\n      setFileContent(\"new_file\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція відкриття файлу\n  const openFileContent = async () => {\n    try {\n      const selectedPath = await open({\n        multiple: false,\n        title: \"Open file\",\n        filters: [{\n          name: \"Text File\",\n          extensions: [\"**\"]\n        }, {\n          name: \"Niklang.nl\",\n          extensions: [\"nl\"]\n        }, {\n          name: \"Based.based\",\n          extensions: [\"based\"]\n        }, {\n          name: \"Udav.udav\",\n          extensions: [\"udav\"]\n        }]\n      });\n      if (!selectedPath) return;\n      const fileContent = await readTextFile(selectedPath);\n      setFilePath(selectedPath);\n      const language = getProgrammingLanguage(selectedPath);\n      setProgrammingLanguage(language);\n      setFileContent(fileContent);\n      if (selectedPath) {\n        setStartVisible(false);\n      } else {\n        setStartVisible(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBarMenu, {\n      toggleTerminal: toggleTerminal,\n      toggleHelp: toggleHelp,\n      onSave: saveFileContents,\n      onOpen: openFileContent,\n      onNew: newFileContents,\n      onCopy: handleCopy,\n      onCut: handleCut,\n      onPaste: handlePaste,\n      onUndo: handleUndo,\n      onRedo: handleRedo,\n      onSelectAll: handleSelectAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CodeEditor, {\n      programming_language: programmingLanguage,\n      fileContent: fileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartScreen, {\n      onNew: newFileContents,\n      onOpen: openFileContent,\n      visible: startVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n      visible: terminalVisible,\n      onClose: toggleTerminal,\n      onExit: exitFromApp,\n      onlanguagechange: handleLangChange,\n      filePath: filePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Help, {\n      onClose: toggleHelp,\n      visible: helpVisible,\n      onSave: autosaveFileContents,\n      onChangeLang: terminalLang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WDHzqjE09XIWbeHOHbSGdrJPo3E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","invoke","exit","save","open","readTextFile","TopBarMenu","StartScreen","CodeEditor","Help","Terminal","paste","changeLanguage","jsxDEV","_jsxDEV","App","_s","terminalVisible","setTerminalVisible","helpVisible","setHelpVisible","startVisible","setStartVisible","filePath","setFilePath","fileContent","setFileContent","terminalLang","setTerminalLang","programmingLanguage","setProgrammingLanguage","getProgrammingLanguage","extension","split","pop","toggleTerminal","toggleHelp","exitFromApp","handleKeyDown","event","ctrlKey","key","preventDefault","window","addEventListener","removeEventListener","handleCopy","document","execCommand","handleCut","handlePaste","handleUndo","handleRedo","handleSelectAll","textarea","getElementById","select","handleLangChange","lang","console","log","saveFileContents","savePath","filters","name","extensions","path","contents","err","error","autosaveFileContents","newFileContents","newFilePath","language","openFileContent","selectedPath","multiple","title","className","children","onSave","onOpen","onNew","onCopy","onCut","onPaste","onUndo","onRedo","onSelectAll","fileName","_jsxFileName","lineNumber","columnNumber","programming_language","visible","onClose","onExit","onlanguagechange","onChangeLang","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { invoke } from \"@tauri-apps/api/tauri\";\nimport { exit } from \"@tauri-apps/api/process\";\nimport { save, open } from \"@tauri-apps/api/dialog\";\nimport { readTextFile } from \"@tauri-apps/api/fs\";\nimport TopBarMenu from \"./Components/Top_Bar_Menu_Component/Top_Bar_Menu\";\nimport StartScreen from \"./Components/Start_Screen_Component/StartScreen\";\nimport CodeEditor from \"./Components/Code_Editor_Component/Code_Editor\";\nimport Help from \"./Components/Help_Component/Help\";\nimport Terminal from \"./Components/Terminal_component/Terminal\";\nimport \"./App.css\";\nimport { paste } from \"@testing-library/user-event/dist/paste\";\nimport { changeLanguage } from \"i18next\";\n\nfunction App() {\n  const [terminalVisible, setTerminalVisible] = useState(false);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [startVisible, setStartVisible] = useState(true);\n  const [filePath, setFilePath] = useState(null);\n  const [fileContent, setFileContent] = useState(\"\");\n  const [terminalLang, setTerminalLang] = useState(false);\n  const [programmingLanguage, setProgrammingLanguage] = useState(\"\");\n\n  // Функція для визначення мови програмування за шляхом файлу\n  const getProgrammingLanguage = (filePath) => {\n    const extension = filePath.split(\".\").pop();\n    switch (extension) {\n      case \"nl\":\n        return \"NikLang\";\n      case \"udav\":\n        return \"Udav\";\n      case \"based\":\n        return \"Based\";\n      default:\n        return \"Other\";\n    }\n  };\n\n  // Функція для зміни стану відображення терміналу\n  const toggleTerminal = () => {\n    setTerminalVisible(!terminalVisible);\n  };\n\n  // Функція для зміни стану відображення довідки\n  const toggleHelp = () => {\n    setHelpVisible(!helpVisible);\n  };\n\n  const exitFromApp = async () => {\n    await exit(0);\n  };\n\n  // Прив'язка відкриття та закриття терміналу на Ctrl + `\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.ctrlKey && event.key === \"`\") {\n        event.preventDefault();\n        toggleTerminal();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [toggleTerminal]);\n\n  //\n  const handleCopy = () => {\n    document.execCommand(\"copy\");\n  };\n\n  //\n  const handleCut = () => {\n    document.execCommand(\"cut\");\n  };\n\n  //\n  const handlePaste = () => {\n    document.execCommand(\"paste\");\n  };\n\n  //\n  const handleUndo = () => {};\n\n  //\n  const handleRedo = () => {};\n\n  //\n  const handleSelectAll = () => {\n    const textarea = document.getElementById(\"textarea\").select();\n  };\n\n  //\n  const handleLangChange = (lang) => {\n    // setTerminalLang(lang);\n    console.log(lang);\n  };\n\n  // Функція для збереження вмісту файлу\n  const saveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        savePath = await save({\n          filters: [\n            { name: \"Text file\", extensions: [\"**\"] },\n            { name: \"Niklang.nl\", extensions: [\"nl\"] },\n            { name: \"Based.based\", extensions: [\"based\"] },\n            { name: \"Udav.udav\", extensions: [\"udav\"] },\n          ],\n        });\n        if (!savePath) return;\n        setFilePath(savePath);\n      }\n      await invoke(\"save_file\", { path: savePath, contents: fileContent });\n      if (savePath) {\n        setStartVisible(false);\n      } else {\n        setStartVisible(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const autosaveFileContents = async (fileContent, savePath = filePath) => {\n    try {\n      if (!savePath) {\n        return;\n      } else {\n        await invoke(\"save_file\", { path: savePath, contents: fileContent });\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція для створення нового файлу\n  const newFileContents = async () => {\n    try {\n      let newFilePath = await save({\n        filters: [\n          { name: \"Text File\", extensions: [\"**\"] },\n          { name: \"Niklang.nl\", extensions: [\"nl\"] },\n          { name: \"Based.based\", extensions: [\"based\"] },\n          { name: \"Udav.udav\", extensions: [\"udav\"] },\n        ],\n      });\n      if (!newFilePath) return;\n      setFilePath(newFilePath);\n      const language = getProgrammingLanguage(newFilePath);\n      setProgrammingLanguage(language);\n      await invoke(\"create_file\", { path: newFilePath });\n      setStartVisible(false);\n      setFileContent(\"new_file\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Функція відкриття файлу\n  const openFileContent = async () => {\n    try {\n      const selectedPath = await open({\n        multiple: false,\n        title: \"Open file\",\n        filters: [\n          { name: \"Text File\", extensions: [\"**\"] },\n          { name: \"Niklang.nl\", extensions: [\"nl\"] },\n          { name: \"Based.based\", extensions: [\"based\"] },\n          { name: \"Udav.udav\", extensions: [\"udav\"] },\n        ],\n      });\n      if (!selectedPath) return;\n      const fileContent = await readTextFile(selectedPath);\n      setFilePath(selectedPath);\n      const language = getProgrammingLanguage(selectedPath);\n      setProgrammingLanguage(language);\n      setFileContent(fileContent);\n      if (selectedPath) {\n        setStartVisible(false);\n      } else {\n        setStartVisible(true);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <TopBarMenu\n        toggleTerminal={toggleTerminal}\n        toggleHelp={toggleHelp}\n        onSave={saveFileContents}\n        onOpen={openFileContent}\n        onNew={newFileContents}\n        onCopy={handleCopy}\n        onCut={handleCut}\n        onPaste={handlePaste}\n        onUndo={handleUndo}\n        onRedo={handleRedo}\n        onSelectAll={handleSelectAll}\n      />\n      <CodeEditor\n        programming_language={programmingLanguage}\n        fileContent={fileContent}\n      />\n      <StartScreen\n        onNew={newFileContents}\n        onOpen={openFileContent}\n        visible={startVisible}\n      />\n      <Terminal\n        visible={terminalVisible}\n        onClose={toggleTerminal}\n        onExit={exitFromApp}\n        onlanguagechange={handleLangChange}\n        filePath={filePath}\n      />\n      <Help\n        onClose={toggleHelp}\n        visible={helpVisible}\n        onSave={autosaveFileContents}\n        onChangeLang={terminalLang}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}