{"ast":null,"code":"var _jsxFileName = \"/home/nikita/\\u041F\\u0440\\u043E\\u0454\\u043A\\u0442\\u0438/NUB_Project/nub-ide/src/Components/Terminal_component/Terminal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from \"react\";\n// import { useTranslation } from \"react-i18next\";\n// import \"./Terminal.css\";\n\n// export default function Terminal({ visible }) {\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [outputValues, setOutputValues] = useState([]);\n//   const outputWrapperRef = useRef(null);\n\n//   // Локалізація програми\n//   const { t, i18n } = useTranslation(\"global\");\n\n//   const scrollToBottom = () => {\n//     if (outputWrapperRef.current) {\n//       outputWrapperRef.current.scrollTop =\n//         outputWrapperRef.current.scrollHeight;\n//     }\n//   };\n\n//   useEffect(() => {\n//     scrollToBottom(); // Прокручуємо до нижнього краю після кожного оновлення вмісту\n//   }, [outputValues]);\n\n//   const handleInputChange = (event) => {\n//     setInputValue(event.target.value);\n//   };\n\n//   // const handleKeyPress = (event) => {\n//   //   if (event.key === \"Enter\") {\n//   //     console.log(\"Enter pressed\");\n//   //     const newOutput = inputValue; // Записати введену команду\n//   //     // Тут викликати функцію для виконання команди і отримання результату\n//   //     setOutputValues([\n//   //       ...outputValues,\n//   //       { command: inputValue, result: inputValue },\n//   //     ]); // Додати введену команду та результат до стану\n//   //     setInputValue(\"\"); // Очистити поле вводу\n//   //   }\n//   // };\n//   const handleKeyPress = (event) => {\n//     if (event.key === \"Enter\") {\n//       console.log(\"Enter pressed\");\n//       const command = inputValue.trim();\n//       let result;\n//       if (command === \"new\" || command === \"новий\") {\n//         result = \"Новий файл!\";\n//       } else if (command === \"clear\" || command === \"очистити\") {\n//         setOutputValues([]);\n//       } else {\n//         result = t(\"terminal.error\");\n//       }\n\n//       setOutputValues([...outputValues, { command: command, result: result }]); // Додати введену команду та результат до стану\n//       setInputValue(\"\"); // Очистити поле вводу\n//     }\n//   };\n\n//   return (\n//     <div className={`terminal-container ${visible ? \"visible\" : \"hidden\"}`}>\n//       <div className=\"terminal-header\">\n//         <h5>Terminal</h5>\n//       </div>\n//       <div className=\"terminal-content\">\n//         <div className=\"output-wrapper\" ref={outputWrapperRef}>\n//           {outputValues.map((output, index) => (\n//             <div key={index} className=\"output\">\n//               <div>{\"> \" + output.command}</div>\n//               <div>{output.result}</div>\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"input-wrapper\">\n//           <span>₴ </span>\n//           <input\n//             type=\"text\"\n//             placeholder=\"...\"\n//             value={inputValue}\n//             onChange={handleInputChange}\n//             onKeyPress={handleKeyPress}\n//           />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./Terminal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialOutputValues = []; // Початковий стан для outputValues\n\nexport default function Terminal({\n  visible\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValues, setOutputValues] = useState(initialOutputValues);\n  const outputWrapperRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [outputValues]);\n  const scrollToBottom = () => {\n    if (outputWrapperRef.current) {\n      outputWrapperRef.current.scrollTop = outputWrapperRef.current.scrollHeight;\n    }\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      console.log(\"Enter pressed\");\n      const command = inputValue.trim();\n      let result;\n      if (command === \"new\" || command === \"новий\") {\n        result = \"Новий файл!\";\n      } else if (command === \"clear\" || command === \"очистити\") {\n        result = \"Термінал очищено!\";\n        setOutputValues(initialOutputValues); // Очистити термінал\n      } else {\n        result = \"Невідома команда\";\n      }\n      setOutputValues([...outputValues, {\n        command: command,\n        result: result\n      }]);\n      setInputValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `terminal-container ${visible ? \"visible\" : \"hidden\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Terminal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-wrapper\",\n        ref: outputWrapperRef,\n        children: outputValues.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"output\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"> \" + output.command\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: output.result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u20B4 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"...\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Terminal, \"nvlxuGmir3bxJue7CExtvjTz83U=\");\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","initialOutputValues","Terminal","visible","_s","inputValue","setInputValue","outputValues","setOutputValues","outputWrapperRef","scrollToBottom","current","scrollTop","scrollHeight","handleInputChange","event","target","value","handleKeyPress","key","console","log","command","trim","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","output","index","type","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["/home/nikita/Проєкти/NUB_Project/nub-ide/src/Components/Terminal_component/Terminal.jsx"],"sourcesContent":["// import React, { useState, useRef, useEffect } from \"react\";\n// import { useTranslation } from \"react-i18next\";\n// import \"./Terminal.css\";\n\n// export default function Terminal({ visible }) {\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [outputValues, setOutputValues] = useState([]);\n//   const outputWrapperRef = useRef(null);\n\n//   // Локалізація програми\n//   const { t, i18n } = useTranslation(\"global\");\n\n//   const scrollToBottom = () => {\n//     if (outputWrapperRef.current) {\n//       outputWrapperRef.current.scrollTop =\n//         outputWrapperRef.current.scrollHeight;\n//     }\n//   };\n\n//   useEffect(() => {\n//     scrollToBottom(); // Прокручуємо до нижнього краю після кожного оновлення вмісту\n//   }, [outputValues]);\n\n//   const handleInputChange = (event) => {\n//     setInputValue(event.target.value);\n//   };\n\n//   // const handleKeyPress = (event) => {\n//   //   if (event.key === \"Enter\") {\n//   //     console.log(\"Enter pressed\");\n//   //     const newOutput = inputValue; // Записати введену команду\n//   //     // Тут викликати функцію для виконання команди і отримання результату\n//   //     setOutputValues([\n//   //       ...outputValues,\n//   //       { command: inputValue, result: inputValue },\n//   //     ]); // Додати введену команду та результат до стану\n//   //     setInputValue(\"\"); // Очистити поле вводу\n//   //   }\n//   // };\n//   const handleKeyPress = (event) => {\n//     if (event.key === \"Enter\") {\n//       console.log(\"Enter pressed\");\n//       const command = inputValue.trim();\n//       let result;\n//       if (command === \"new\" || command === \"новий\") {\n//         result = \"Новий файл!\";\n//       } else if (command === \"clear\" || command === \"очистити\") {\n//         setOutputValues([]);\n//       } else {\n//         result = t(\"terminal.error\");\n//       }\n\n//       setOutputValues([...outputValues, { command: command, result: result }]); // Додати введену команду та результат до стану\n//       setInputValue(\"\"); // Очистити поле вводу\n//     }\n//   };\n\n//   return (\n//     <div className={`terminal-container ${visible ? \"visible\" : \"hidden\"}`}>\n//       <div className=\"terminal-header\">\n//         <h5>Terminal</h5>\n//       </div>\n//       <div className=\"terminal-content\">\n//         <div className=\"output-wrapper\" ref={outputWrapperRef}>\n//           {outputValues.map((output, index) => (\n//             <div key={index} className=\"output\">\n//               <div>{\"> \" + output.command}</div>\n//               <div>{output.result}</div>\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"input-wrapper\">\n//           <span>₴ </span>\n//           <input\n//             type=\"text\"\n//             placeholder=\"...\"\n//             value={inputValue}\n//             onChange={handleInputChange}\n//             onKeyPress={handleKeyPress}\n//           />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./Terminal.css\";\n\nconst initialOutputValues = []; // Початковий стан для outputValues\n\nexport default function Terminal({ visible }) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [outputValues, setOutputValues] = useState(initialOutputValues);\n  const outputWrapperRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [outputValues]);\n\n  const scrollToBottom = () => {\n    if (outputWrapperRef.current) {\n      outputWrapperRef.current.scrollTop =\n        outputWrapperRef.current.scrollHeight;\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      console.log(\"Enter pressed\");\n      const command = inputValue.trim();\n      let result;\n\n      if (command === \"new\" || command === \"новий\") {\n        result = \"Новий файл!\";\n      } else if (command === \"clear\" || command === \"очистити\") {\n        result = \"Термінал очищено!\";\n        setOutputValues(initialOutputValues); // Очистити термінал\n      } else {\n        result = \"Невідома команда\";\n      }\n\n      setOutputValues([...outputValues, { command: command, result: result }]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <div className={`terminal-container ${visible ? \"visible\" : \"hidden\"}`}>\n      <div className=\"terminal-header\">\n        <h5>Terminal</h5>\n      </div>\n      <div className=\"terminal-content\">\n        <div className=\"output-wrapper\" ref={outputWrapperRef}>\n          {outputValues.map((output, index) => (\n            <div key={index} className=\"output\">\n              <div>{\"> \" + output.command}</div>\n              <div>{output.result}</div>\n            </div>\n          ))}\n        </div>\n        <div className=\"input-wrapper\">\n          <span>₴ </span>\n          <input\n            type=\"text\"\n            placeholder=\"...\"\n            value={inputValue}\n            onChange={handleInputChange}\n            onKeyPress={handleKeyPress}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}